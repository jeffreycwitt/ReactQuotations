{"version":3,"sources":["vendor/CETEI.js","vendor/behaviors.js","components/Search.jsx","components/Quotation.jsx","components/QuotationList.jsx","components/FocusedQuotation.jsx","components/CanonicalQuotation.jsx","components/CanonicalQuotationListItem.jsx","components/CanonicalQuotationList.jsx","components/ManifestationQuotationListItem.jsx","components/ManifestationQuotationList.jsx","components/Paragraph.jsx","components/BarChart.jsx","components/Images.jsx","components/FullText.jsx","components/TodoApp.js","components/Main.jsx","index.js","reducers/searchReducer.jsx","reducers/chartReducer.jsx","reducers/imagesReducer.jsx","reducers/quotationsReducer.jsx","reducers/focusedQuotationReducer.jsx","reducers/canonicalQuotationReducer.jsx","reducers/canonicalQuotationsReducer.jsx","reducers/manifestationQuotationsReducer.jsx","reducers/paragraphReducer.jsx","reducers/sourceParagraphReducer.jsx","reducers/fullTextReducer.jsx","store/configureStore.jsx","actions/actions.jsx"],"names":["behaviors","require","CETEI","base","this","els","hasStyle","prefixes","window","location","href","replace","e","push","supportsShadowDom","document","head","createShadowRoot","attachShadow","TEI_url","callback","perElementFn","startsWith","indexOf","Promise","resolve","reject","client","XMLHttpRequest","open","send","onload","status","response","statusText","onerror","catch","reason","console","log","then","TEI","makeHTML5","TEI_dom","DOMParser","parseFromString","doc","domToHTML5","registerTEIElements","_fromTEI","dom","convertEl","el","newElement","copy","namespaceURI","createElement","tagName","importNode","Array","from","attributes","att","name","setAttribute","value","localName","childNodes","length","style","node","nodeType","Node","ELEMENT_NODE","getAttribute","rule","hasAttribute","textContent","appendChild","createTextNode","cloneNode","documentElement","registerElement","registerAll","fallback","done","data","getElementsByTagName","item","shadow","shadowCSS","innerHTML","bhvs","root_el","Set","getElementsByTagNameNS","x","add","elt","strings","span","includes","children","str","result","search","replacements","re","exec","call","ceteicean","i","_template","_insert","fn","isArray","append","decorator","self","content","_appendShadow","querySelector","nodeName","_appendBasic","mode","addShadowStyle","hideContent","names","proto","Object","create","HTMLElement","prototype","getHandler","createdCallback","prefixedName","error","getFallback","url","match","urls","stripElt","attr","serialize","PROCESSING_INSTRUCTION_NODE","nodeValue","COMMENT_NODE","hidden","localStorage","setItem","scrollY","getItem","scrollTo","unload","savePosition","load","restorePosition","module","exports","test","Image","src","rw","width","height","dl","child","dt","dd","table","firstElementChild","remove","caption","querySelectorAll","row","tr","parentElement","replaceChild","cell","td","pre","connect","actions","Search","props","handleSetSearchText","bind","handleOnShowQuotationsWithoutAssociation","handleRunQuery","handleGraph","handleClearFilters","dispatch","searchText","refs","searchParameters","setSearchParameters","preventDefault","quotationWorkGroup","quotationExpressionType","quotationWork","quotationWorkPart","expressionId","expressionPart","split","expressionLevel","expressionAuthor","expressionAuthorType","quotationAuthor","quotationAuthorType","expressionType","workGroup","quotationAuthorDateAfter","quotationAuthorDateBefore","expressionAuthorDateAfter","expressionAuthorDateBefore","structureElementType","fetchQuotationWorkParts","fetchExpressionParts","fetchSearchWorksList","fetchQuotationWorksList","fetchQuotationAuthors","fetchExpressionAuthors","clearCanonicalQuotation","clearFocusedQuotation","clearManifestationQuotations","clearParagraph","clearSourceParagraph","fetchCanonicalQuotations","fetchQuotations","fetchChart","clearSearchParameters","clearCanonicalQuotations","clearQuotations","fetchWorkGroups","fetchAuthorTypes","toggleGraphDisplay","chart","visible","_this","displayWorkGroupsList","workGroups","map","workGroupShortId","workGroupTitle","onSubmit","id","onClick","Group","Label","Control","as","ref","onChange","type","placeholder","authorTypes","authorType","authorTypeShortId","authorTypeTitle","onBlur","quotationAuthors","author","authorShortId","authorTitle","quotationExpressionTypes","quotationExpressionTypeShortId","quotationExpressionTypeTitle","quotationWorksList","work","expressionShortId","expression","expressionTitle","quotationWorkParts","part","grandparentid","grandparent","undefined","grandparent_title","displayQuotationWorkPartsGrandparent","parentid","parent","parent_title","displayQuotationWorkPartsParent","childShortId","child_title","displayQuotationWorkParts","expressionAuthors","expressionTypes","expressionTypeShortId","expressionTypeTitle","searchWorks","expressionParts","grandparent_level","displayExpressionPartsGrandparent","parent_level","displayExpressionPartsParent","child_level","displayExpressionParts","React","Component","state","Quotation","handleOnClick","isInstanceOf","quotation","source","changeQuotationsFocus","newFocusedQuotationObject","createFocusedQuotation","fetchParagraph","fetchSourceParagraph","fetchManifestationQuotations","canonicalQuotationObject","canonicalQuotations","find","createCanonicalQuotation","changeCanonicalQuotationsFocus","topPos","getElementById","offsetTop","$","animate","scrollTop","selfTopPos","alert","clearCanonicalQuotationsFocus","className","title","refText","citation","target","QuotationList","quotations","focusedQuotation","quotationClass","refType","classes","key","FocusedQuotation","CanonicalQuotation","canonicalQuotation","displayQuotation","displayQuotationId","CanonicalQuotationListItem","quotationObject","clearQuotationsFocus","CanonicalQuotationList","focused","ManifestationQuotationListItem","isManifestationOf","changeManifestationQuotationsFocus","isManifestationOfObject","ManifestationQuotationList","manifestationQuotations","cetei","Paragraph","handleShowImages","handleShowFullText","runQueryForSource","addTEICustom","fetchImages","toggleImagesDisplay","images","fetchFullText","toggleFullTextDisplay","fullText","htmlText","paragraph","sourceParagraph","paragraph_text","quoteid","pop","text","emptyTextNode","sourceId","manifestation_id","expression_id","review","showFullTextToggle","d3","BarChart","createBarChart","count","prevProps","prevState","selectAll","select","filter","d","countArray","margin","colors","scale","linear","domain","range","yScale","max","xScale","ordinal","rangeBands","tooltip","enter","rangeBand","on","transition","html","event","pageX","pageY","left","top","delay","duration","ease","vGuideScale","vAxis","svg","axis","orient","ticks","vGuide","fill","stroke","hAxis","tickValues","hGuide","handleToggleImage","image","imageUrl","showImages","FullText","handleToggleFullText","textInfo","sourceid","TodoApp","quotationDisplay","size","barGraphDisplay","Images","imagesDisplay","fullTextDisplay","Main","store","configure","subscribe","getState","fetchExpressionTypes","fetchQuotationExpressionTypes","ReactDOM","render","searchReducer","action","listOfWorks","authors","parts","chartReducer","current","imagesReducer","quotationsReducer","quotation_text","toplevel_expression_title","author_title","reverse","updatedState","focusedQuotationReducer","canonicalQuotationReducer","canonicalQuotationsReducer","manifestationQuotationsReducer","paragraphReducer","sourceParagraphReducer","fullTextReducer","redux","thunk","default","initialState","reducer","combineReducers","createStore","compose","applyMiddleware","devToolsExtension","f","sparqlEndpoint","startSearchWorksFetch","completeSearchWorksFetch","workGroupSparql","join","expressionAuthorTypeSparql","authorSparql","query","axios","get","params","res","results","bindings","startQuotationAuthorsFetch","completeQuotationAuthorsFetch","quotationAuthorTypeSparql","quotationAuthorDateSparql","quotationAuthorDateAfterSparqlFilter","quotationAuthorDateBeforeSparqlFilter","startExpressionAuthorsFetch","completeExpressionAuthorsFetch","expressionAuthorDateSparql","expressionAuthorDateAfterSparqlFilter","expressionAuthorDateBeforeSparqlFilter","startQuotationWorksListFetch","completeQuotationWorksListFetch","quotationWorkGroupSparql","quotationAuthorSparql","startQuotationWorkPartsFetch","completeQuotationWorkPartsFetch","startExpressionPartsFetch","completeExpressionPartsFetch","currentNode","startQuotationExpressionTypeFetch","completeQuotationExpressionTypeFetch","startExpressionTypeFetch","completeExpressionTypeFetch","startWorkGroupsFetch","completeWorkGroupsFetch","startAuthorTypesFetch","completeAuthorTypesFetch","startChartFetch","completeChartFetch","level","parseInt","expressionWorkGroupSparql","expressionAuthorSparql","expressionAuthorCoreSparql","searchShortId","quotationAuthorCoreSparql","quotationWorkSparql","structureElementTypeSparql","reftitle","startImagesFetch","completeImagesFetch","addQuotations","startQuotationsFetch","completeQuotationsFetch","expressionIdSparql","quotationExpressionTypeSparql","expressionTypeSparql","startCanonicalQuotationsFetch","completeCanonicalQuotationsFetch","quotationInstanceSparql","topLevelExpressionSparql","clearManifestationQuotationsFocus","startManifestationQuotationsFetch","completeManifestationQuotationsFetch","startParagraphFetch","completeParagraphFetch","quotationId","idType","xml_url","res2","expression_paragraph","manifestation_paragraph","transcription_id","transcription_paragraph","transcription_item_file","fetchReview","startReviewFetch","completeReviewFetch","reviewUrl","startSourceParagraphFetch","completeSourceParagraphFetch","startSourceParagraphReviewFetch","completeSourceParagraphReviewFetch","fetchSourceParagraphReview","clearFullText","startFullTextFetch","completeFullTextFetch","expression_item","manifestation_item","transcription_item"],"mappings":"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","file":"static/js/main.732c67f3.chunk.js","sourcesContent":["var behaviors = require('./behaviors');\nclass CETEI {\n\n    constructor(base){\n        this.els = [];\n        this.behaviors = [];\n        this.hasStyle = false;\n        this.prefixes = [];\n        if (base) {\n          this.base = base;\n        } else {\n          try {\n            if (window) {\n              this.base = window.location.href.replace(/\\/[^\\/]*$/, \"/\");\n            }\n          } catch (e) {\n            this.base = \"\";\n          }\n        }\n        this.behaviors.push(behaviors);\n        //this.shadowCSS;\n        this.supportsShadowDom = document.head.createShadowRoot || document.head.attachShadow;\n    }\n\n    // public method\n    /* Returns a Promise that fetches a TEI source document from the URL\n       provided in the first parameter and then calls the makeHTML5 method\n       on the returned document.\n     */\n    getHTML5(TEI_url, callback, perElementFn){\n        if (window.location.href.startsWith(this.base) && (TEI_url.indexOf(\"/\") >= 0)) {\n          this.base = TEI_url.replace(/\\/[^\\/]*$/, \"/\");\n        }\n        // Get TEI from TEI_url and create a promise\n        let promise = new Promise( function (resolve, reject) {\n            let client = new XMLHttpRequest();\n\n            client.open('GET', TEI_url);\n            client.send();\n\n            client.onload = function () {\n              if (this.status >= 200 && this.status < 300) {\n                resolve(this.response);\n              } else {\n                reject(this.statusText);\n              }\n            };\n            client.onerror = function () {\n              reject(this.statusText);\n            };\n        })\n        .catch( function(reason) {\n            // TODO: better error handling?\n            console.log(reason);\n        });\n\n        return promise.then((TEI) => {\n            return this.makeHTML5(TEI, callback, perElementFn);\n        });\n\n    }\n\n    /* Converts the supplied TEI string into HTML5 Custom Elements. If a callback\n       function is supplied, calls it on the result.\n     */\n    makeHTML5(TEI, callback, perElementFn){\n      // TEI is assumed to be a string\n      let TEI_dom = ( new DOMParser() ).parseFromString(TEI, \"text/xml\");\n      var doc = this.domToHTML5(TEI_dom, callback, perElementFn);\n      return this.registerTEIElements(doc, callback);\n\n    }\n\n    /* Converts the supplied TEI DOM into HTML5 Custom Elements. If a callback\n       function is supplied, calls it on the result.\n    */\n    domToHTML5(TEI_dom, callback, perElementFn){\n\n      this._fromTEI(TEI_dom);\n\n      let convertEl = (el) => {\n          // Create new element. TEI elements get prefixed with 'tei-',\n          // TEI example elements with 'teieg-'. All others keep\n          // their namespaces and are copied as-is.\n          let newElement;\n          let copy = false;\n          switch (el.namespaceURI) {\n            case \"http://www.tei-c.org/ns/1.0\":\n              newElement = document.createElement(\"tei-\" + el.tagName);\n              break;\n            case \"http://www.tei-c.org/ns/Examples\":\n              if (el.tagName == \"egXML\") {\n                newElement = document.createElement(\"teieg-\" + el.tagName);\n                break;\n              }\n            case \"http://relaxng.org/ns/structure/1.0\":\n              newElement = document.createElement(\"rng-\" + el.tagName);\n              break;\n            default:\n              newElement = document.importNode(el, false);\n              copy = true;\n          }\n          // Copy attributes; @xmlns, @xml:id, @xml:lang, and\n          // @rendition get special handling.\n          for (let att of Array.from(el.attributes)) {\n              if (!att.name.startsWith(\"xmlns\") || copy) {\n                newElement.setAttribute(att.name, att.value);\n              } else {\n                if (att.name == \"xmlns\")\n                newElement.setAttribute(\"data-xmlns\", att.value); //Strip default namespaces, but hang on to the values\n              }\n              if (att.name == \"xml:id\" && !copy) {\n                newElement.setAttribute(\"id\", att.value);\n              }\n              if (att.name == \"xml:lang\" && !copy) {\n                newElement.setAttribute(\"lang\", att.value);\n              }\n              if (att.name == \"rendition\") {\n                newElement.setAttribute(\"class\", att.value.replace(/#/g, \"\"));\n              }\n          }\n          // Preserve element name so we can use it later\n          newElement.setAttribute(\"data-teiname\", el.localName);\n          // If element is empty, flag it\n          if (el.childNodes.length == 0) {\n            newElement.setAttribute(\"data-empty\", \"\");\n          }\n          // Turn <rendition scheme=\"css\"> elements into HTML styles\n          if (el.localName == \"tagsDecl\") {\n            let style = document.createElement(\"style\");\n            for (let node of Array.from(el.childNodes)){\n              if (node.nodeType == Node.ELEMENT_NODE && node.localName == \"rendition\" && node.getAttribute(\"scheme\") == \"css\") {\n                let rule = \"\";\n                if (node.hasAttribute(\"selector\")) {\n                  //rewrite element names in selectors\n                  rule += node.getAttribute(\"selector\").replace(/([^#, >]+\\w*)/g, \"tei-$1\").replace(/#tei-/g, \"#\") + \"{\\n\";\n                  rule += node.textContent;\n                } else {\n                  rule += \".\" + node.getAttribute(\"xml:id\") + \"{\\n\";\n                  rule += node.textContent;\n                }\n                rule += \"\\n}\\n\";\n                style.appendChild(document.createTextNode(rule));\n              }\n            }\n            if (style.childNodes.length > 0) {\n              newElement.appendChild(style);\n              this.hasStyle = true;\n            }\n          }\n          // Get prefix definitions\n          if (el.localName == \"prefixDef\") {\n            this.prefixes.push(el.getAttribute(\"ident\"));\n            this.prefixes[el.getAttribute(\"ident\")] =\n              {\"matchPattern\": el.getAttribute(\"matchPattern\"),\n              \"replacementPattern\": el.getAttribute(\"replacementPattern\")};\n          }\n          for (let node of Array.from(el.childNodes)){\n              if (node.nodeType == Node.ELEMENT_NODE) {\n                  newElement.appendChild(  convertEl(node)  );\n              }\n              else {\n                  newElement.appendChild(node.cloneNode());\n              }\n          }\n          if (perElementFn) {\n            perElementFn(newElement);\n          }\n          return newElement;\n      }\n\n      return this.dom = convertEl(TEI_dom.documentElement);\n\n\n    }\n\n    registerTEIElements(doc, callback){\n\n      if (doc.registerElement) {\n        this.registerAll(this.els);\n      } else {\n        this.fallback(this.els);\n      }\n      this.done = true;\n      if (callback) {\n          callback(this.dom, this);\n      }\n      else {\n          return this.dom;\n      }\n\n    }\n\n    /* If the TEI document defines CSS styles in its tagsDecl, this method\n       copies them into the wrapper HTML document's head.\n     */\n    addStyle(doc, data) {\n      if (this.hasStyle) {\n        doc.getElementsByTagName(\"head\").item(0).appendChild(data.getElementsByTagName(\"style\").item(0).cloneNode(true));\n      }\n    }\n\n    /* If a URL where CSS for styling Shadow DOM elements lives has been defined,\n       insert it into the Shadow DOM.\n     */\n    addShadowStyle(shadow) {\n      if (this.shadowCSS) {\n        shadow.innerHTML = \"<style>\" + \"@import url(\\\"\" + this.shadowCSS + \"\\\");</style>\" + shadow.innerHTML;\n      }\n    }\n\n    /* Add a user-defined set of behaviors to CETEIcean's processing\n       workflow. Added behaviors will override predefined behaviors with the\n       same name.\n    */\n    addBehaviors(bhvs){\n      if (bhvs[\"handlers\"] || bhvs [\"fallbacks\"]) {\n        this.behaviors.push(bhvs);\n      } else {\n        console.log(\"No handlers or fallback methods found.\");\n      }\n    }\n\n    /* Sets the base URL for the document. Used to rewrite relative links in the\n       XML source (which may be in a completely different location from the HTML\n       wrapper).\n     */\n    setBaseUrl(base) {\n      this.base = base;\n    }\n\n    // \"private\" method\n    _fromTEI(TEI_dom) {\n        let root_el = TEI_dom.documentElement;\n        this.els = new Set( Array.from(root_el.getElementsByTagNameNS(\"http://www.tei-c.org/ns/1.0\", \"*\"), x => x.tagName) );\n        this.els.add(\"egXML\"); // Special case—not in TEI namespace, but needs to be handled\n        this.els.add(root_el.tagName); // Add the root element to the array\n    }\n\n    // private method\n    _insert(elt, strings) {\n      let span = document.createElement(\"span\");\n      if (strings.length > 1) {\n        if (strings[0].includes(\"<\") && strings[1].includes(\"</\")) {\n          span.innerHTML = strings[0] + elt.innerHTML + strings[1];\n        } else {\n          span.innerHTML = \"<span>\" + strings[0] + \"</span>\" + elt.innerHTML + \"<span>\" + strings[1] + \"</span>\";\n        }\n      } else {\n        if (strings[0].includes(\"<\")) {\n          span.innerHTML = strings[0] + elt.innerHTML;\n        } else {\n          span.innerHTML = \"<span>\" + strings[0] + \"</span>\" + elt.innerHTML;\n        }\n      }\n      if (span.children.length > 1) {\n        return span;\n      } else {\n        return span.children[0];\n      }\n    }\n\n    // private method\n    _template(str, elt) {\n      let result = str;\n      if (str.search(/$(\\w*)@(\\w+)/)) {\n        let re = /\\$(\\w*)@(\\w+)/g;\n        let replacements;\n        while (replacements = re.exec(str)) {\n          if (elt.hasAttribute(replacements[2])) {\n            if (replacements[1] && this[replacements[1]]) {\n              result = result.replace(replacements[0], this[replacements[1]].call(this, elt.getAttribute(replacements[2])));\n            } else {\n              result = result.replace(replacements[0], elt.getAttribute(replacements[2]));\n            }\n          }\n        }\n      }\n      return result;\n    }\n\n    tagName(name) {\n      if (name == \"egXML\") {\n        return \"teieg-\" + name;\n      } else {\n        return \"tei-\" + name;\n      }\n    }\n\n    /* Takes a template in the form of an array of 1 or 2 strings and\n       returns a closure around a function that can be called as\n       a createdCallback or applied to an individual element.\n       Called by the getHandler() and getFallback() methods\n    */\n    decorator(strings) {\n      let ceteicean = this;\n      return function (elt) {\n        let copy = [];\n        for (let i = 0; i < strings.length; i++) {\n          copy.push(ceteicean._template(strings[i], elt));\n        }\n        return ceteicean._insert(elt, copy);\n      }\n    }\n\n    /* Returns the handler function for the given element name\n       Called by registerAll().\n     */\n    getHandler(fn) {\n      for (let i = this.behaviors.length - 1; i >= 0; i--) {\n        if (this.behaviors[i][\"handlers\"][fn]) {\n          if (Array.isArray(this.behaviors[i][\"handlers\"][fn])) {\n            return this.append(this.decorator(this.behaviors[i][\"handlers\"][fn]));\n          } else {\n            return this.append(this.behaviors[i][\"handlers\"][fn]);\n          }\n        }\n      }\n    }\n\n    /* Returns the fallback function for the given element name.\n       Called by fallback().\n     */\n    getFallback(fn) {\n      for (let i = this.behaviors.length - 1; i >= 0; i--) {\n        if (this.behaviors[i][\"handlers\"][fn]) {\n          if (Array.isArray(this.behaviors[i][\"handlers\"][fn])) {\n            return this.decorator(this.behaviors[i][\"handlers\"][fn]);\n          } else {\n            return this.behaviors[i][\"handlers\"][fn];\n          }\n        }\n      }\n    }\n\n    /* Appends any element returned by the function passed in the first\n     * parameter to the element in the second parameter. If the function\n     * returns nothing, this is a no-op aside from any side effects caused\n     * by the provided function.\n     * called by getHandler() and fallback()\n     */\n    append(fn, elt) {\n      if (elt) {\n        let content = fn.call(this, elt);\n        if (content && !(elt.querySelector(\":scope > \" + content.nodeName))) {\n          if (this.supportsShadowDom) {\n            this._appendShadow(elt, content);\n          } else {\n            this._appendBasic(elt, content);\n          }\n        }\n      } else {\n        let self = this;\n        if (this.supportsShadowDom) {\n          return function() {\n            let content = fn.call(self, this);\n            if (content) {\n              self._appendShadow(this, content);\n            }\n          }\n        } else {\n          return function() {\n            let content = fn.call(self, this);\n            if (content && !(this.querySelector(\":scope > \" + content.nodeName))) {\n              self._appendBasic(this, content);\n            }\n          }\n        }\n      }\n    }\n\n    /* Private method called by append() if the browser supports Shadow DOM\n     */\n    _appendShadow(elt, content) {\n      var shadow = elt.attachShadow({mode:'open'});\n      this.addShadowStyle(shadow);\n      shadow.appendChild(content);\n    }\n\n    /* Private method called by append() if the browser does not support\n     * Shadow DOM\n     */\n    _appendBasic(elt, content) {\n      this.hideContent(elt);\n      elt.appendChild(content);\n    }\n\n    /* Registers the list of elements provided with the browser.\n       Called by makeHTML5(), but can be called independently if, for example,\n       you've created Custom Elements via an XSLT transformation instead.\n     */\n    registerAll(names) {\n      for (let name of names) {\n        let proto = Object.create(HTMLElement.prototype);\n        let fn = this.getHandler(name);\n        if (fn) {\n          proto.createdCallback = fn;\n        }\n        let prefixedName = this.tagName(name);\n        try {\n          document.registerElement(prefixedName, {prototype: proto});\n        } catch (error) {\n          console.log(prefixedName + \" couldn't be registered or is already registered.\");\n          console.log(error);\n        }\n\n      }\n    }\n\n    /* Provides fallback functionality for browsers where Custom Elements\n       are not supported.\n       Like registerAll(), this is called by makeHTML5(), but can be called\n       independently.\n    */\n    fallback(names) {\n      for (let name of names) {\n        let fn = this.getFallback(name);\n        if (fn) {\n          for (let elt of Array.from(this.dom.getElementsByTagName(this.tagName(name)))) {\n            this.append(fn, elt);\n          }\n        }\n      }\n    }\n\n    /**********************\n     * Utility functions  *\n     **********************/\n\n    /* Takes a relative URL and rewrites it based on the base URL of the\n       HTML document */\n    rw(url) {\n      if (!url.match(/^(?:http|mailto|file|\\/|#).*$/)) {\n        return this.base + url;\n      } else {\n        return url;\n      }\n    }\n\n    /* Given a space-separated list of URLs (e.g. in a ref with multiple\n       targets), returns just the first one.\n     */\n    first(urls) {\n      return urls.replace(/ .*$/, \"\");\n    }\n\n    /* Takes an element and serializes it to a string or, if the stripElt\n       parameter is set, serializes the element's content.\n     */\n    serialize(el, stripElt) {\n      let str = \"\";\n      if (!stripElt) {\n        str += \"&lt;\" + el.getAttribute(\"data-teiname\");\n        for (let attr of Array.from(el.attributes)) {\n          if (!attr.name.startsWith(\"data-\") && !([\"id\", \"lang\", \"class\"].includes(attr.name))) {\n            str += \" \" + attr.name + \"=\\\"\" + attr.value + \"\\\"\";\n          }\n          if (attr.name == \"data-xmlns\") {\n            str += \" xmlns=\\\"\" + attr.value +\"\\\"\";\n          }\n        }\n        if (el.childNodes.length > 0) {\n          str += \">\";\n        } else {\n          str += \"/>\";\n        }\n      }\n      for (let node of Array.from(el.childNodes)) {\n        switch (node.nodeType) {\n          case Node.ELEMENT_NODE:\n            str += this.serialize(node);\n            break;\n          case Node.PROCESSING_INSTRUCTION_NODE:\n            str += \"&lt;?\" + node.nodeValue + \"?>\";\n            break;\n          case Node.COMMENT_NODE:\n            str += \"&lt;!--\" + node.nodeValue + \"-->\";\n            break;\n          default:\n            str += node.nodeValue.replace(/</g, \"&lt;\");\n        }\n      }\n      if (!stripElt && el.childNodes.length > 0) {\n        str += \"&lt;/\" + el.getAttribute(\"data-teiname\") + \">\";\n      }\n      return str;\n    }\n\n    /* Wraps the content of the element parameter in a <span class=\"hide\">\n     * with display set to \"none\".\n     */\n    hideContent(elt) {\n      if (elt.childNodes.length > 0) {\n        let content = elt.innerHTML;\n        elt.innerHTML = \"\";\n        let hidden = document.createElement(\"span\");\n        hidden.setAttribute(\"style\", \"display:none;\");\n        hidden.setAttribute(\"class\", \"hide\");\n        hidden.innerHTML = content;\n        elt.appendChild(hidden);\n      }\n    }\n\n    unEscapeEntities(str) {\n      return str.replace(/&gt;/, \">\")\n                .replace(/&quot;/, \"\\\"\")\n                .replace(/&apos;/, \"'\")\n                .replace(/&amp;/, \"&\");\n    }\n\n    savePosition() {\n      localStorage.setItem(\"scroll\",window.scrollY);\n    }\n\n    restorePosition() {\n      if (localStorage.getItem(\"scroll\")) {\n        window.scrollTo(0, localStorage.getItem(\"scroll\"));\n      }\n    }\n\n    // public method\n    fromODD(){\n        // Place holder for ODD-driven setup.\n        // For example:\n        // Create table of elements from ODD\n        //    * default HTML behaviour mapping on/off (eg tei:div to html:div)\n        //    ** phrase level elements behave like span (can I tell this from ODD classes?)\n        //    * optional custom behaviour mapping\n    }\n\n\n\n}\n\n// Make main class available to pre-ES6 browser environments\ntry {\n  if (window) {\n      window.CETEI = CETEI;\n      window.unload = CETEI.savePosition;\n      window.load = CETEI.restorePosition;\n  }\n} catch (e) {\n  // window not defined;\n}\n\n\nmodule.exports = CETEI;\n","var test =  {\n  \"handlers\": {\n    \"eg\": [\"<pre>\",\"</pre>\"],\n    // inserts a link inside <ptr> using the @target; the link in the\n    // @href is piped through the rw (rewrite) function before insertion\n    \"ptr\": [\"<a href=\\\"$rw@target\\\">$@target</a>\"],\n    // wraps the content of the <ref> in an HTML link\n    //\"ref\": [\"<a href=\\\"$rw@target\\\">\",\"</a>\"],\n    \"graphic\": function(elt) {\n      let content = new Image();\n      content.src = this.rw(elt.getAttribute(\"url\"));\n      if (elt.hasAttribute(\"width\")) {\n        content.width = elt.getAttribute(\"width\").replace(/[^.0-9]/g, \"\");\n      }\n      if (elt.hasAttribute(\"height\")) {\n        content.height = elt.getAttribute(\"height\").replace(/[^.0-9]/g, \"\");\n      }\n      return content;\n    },\n    \"list\": function(elt) {\n      if (elt.hasAttribute(\"type\") && elt.getAttribute(\"type\") == \"gloss\") {\n        let dl = document.createElement(\"dl\");\n        for (let child of Array.from(elt.children)) {\n          if (child.nodeType == Node.ELEMENT_NODE) {\n            if (child.localName == \"tei-label\") {\n              let dt = document.createElement(\"dt\");\n              dt.innerHTML = child.innerHTML;\n              dl.appendChild(dt);\n            }\n            if (child.localName == \"tei-item\") {\n              let dd = document.createElement(\"dd\");\n              dd.innerHTML = child.innerHTML;\n              dl.appendChild(dd);\n            }\n          }\n        }\n        return dl;\n      } else {\n        return null;\n      }\n    },\n    \"table\": function(elt) {\n      let table = document.createElement(\"table\");\n      table.innerHTML = elt.innerHTML;\n      if (table.firstElementChild.localName == \"tei-head\") {\n        let head = table.firstElementChild;\n        head.remove();\n        let caption = document.createElement(\"caption\");\n        caption.innerHTML = head.innerHTML;\n        table.appendChild(caption);\n      }\n      for (let row of Array.from(table.querySelectorAll(\"tei-row\"))) {\n        let tr = document.createElement(\"tr\");\n        tr.innerHTML = row.innerHTML;\n        for (let attr of Array.from(row.attributes)) {\n          tr.setAttribute(attr.name, attr.value);\n        }\n        row.parentElement.replaceChild(tr, row);\n      }\n      for (let cell of Array.from(table.querySelectorAll(\"tei-cell\"))) {\n        let td = document.createElement(\"td\");\n        if (cell.hasAttribute(\"cols\")) {\n          td.setAttribute(\"colspan\", cell.getAttribute(\"cols\"));\n        }\n        td.innerHTML = cell.innerHTML;\n        for (let attr of Array.from(cell.attributes)) {\n          td.setAttribute(attr.name, attr.value);\n        }\n        cell.parentElement.replaceChild(td, cell);\n      }\n      return table;\n    },\n    \"egXML\": function(elt) {\n      let pre = document.createElement(\"pre\");\n      pre.innerHTML = this.serialize(elt, true);\n      return pre;\n    }\n  }\n}\nmodule.exports = test;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\nclass Search extends React.Component{\n  constructor(props){\n    super(props)\n    this.handleSetSearchText = this.handleSetSearchText.bind(this)\n    this.handleOnShowQuotationsWithoutAssociation = this.handleOnShowQuotationsWithoutAssociation.bind(this)\n    this.handleRunQuery = this.handleRunQuery.bind(this)\n    this.handleGraph = this.handleGraph.bind(this)\n    this.handleClearFilters = this.handleClearFilters.bind(this)\n  }\n  handleSetSearchText(e){\n    var {dispatch, search} = this.props;\n    var searchText = this.refs.searchText.value;\n    var searchParameters = {\n      ...this.props.search.searchParameters,\n      searchText\n    }\n    dispatch(actions.setSearchParameters(searchParameters));\n  }\n  handleOnShowQuotationsWithoutAssociation(e){\n\t\te.preventDefault();\n\t\tvar {dispatch, search} = this.props;\n    //var searchText = this.refs.searchText.value;\n    var quotationWorkGroup = this.refs.quotationWorkGroup.value;\n    var quotationExpressionType = this.refs.quotationExpressionType.value;\n    var quotationWork = this.refs.quotationWork.value;\n    var quotationWorkPart = this.refs.quotationWorkPart.value\n    var expressionId = this.refs.expressionId.value;\n    var expressionPart = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[0] : this.refs.expressionPart.value\n    var expressionLevel = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[1] : 1 ;\n    var expressionAuthor = this.refs.expressionAuthor.value;\n    var expressionAuthorType = this.refs.expressionAuthorType.value;\n    var quotationAuthor = this.refs.quotationAuthor.value;\n    var quotationAuthorType = this.refs.quotationAuthorType.value;\n    var expressionType = this.refs.expressionType.value;\n    var workGroup = this.refs.workGroup.value;\n    var quotationAuthorDateAfter = this.refs.quotationAuthorDateAfter.value;\n    var quotationAuthorDateBefore = this.refs.quotationAuthorDateBefore.value;\n    var expressionAuthorDateAfter = this.refs.expressionAuthorDateAfter.value;\n    var expressionAuthorDateBefore = this.refs.expressionAuthorDateBefore.value;\n    var structureElementType = this.refs.structureElementType.value;\n\n    //var retainCanonical = this.refs.retainCanonical.checked;\n    var searchParameters = {\n      //searchText,\n      expressionId,\n      expressionPart,\n      expressionLevel,\n      expressionAuthor,\n      quotationAuthor,\n      quotationExpressionType,\n      quotationWork,\n      quotationWorkPart,\n      quotationWorkGroup,\n      quotationAuthorType,\n      expressionAuthorType,\n      expressionType,\n      workGroup,\n      quotationAuthorDateAfter,\n      quotationAuthorDateBefore,\n      expressionAuthorDateAfter,\n      expressionAuthorDateBefore,\n      structureElementType\n\n    }\n\n    dispatch(actions.setSearchParameters(searchParameters));\n    //search filters options update\n    dispatch(actions.fetchQuotationWorkParts());\n    dispatch(actions.fetchExpressionParts());\n    dispatch(actions.fetchSearchWorksList());\n    dispatch(actions.fetchQuotationWorksList());\n    dispatch(actions.fetchQuotationAuthors());\n    dispatch(actions.fetchExpressionAuthors());\n    //fetch expression types, should adjust based on types that would apply for a select work group author or expression\n    // there are no filters for this yet\n    //dispatch(actions.fetchExpressionTypes());\n\n    // actually quotation query Actions\n    // comment these out, if you want to add search button and turn off automatic\n    // on change search <button id=\"runQuery\" onClick={this.handleRunQuery}>Search</button>\n\n      // if (!retainCanonical) dispatch(actions.clearCanonicalQuotation());\n  \t\t// dispatch(actions.clearFocusedQuotation());\n  \t\t// dispatch(actions.clearParagraph());\n  \t\t// if (!retainCanonical) dispatch(actions.fetchCanonicalQuotations());\n  \t\t// dispatch(actions.fetchQuotations());\n  \t\t// dispatch(actions.clearManifestationQuotations());\n      // dispatch(actions.fetchChart());\n    }\n  handleRunQuery(e){\n\t\te.preventDefault();\n    var {dispatch, search} = this.props;\n\t\t// var searchText = this.refs.searchText.value;\n    // var quotationWorkGroup = this.refs.quotationWorkGroup.value;\n    // var quotationWork = this.refs.quotationWork.value;\n    // var quotationWorkPart = this.refs.quotationWorkPart.value\n    // var expressionId = this.refs.expressionId.value;\n    // var expressionPart = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[0] : this.refs.expressionPart.value\n    // var expressionLevel = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[1] : 1 ;\n    // var expressionAuthor = this.refs.expressionAuthor.value;\n    // var expressionAuthorType = this.refs.expressionAuthorType.value;\n    // var quotationAuthor = this.refs.quotationAuthor.value;\n    // var quotationAuthorType = this.refs.quotationAuthorType.value;\n    // var expressionType = this.refs.expressionType.value;\n    // var quotationExpressionType = this.refs.quotationExpressionType.value;\n    // var workGroup = this.refs.workGroup.value;\n\n    //var retainCanonical = this.refs.retainCanonical.checked;\n    var retainCanonical = false;\n    // var searchParameters = {\n    //   searchText,\n    //   expressionId,\n    //   expressionPart,\n    //   expressionLevel,\n    //   expressionAuthor,\n    //   quotationAuthor,\n    //   quotationExpressionType,\n    //   quotationWork,\n    //   quotationWorkPart,\n    //   quotationWorkGroup,\n    //   quotationAuthorType,\n    //   expressionAuthorType,\n    //   expressionType,\n    //   workGroup\n    // }\n\n    if (!retainCanonical) dispatch(actions.clearCanonicalQuotation());\n\t\tdispatch(actions.clearFocusedQuotation());\n    dispatch(actions.clearManifestationQuotations());\n\t\tdispatch(actions.clearParagraph());\n    dispatch(actions.clearSourceParagraph());\n\t\tif (!retainCanonical) dispatch(actions.fetchCanonicalQuotations());\n\t\tdispatch(actions.fetchQuotations());\n\t\tdispatch(actions.fetchChart());\n\t}\n  handleClearFilters(e){\n    e.preventDefault();\n    var {dispatch, search} = this.props;\n    dispatch(actions.clearSearchParameters());\n    dispatch(actions.clearCanonicalQuotations());\n    dispatch(actions.clearQuotations());\n    dispatch(actions.fetchQuotationWorkParts());\n    dispatch(actions.fetchExpressionParts());\n    //dispatch(actions.fetchCanonicalQuotations());\n    dispatch(actions.fetchQuotationAuthors());\n    dispatch(actions.fetchExpressionAuthors());\n    dispatch(actions.fetchSearchWorksList());\n    //store.dispatch(actions.fetchExpressionTypes());\n    dispatch(actions.fetchQuotationWorksList());\n    dispatch(actions.fetchWorkGroups());\n    dispatch(actions.fetchAuthorTypes());\n    //dispatch(actions.fetchManifestationQuotations(searchText, quotationType, expressionId));\n    dispatch(actions.clearManifestationQuotations());\n    dispatch(actions.clearParagraph());\n    dispatch(actions.clearSourceParagraph());\n    this.refs.quotationAuthorDateAfter.value = \"\";\n    this.refs.quotationAuthorDateBefore.value = \"\";\n    this.refs.expressionAuthorDateAfter.value = \"\";\n    this.refs.expressionAuthorDateBefore.value = \"\";\n    this.refs.searchText.value = \"\";\n\n\n\n  }\n  handleGraph(e){\n\t\te.preventDefault();\n\t\tvar {dispatch} = this.props;\n\t\tdispatch(actions.toggleGraphDisplay(this.props.chart.visible));\n\t}\n\trender(){\n    var _this = this;\n    function displaySearchWorksList(){\n      var searchWorks = _this.props.search.searchWorks;\n      return searchWorks.map((work) => {\n        return(\n          <option value={work.expressionShortId}>{work.expressionTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationWorksList(){\n      var quotationWorksList = _this.props.search.quotationWorksList;\n      return quotationWorksList.map((work) => {\n        var id = work.expressionShortId ? work.expressionShortId : work.expression.split(\"http://scta.info/resource/\")[1];\n        return(\n          <option value={id}>{work.expressionTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationWorkPartsParent(){\n      var quotationWorkParts = _this.props.search.quotationWorkParts;\n      if (quotationWorkParts){\n        var part = quotationWorkParts[0];\n        if (part){\n          var parentid = part.parent.split(\"http://scta.info/resource/\")[1];\n          return(\n            <option value={parentid}>Current: {part.parent_title}</option>\n          )\n        }\n      }\n    }\n    function displayQuotationWorkPartsGrandparent(){\n      var quotationWorkParts = _this.props.search.quotationWorkParts;\n      if (quotationWorkParts){\n        var part = quotationWorkParts[0];\n        if (part){\n          var grandparentid = part.grandparent.split(\"http://scta.info/resource/\")[1];\n          if (grandparentid != undefined){\n            return(\n              <option value={grandparentid}>Up: {part.grandparent_title}</option>\n            )\n          }\n        }\n      }\n    }\n    function displayQuotationWorkParts(){\n      var quotationWorkParts = _this.props.search.quotationWorkParts;\n      if (quotationWorkParts){\n        return quotationWorkParts.map((part) => {\n          var id = part.childShortId ? part.childShortId : part.child.split(\"http://scta.info/resource/\")[1];\n          if (part.child){\n            return(\n              <option value={id}>{part.child_title}</option>\n              )\n            }\n          }\n        )\n      }\n    }\n    function displayExpressionPartsParent(){\n      var expressionParts = _this.props.search.expressionParts;\n      if (expressionParts){\n        var part = expressionParts[0];\n        if (part){\n          var parentid = part.parent.split(\"http://scta.info/resource/\")[1];\n          return(\n            <option value={parentid+ \"/\" + part.parent_level}>Current: {part.parent_title}</option>\n          )\n        }\n      }\n    }\n    function displayExpressionPartsGrandparent(){\n      var expressionParts = _this.props.search.expressionParts;\n      if (expressionParts){\n        var part = expressionParts[0];\n        if (part){\n          var grandparentid = part.grandparent.split(\"http://scta.info/resource/\")[1];\n          if (grandparentid != undefined){\n            return(\n              <option value={grandparentid + \"/\" + part.grandparent_level}>Up: {part.grandparent_title}</option>\n            )\n          }\n        }\n      }\n    }\n    function displayExpressionParts(){\n      var expressionParts = _this.props.search.expressionParts;\n      if (expressionParts){\n        return expressionParts.map((part) => {\n          var id = part.childShortId ? part.childShortId : part.child.split(\"http://scta.info/resource/\")[1];\n          if (part.child){\n            return(\n              <option value={id + \"/\" + part.child_level}>{part.child_title}</option>\n              )\n            }\n          }\n        )\n      }\n    }\n\n    function displayQuotationAuthorsList(){\n      var authors = _this.props.search.quotationAuthors;\n      return authors.map((author) => {\n        return(\n          <option value={author.authorShortId}>{author.authorTitle}</option>\n          )\n        }\n      )\n    }\n    function displayExpressionAuthorsList(){\n      var authors = _this.props.search.expressionAuthors;\n      return authors.map((author) => {\n        return(\n          <option value={author.authorShortId}>{author.authorTitle}</option>\n          )\n        }\n      )\n    }\n    function displayExpressionTypeList(){\n      var expressionTypes = _this.props.search.expressionTypes;\n      return expressionTypes.map((type) => {\n        return(\n          <option value={type.expressionTypeShortId}>{type.expressionTypeTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationExpressionTypeList(){\n      var quotationExpressionTypes = _this.props.search.quotationExpressionTypes;\n      return quotationExpressionTypes.map((type) => {\n        return(\n          <option value={type.quotationExpressionTypeShortId}>{type.quotationExpressionTypeTitle}</option>\n          )\n        }\n      )\n    }\n    function displayWorkGroupsList(){\n      var workGroups = _this.props.search.workGroups;\n      return workGroups.map((workGroup) => {\n        return(\n          <option value={workGroup.workGroupShortId}>{workGroup.workGroupTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationAuthorTypes(){\n      const authorTypes = _this.props.search.authorTypes;\n      return authorTypes.map((authorType) => {\n        return(\n          <option value={authorType.authorTypeShortId}>{authorType.authorTypeTitle}</option>\n          )\n        }\n      )\n    }\n    function displayExpressionAuthorTypes(){\n      const authorTypes = _this.props.search.authorTypes;\n      return authorTypes.map((authorType) => {\n        return(\n          <option value={authorType.authorTypeShortId}>{authorType.authorTypeTitle}</option>\n          )\n        }\n      )\n    }\n    return(\n      <div>\n        <Form onSubmit={this.handleOnShowQuotationsWithoutAssociation}>\n          <div>\n\n            <div>\n              {\n                // turn this on, if you want  add search button turn off automatic\n                // on change search\n                <Button id=\"runQuery\" onClick={this.handleRunQuery}>Run Search</Button>\n              }\n\n              <Button id=\"clearFilter\" onClick={this.handleClearFilters}>Clear Filters</Button>\n            </div>\n            {\n              /*<div>\n              <label><input id=\"checkbox1\" ref=\"retainCanonical\" type=\"checkbox\"/>Restrict to Can. Quotation</label>\n            </div>\n            */\n            }\n            <div>\n            <p>Search Parameters</p>\n            <Form.Group>\n              <Form.Label>Quotation/ReferenceType</Form.Label>\n              <Form.Control as=\"select\" ref=\"structureElementType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                <option value=\"structureElementQuote\">Quotations</option>\n                <option value=\"structureElementRef\">References</option>\n                <option value=\"structureElementRefDup\">References (With Quotation Overlap)</option>\n                <option value=\"\">All</option>\n                <option value=\"allDup\">All (with quotation overlap)</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                <Form.Control as=\"input\" type=\"text\" ref=\"searchText\" placeholder=\"search quotation text\" onChange={this.handleSetSearchText}/>\n              </Form.Label>\n            </Form.Group>\n            <hr/>\n            <p>Quotation Parameters</p>\n            <Form.Group>\n            <Form.Label>Quotation Author Type</Form.Label>\n              <Form.Control as=\"select\" ref=\"quotationAuthorType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                <option value=\"\">All</option>\n                {displayQuotationAuthorTypes()}\n              </Form.Control>\n\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Author Birth Date</Form.Label>\n              <br/>\n              After <Form.Control as=\"input\" ref=\"quotationAuthorDateAfter\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1200\"/>\n              <br/>\n              Before <Form.Control as=\"input\" ref=\"quotationAuthorDateBefore\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1400\"/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Author</Form.Label>\n              <Form.Control as=\"select\" ref=\"quotationAuthor\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.quotationAuthor}>\n                <option value=\"\">All</option>\n                {displayQuotationAuthorsList()}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Work Group</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationWorkGroup\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayWorkGroupsList()}\n                </Form.Control>\n\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Text Type</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationExpressionType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayQuotationExpressionTypeList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Text Title</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationWork\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.quotationWork}>\n                  <option value=\"\">All</option>\n                  {displayQuotationWorksList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Text Part</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationWorkPart\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.quotationWorkPart}>\n                  <option value=\"\">All</option>\n                  {displayQuotationWorkPartsGrandparent()}\n                  {displayQuotationWorkPartsParent()}\n                  {displayQuotationWorkParts()}\n                </Form.Control>\n            </Form.Group>\n            <hr/>\n            <p>Text Parameters</p>\n            <Form.Group>\n              <Form.Label>Text Author Type</Form.Label>\n              <Form.Control as=\"select\" ref=\"expressionAuthorType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                <option value=\"\">All</option>\n                {displayExpressionAuthorTypes()}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Author Birth Date</Form.Label>\n              <br/>\n              After <Form.Control as=\"input\" ref=\"expressionAuthorDateAfter\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1200\"/>\n              <br/>\n              Before <Form.Control as=\"input\" ref=\"expressionAuthorDateBefore\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1400\"/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Author</Form.Label>\n                <Form.Control as=\"select\" ref=\"expressionAuthor\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.expressionAuthor}>\n                  <option value=\"\">All</option>\n                  {displayExpressionAuthorsList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Work Group</Form.Label>\n                <Form.Control as=\"select\" ref=\"workGroup\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayWorkGroupsList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Type</Form.Label>\n                <Form.Control as=\"select\" ref=\"expressionType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayExpressionTypeList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Title</Form.Label>\n                <Form.Control as=\"select\" ref=\"expressionId\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.expressionId}>\n                  <option value=\"\">All</option>\n                  {displaySearchWorksList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Part</Form.Label>\n              <Form.Control as=\"select\" ref=\"expressionPart\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.expressionPart + \"/\" + _this.props.search.searchParameters.expressionLevel}>\n                <option value=\"\">All</option>\n                {displayExpressionPartsGrandparent()}\n                {displayExpressionPartsParent()}\n                {displayExpressionParts()}\n              </Form.Control>\n            </Form.Group>\n            </div>\n          </div>\n        </Form>\n        <p><a href=\"#\" onClick={this.handleGraph}>Toggle Historgram</a></p>\n      </div>\n\n\n\t\t)\n\t}\n}\n\nexport default connect(\n  (state) => {\n\t\treturn state\n\t}\n)(Search);\n","import React from 'react'\nimport $ from 'jquery';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n\n\nclass Quotation extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnClick = this.handleOnClick.bind(this)\n\t}\n\thandleOnClick(){\n\t\tvar {isInstanceOf, id, quotation, dispatch, source} = this.props;\n\t\tdispatch(actions.changeQuotationsFocus(this.props.id));\n\t\tvar newFocusedQuotationObject = {\n\t\t\tid,\n\t\t\tquotation,\n\t\t\tsource,\n\t\t\ttype: \"expression\"\n\t\t}\n\t\t// example of why all these different dispatches called here might be a problem\n\t\t//fetchParagraph() requires that the createFocusedQuotation() is set.\n\t\t//seems to be working as is, but i'm not sure if this is the best way\n\t\tdispatch(actions.createFocusedQuotation(newFocusedQuotationObject));\n\t\tdispatch(actions.fetchParagraph());\n\t\tdispatch(actions.fetchSourceParagraph());\n\t\t//dispatch(actions.fetchSourceParagraph());\n\t\t//this fetch also seems to rely on focusedQuotation state being set.\n\t\t// seems to work as is though\n\t\tdispatch(actions.fetchManifestationQuotations());\n\n\n\t\tif (isInstanceOf != null){\n\t\t\t// create canonicalQuotation\n\t\t\tvar canonicalQuotationObject = this.props.canonicalQuotations.find((quotation) => {\n\t\t\t\treturn quotation.id === isInstanceOf\n\n\t\t\t});\n\n\t\t\tif (canonicalQuotationObject != undefined){\n\t\t\t\tdispatch(actions.createCanonicalQuotation(canonicalQuotationObject));\n\t\t\t\t// focus canonicalquotation List Item\n\t\t\t\tdispatch(actions.changeCanonicalQuotationsFocus(isInstanceOf));\n\t\t\t\t// scroll\n\t\t\t\tvar topPos = document.getElementById(isInstanceOf).offsetTop;\n\t\t\t\t$('#CanonicalQuotationList').animate({ scrollTop: topPos-10 }, 400);\n\t\t\t\t//scroll self to top\n\t\t\t\tvar selfTopPos = document.getElementById(id).offsetTop;\n\t\t\t\t$('#quotationsList').animate({ scrollTop: selfTopPos-10 }, 400);\n\t\t\t}\n\t\t\telse{\n\t\t\t\talert(\"this quotation is assigned to a canonicalQuotation, but either there is an error in the id assigned or a canonicalQuotation record still needs to be made\")\n\t\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\t\tdispatch(actions.clearCanonicalQuotation());\n\t\t\t}\n\n\t\t}\n\t\telse{\n\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\tdispatch(actions.clearCanonicalQuotation());\n\n\t\t}\n\n\n\n\t}\n\trender(){\n\n\t\tvar {isInstanceOf, quotation, className, title, author, id, refText, citation} = this.props;\n\n\t\tvar className = isInstanceOf === null ? className + \" isNotInstance\" : className;\n\n\t\treturn(\n\t\t\t<div className=\"quotation-wrapper\">\n\t\t\t\t<p id={id} className={className} onClick={this.handleOnClick}>\n\t\t\t\t{quotation}\n\t\t\t\t</p>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">{author}, {title}</a>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">Original Ref: {refText}</a>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">Modern Citation: {citation}</a>\n\t\t\t</div>\n\n\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(Quotation);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Quotation from \"./Quotation\"\n\nclass QuotationList extends React.Component{\n\trender(){\n    var {quotations, focusedQuotation} = this.props;\n    var renderQuotations = () => {\n\t\t\tif (quotations === \"fetching\"){\n\t\t\t\treturn <p>Fetching...</p>\n\t\t\t}\n\t\t\telse if (quotations.length === 0){\n        return(\n            <p className=\"container__message\">No Quotations</p>\n        );\n      }\n\t\t\telse {\n\t\t\t\treturn quotations.map( (quotation) => {\n\t\t\t\t\t//var quotationClass = quotation.focused ? \"quotation focused\" : \"quotation\"\n\t\t\t\t\tlet quotationClass = \"\"\n\t\t\t\t\tif (focusedQuotation.id){\n\t\t\t\t\t\tif (focusedQuotation.id.includes(quotation.id)){\n\t\t\t\t\t\t\tquotationClass = \"quotation focused\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tquotationClass = \"quotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tquotationClass = \"quotation\"\n\t\t\t\t\t}\n\t\t\t\t\tvar refType = quotation.refType\n\t\t\t\t\tvar classes = quotationClass + \" \" + quotation.refType\n\t        return (\n\n\t          <Quotation className={classes} key={quotation.id} {...quotation}/>\n\t        );\n\t      });\n\t\t\t}\n    };\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<p>List of Expression Quotations</p>\n\t\t\t\t{this.props.quotations !== \"fetching\" && <p>Count {quotations.length}</p>}\n\t\t\t\t{renderQuotations()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(QuotationList);\n","import React from 'react'\nvar {connect} = require('react-redux');\n\nclass FocusedQuotation extends React.Component{\n\trender(){\n    var {focusedQuotation} = this.props;\n\t\tvar {quotation} = focusedQuotation\n\t\tvar {id} = focusedQuotation\n\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<p>Focused Quotation: {quotation}</p>\n\t\t\t\t<p><a href={id}>{id}</a></p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(FocusedQuotation);\n","import React from 'react';\nvar {connect} = require('react-redux');\n\nclass CanonicalQuotation extends React.Component{\n\trender(){\n    var {canonicalQuotation} = this.props;\n\t\tvar displayQuotation = canonicalQuotation ? canonicalQuotation.quotation : \"No canonical quotation id assigned\";\n\t\tvar displayQuotationId = canonicalQuotation ? canonicalQuotation.id : \"\";\n\t\tvar citation = canonicalQuotation ? canonicalQuotation.citation : \"\";\n\n\t\t//var {quotation} = canonicalQuotation\n\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<p>Canonical Quotation: {displayQuotation}</p>\n\t\t\t\t<p>{citation}</p>\n\t\t\t\t<p><a href={displayQuotationId}>{displayQuotationId}</a></p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(CanonicalQuotation);\n","import React from 'react'\nimport $ from 'jquery';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n\n\nclass CanonicalQuotationListItem extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnClick = this.handleOnClick.bind(this)\n\t}\n\thandleOnClick(){\n\t\tvar {id, quotation, citation, dispatch} = this.props;\n\t\tdispatch(actions.changeCanonicalQuotationsFocus(this.props.id));\n\t\tvar quotationObject = {\n\t\t\tid,\n\t\t\tquotation,\n\t\t\tcitation\n\t\t}\n\t\tdispatch(actions.createCanonicalQuotation(quotationObject));\n\t\t// doesn't seem like the way to do it, because this dispatch might get of sync.\n\t\t//The second one requires the state to be set by the first\n\t\t// should be done in subscribe, but I'm not sure how yet\n\t\tdispatch(actions.fetchQuotations());\n\t\tdispatch(actions.clearQuotationsFocus());\n\t\tdispatch(actions.clearFocusedQuotation());\n\t\tdispatch(actions.clearManifestationQuotations());\n\t\tdispatch(actions.clearParagraph());\n\n\t\tvar selfTopPos = document.getElementById(id).offsetTop;\n\t\t$('#CanonicalQuotationList').animate({ scrollTop: selfTopPos-10 }, 400);\n\t}\n\trender(){\n    var {id, quotation, className, citation} = this.props\n    return(\n\t\t\t<div className=\"quotation-wrapper\">\n\t\t\t\t<p id={id} className={className} onClick={this.handleOnClick}>{quotation}</p>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">{citation}</a>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect()(CanonicalQuotationListItem);\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport CanonicalQuotationListItem from \"./CanonicalQuotationListItem\"\n\nvar actions = require('../actions/actions');\n\nclass CanonicalQuotationList extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnShowQuotationsWithoutAssociation = this.handleOnShowQuotationsWithoutAssociation.bind(this)\n\t}\n\thandleOnShowQuotationsWithoutAssociation(e){\n\t\te.preventDefault();\n\t\tvar {dispatch} = this.props;\n\t\tvar searchText = this.refs.searchText.value;\n\n\t\tdispatch(actions.clearCanonicalQuotation());\n\t\tdispatch(actions.clearFocusedQuotation());\n\t\tdispatch(actions.clearParagraph());\n\t\t//dispatch(actions.clearCanonicalQuotationsFocus());\n\t\t//TODO change app so that searchText does need to be passed as parameters\n\t\t//but is retrieved from the searchState\n\t\tdispatch(actions.fetchCanonicalQuotations(searchText));\n\t\tdispatch(actions.fetchQuotations(searchText));\n\t\t//dispatch(actions.fetchManifestationQuotations(searchText));\n\t}\n\trender(){\n    var {canonicalQuotations} = this.props;\n\t\tvar renderQuotations = () => {\n      if (canonicalQuotations.length === 0){\n        return(\n            <p className=\"container__message\">No Quotations</p>\n        );\n      }\n\n      return canonicalQuotations.map( (quotation) => {\n\t\t\t\tvar quotationClass = quotation.focused ? \"quotation focused\" : \"quotation\"\n\t\t\t\t//var quotationClass = \"quotation\"\n        return (\n\t\t\t\t\t<CanonicalQuotationListItem className={quotationClass} key={quotation.id} {...quotation}/>\n        );\n      });\n    };\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<p>List of Canonical Quotations</p>\n\t\t\t\t<p>Count {canonicalQuotations.length}</p>\n\t\t\t\t{renderQuotations()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(CanonicalQuotationList);\n","import React from 'react'\nimport $ from 'jquery';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n\n\nclass ManifestationQuotationListItem extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnClick = this.handleOnClick.bind(this)\n\t}\n\thandleOnClick(){\n\t\tvar {isManifestationOf, id, quotation, dispatch} = this.props;\n\n\t\tvar newFocusedQuotationObject = {\n\t\t\tid,\n\t\t\tquotation,\n\t\t\ttype: \"manifestation\"\n\t\t}\n\t\tdispatch(actions.createFocusedQuotation(newFocusedQuotationObject));\n\n\t\tdispatch(actions.changeManifestationQuotationsFocus(id));\n\t\t//dispatch(actions.changeQuotationsFocus(isManifestationOf));\n\t\tdispatch(actions.fetchParagraph());\n\n\t\tvar topPos = document.getElementById(id).offsetTop;\n\t\t$('#ManifestationQuotationsList').animate({ scrollTop: topPos-10 }, 400);\n\n\t\t//synchronize other columns\n\t\tif (isManifestationOf != null){\n\t\t\t// create canonicalQuotation\n\t\t\tvar isManifestationOfObject = this.props.quotations.find((quotation) => {\n\t\t\t\treturn quotation.id === isManifestationOf;\n\n\t\t\t});\n\n\t\t\tif (isManifestationOfObject != undefined){\n\t\t\t\t//dispatch(actions.createCanonicalQuotation(canonicalQuotationObject));\n\t\t\t\t// focus canonicalquotation List Item\n\t\t\t\tdispatch(actions.changeQuotationsFocus(isManifestationOf));\n\t\t\t\t// scroll\n\t\t\t\tvar topPos = document.getElementById(isManifestationOf).offsetTop;\n\t\t\t\t$('#quotationsList').animate({ scrollTop: topPos-10 }, 400);\n\n\t\t\t\t//the following is repeated in quotation App; it should be abstracted and not repeated\n\t\t\t\tvar isInstanceOf = isManifestationOfObject.isInstanceOf\n\t\t\t\tif (isInstanceOf != null){\n\t\t\t\t\t// create canonicalQuotation\n\t\t\t\t\tvar canonicalQuotationObject = this.props.canonicalQuotations.find((quotation) => {\n\t\t\t\t\t\treturn quotation.id === isInstanceOf\n\n\t\t\t\t\t});\n\n\t\t\t\t\tif (canonicalQuotationObject != undefined){\n\t\t\t\t\t\tdispatch(actions.createCanonicalQuotation(canonicalQuotationObject));\n\t\t\t\t\t\t// focus canonicalquotation List Item\n\t\t\t\t\t\tdispatch(actions.changeCanonicalQuotationsFocus(isInstanceOf));\n\t\t\t\t\t\t// scroll\n\t\t\t\t\t\tvar topPos = document.getElementById(isInstanceOf).offsetTop;\n\t\t\t\t\t\t$('#CanonicalQuotationList').animate({ scrollTop: topPos-10 }, 400);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t//alert(\"this quotation is assigned to a canonicalQuotation, but either there is an error in the id assigned or a canonicalQuotation record still needs to be made\")\n\t\t\t\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\t\t\t\tdispatch(actions.clearCanonicalQuotation());\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//alert(\"this quotation is assigned to a canonicalQuotation, but either there is an error in the id assigned or a canonicalQuotation record still needs to be made\")\n\t\t\t\tdispatch(actions.clearQuotationsFocus());\n\t\t\t\tdispatch(actions.clearCanonicalQuotation());\n\t\t\t}\n\n\t\t}\n\t\telse{\n\t\t\tdispatch(actions.clearQuotationsFocus());\n\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\tdispatch(actions.clearCanonicalQuotation());\n\n\t\t}\n\n\n\t}\n\trender(){\n    var {id, quotation, className} = this.props\n    return(\n\t\t\t<p id={id} className={className} onClick={this.handleOnClick}>{quotation}</p>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(ManifestationQuotationListItem);\n","import React from 'react'\nimport {connect} from 'react-redux';\n\n\nimport ManifestationQuotationListItem from \"./ManifestationQuotationListItem\"\nvar actions = require('../actions/actions');\n\nclass ManifestationQuotationList extends React.Component{\n\trender(){\n    var {manifestationQuotations} = this.props;\n    var renderQuotations = () => {\n      if (manifestationQuotations.length === 0){\n        return(\n            <p className=\"container__message\">No Quotations</p>\n        );\n      }\n\n      return manifestationQuotations.map( (quotation) => {\n\t\t\t\tvar quotationClass = quotation.focused ? \"quotation focused\" : \"quotation\"\n\t\t\t\t//var quotationClass = \"quotation\"\n        return (\n\n          <ManifestationQuotationListItem className={quotationClass} key={quotation.id} {...quotation}/>\n        );\n      });\n    };\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<p>List of Manifestation Quotations</p>\n        <p>Count {manifestationQuotations.length}</p>\n        {renderQuotations()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(ManifestationQuotationList);\n","import React from 'react';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n//import CETEI from '../../node_modules/CETEIcean/src/CETEI';\nvar cetei = require(\"../vendor/CETEI\");\n\n\n\nclass Paragraph extends React.Component{\n  constructor(props){\n    super(props)\n    this.handleShowImages = this.handleShowImages.bind(this)\n    this.handleShowFullText = this.handleShowFullText.bind(this)\n    this.runQueryForSource = this.runQueryForSource.bind(this)\n    this.addTEICustom = this.addTEICustom.bind(this)\n    this.handleClearFilters = this.handleClearFilters\n  }\n  handleShowImages(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n    dispatch(actions.fetchImages());\n    dispatch(actions.toggleImagesDisplay(this.props.images.visible));\n  }\n  handleShowFullText(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n    if (this.props.type === \"source\"){\n      dispatch(actions.fetchFullText(true));\n    }\n    else{\n      dispatch(actions.fetchFullText(false));\n    }\n    dispatch(actions.toggleImagesDisplay(true));\n    dispatch(actions.toggleFullTextDisplay(this.props.fullText.visible));\n  }\n  componentDidMount(e){\n    var _this = this;\n    this.addTEICustom()\n  }\n  componentDidUpdate(e){\n    var _this = this;\n    this.addTEICustom()\n  }\n  addTEICustom(){\n    var _this = this;\n    const htmlText = new cetei()\n    let paragraph = {}\n    if (this.props.type === \"source\"){\n      paragraph = this.props.sourceParagraph;\n    }\n    else{\n      paragraph = this.props.paragraph;\n    }\n    if (paragraph.paragraph_text){\n      htmlText.makeHTML5(paragraph.paragraph_text, function(data){\n        // get id of quote\n        if (_this.props.focusedQuotation.id){\n          const quoteid = _this.props.focusedQuotation.id.split(\"/\").pop();\n          // find quote in text if there and change class to highlighted\n          if (data.querySelector(\"#\" + quoteid)){\n            data.querySelector(\"#\" + quoteid).setAttribute(\"class\", \"highlighted\");\n          }\n          //load text in div\n          _this.refs.text.replaceChild(data, _this.refs.text.childNodes[0]);\n        }\n\n      });\n    }\n    else{\n      const emptyTextNode = document.createTextNode(\"\");\n      _this.refs.text.replaceChild(emptyTextNode, _this.refs.text.childNodes[0]);\n    }\n  }\n  runQueryForSource(sourceId){\n\n    var {dispatch, search} = this.props;\n\n    var quotationWorkPart = sourceId\n\n\n\n    var searchParameters = {\n      quotationWorkPart\n    }\n    // clear search parameters\n    this.handleClearFilters()\n\t\t// set new search parameters\n    dispatch(actions.setSearchParameters(searchParameters));\n\t\t// (ideally after the handleClearFilters has finished) set search parameters to include quotationWorkPart\n\t\tdispatch(actions.fetchQuotationWorkParts());\n\t\t// fetch quotations based on the source part id\n\t\tdispatch(actions.fetchQuotations());\n\t\t//fetch chart to match new query\n\t\t// TODO: seems like it would be better for chart fetch only when view is requested\n    dispatch(actions.fetchChart());\n\n  }\n\t//TODO: this function is mostly a repeat of the clearFilters function in the Search component\n\t//this seems like an unnecessary redundancy; perhaps this can become a generic action or common utility function\n  handleClearFilters(e){\n\n    var {dispatch, search} = this.props;\n    dispatch(actions.clearSearchParameters());\n    dispatch(actions.clearCanonicalQuotations());\n    dispatch(actions.clearQuotations());\n\t\tdispatch(actions.fetchQuotationWorkParts());\n    dispatch(actions.fetchExpressionParts());\n    //dispatch(actions.fetchCanonicalQuotations());\n    dispatch(actions.fetchQuotationAuthors());\n    dispatch(actions.fetchExpressionAuthors());\n    dispatch(actions.fetchSearchWorksList());\n    //store.dispatch(actions.fetchExpressionTypes());\n    dispatch(actions.fetchQuotationWorksList());\n    dispatch(actions.fetchWorkGroups());\n    dispatch(actions.fetchAuthorTypes());\n    //dispatch(actions.fetchManifestationQuotations(searchText, quotationType, expressionId));\n    dispatch(actions.clearManifestationQuotations());\n\n    // date refs won't clear until place for them in the store has been created\n\t    // this.refs.quotationAuthorDateAfter.value = \"\";\n\t    // this.refs.quotationAuthorDateBefore.value = \"\";\n\t    // this.refs.expressionAuthorDateAfter.value = \"\";\n\t    // this.refs.expressionAuthorDateBefore.value = \"\";\n\t\t\t//this.refs.searchText.value = \"\";\n\n\n\n  }\n  render(){\n    var _this = this;\n    let paragraph = {}\n    if (this.props.type === \"source\"){\n      paragraph = this.props.sourceParagraph;\n    }\n    else{\n      paragraph = this.props.paragraph;\n    }\n    //var {paragraph} = this.props;\n    var {expression_id, manifestation_id, paragraph_text, review} = paragraph\n    // var domParser = new DOMParser();\n    // var xsltProcessor = new XSLTProcessor();\n    //\n    // var xsltText = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"  exclude-result-prefixes=\"xs\"  version=\"1.0\" xmlns:tei=\"http://www.tei-c.org/ns/1.0\">  <xsl:output method=\"html\"/>  <xsl:template match=\"/\">    <xsl:apply-templates select=\"//tei:body\"/>  </xsl:template>  <xsl:template match=\"tei:p\">      <xsl:apply-templates/>    </xsl:template>  <xsl:template match=\"tei:quote\">    \"<xsl:apply-templates/>\"  </xsl:template>  <xsl:template match=\"tei:rdg\">      </xsl:template>  <xsl:template match=\"tei:note\">      </xsl:template>  <xsl:template match=\"tei:bibl\">      </xsl:template>  <xsl:template match=\"tei:reg\">      </xsl:template>  <xsl:template match=\"tei:corr\">      </xsl:template>  </xsl:stylesheet>';\n    // var xsltDoc = domParser.parseFromString(xsltText, \"text/xml\");\n    // xsltProcessor.importStylesheet(xsltDoc);\n    //\n    // var xmlText = paragraph_text;\n    // var xmlDoc = domParser.parseFromString(xmlText, \"text/xml\");\n    // var fragment = xsltProcessor.transformToFragment(xmlDoc, document);\n    //\n    // var parent = document.createElement(\"div\");\n    // parent.appendChild(fragment);\n    // var text =  parent.innerHTML;\n\n    function showImageToggle(){\n\n      if (paragraph.expression_id){\n        return(\n          <p>\n            <a onClick={_this.handleShowImages}>Toggle Image</a>\n          </p>\n        )\n      }\n\n    }\n    function showFullTextToggle(){\n\n      if (paragraph.expression_id){\n        return(\n          <p>\n            <a onClick={_this.handleShowFullText}>Show Full Text</a>\n          </p>\n        )\n      }\n\n    }\n\n    function showReview(){\n      if (review){\n        var reviewLink  = \"http://dll-review-registry.scta.info/reviews/\" + review[\"id\"] + \".html\";\n        var ipfsGatewayLink  = \"http://gateway.scta.info/ipfs/\" + review[\"ipfs-hash\"];\n        return(\n          <p>\n            <a href={reviewLink} target=\"_blank\"><img src={review[\"badge-url\"]}/></a> Content extracted from reviewed data source <a href={ipfsGatewayLink} target=\"_blank\">{review[\"ipfs-hash\"]}</a>\n          </p>\n        )\n      }\n    }\n    function showLbpLink(){\n\n    }\n\n    return(\n\n\n      <div>\n        <p>Context Paragraph</p>\n        <div id=\"text\" ref=\"text\"><div/></div>\n        {manifestation_id && <p><a href={manifestation_id}>{manifestation_id}</a></p>}\n        {manifestation_id && <p><a href={\"http://sctalab.lombardpress.org/#/text?resourceid=\" + manifestation_id} target=\"_blank\">View in LbpWeb</a></p>}\n        {\n          //showImageToggle()\n        }\n        {showFullTextToggle()}\n        {\n        //  showReview()\n        }\n        {(this.props.type === \"source\" && this.props.focusedQuotation.source) && <p onClick={() => {this.runQueryForSource(this.props.sourceParagraph.expression_id.split(\"/resource/\")[1])}}>Search Quotations of this Passage Only</p>}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => {\n    return state\n  }\n)(Paragraph);\n","import React, { Component } from 'react'\nvar {connect} = require('react-redux');\n// import { scaleLinear } from 'd3-scale';\n// import { max } from 'd3-array';\n// import { select } from 'd3-selection';\nvar d3 = require(\"d3\");\nvar actions = require('../actions/actions');\n\n\n\n\n\nclass BarChart extends React.Component {\n   constructor(props){\n      super(props)\n      this.createBarChart = this.createBarChart.bind(this)\n  }\n   componentDidMount() {\n     var count = this.props.chart.count;\n     if (count){\n      this.createBarChart(count)\n      }\n   }\n   componentDidUpdate(prevProps, prevState) {\n     var count = this.props.chart.count;\n     if (count != prevProps.chart.count){\n       this.createBarChart(count)\n     }\n   }\n   componentWillUnmount(){\n     d3.selectAll(\".tooltip\").remove();\n   }\n   createBarChart(count) {\n     var svg = d3.select(\"svg\");\n     svg.selectAll(\"*\").remove();\n     d3.selectAll(\".tooltip\").remove();\n\n\n  //    console.log(\"value in createBarChart\", count)\n  //     const node = this.node\n  //     //const dataMax = max(this.props.data)\n  //     const dataMax = max(count)\n  //     const yScale = scaleLinear()\n  //        .domain([0, dataMax])\n  //        .range([0, this.props.size[1]])\n  //  select(node)\n  //     .selectAll('rect')\n  //     //.data(this.props.data)\n  //     .data(count)\n  //     .enter()\n  //     .append('rect')\n   //\n  //  select(node)\n  //     .selectAll('rect')\n  //     //.data(this.props.data)\n  //     .data(count)\n  //     .exit()\n  //     .remove()\n   //\n  //  select(node)\n  //     .selectAll('rect')\n  //     //.data(this.props.data)\n  //     .data(count)\n  //     .style('fill', '#fe9922')\n  //     .attr('x', (d,i) => i * 25)\n  //     .attr('y', d => this.props.size[1] - yScale(d))\n  //     .attr('height', d => yScale(d))\n  //     .attr('width', 25)\n  //  }\n  var data = count\n\n  //above is working chart\n\n  // below is new attempted chart\n  //data.sort(sort)\n\t\t//this filter is required to make sure count is recognized as integers not strings\n\t\t// see: http://stackoverflow.com/questions/10709950/get-the-real-max-of-an-array-in-d3\n\n\tdata.filter(function(d,i) {\n\t  d.count = +d.count;\n\t});\n\n\tvar countArray = [];\n\tvar titleArray = [];\n\n  countArray = data.map(function(d){\n    return d.count\n  });\n  // for (x in data){\n\t// \tcountArray.push(data[x].count);\n  //\n\t// };\n  titleArray = data.map(function(d){\n    return d.title\n  });\n\t// for (x in data){\n\t// \ttitleArray.push(data[x].title);\n\t// };\n\n\tvar margin = {top: 30, right: 30, bottom: 40, left: 50}\n\tvar height = 500 - margin.top - margin.bottom,\n\twidth = 1200 - margin.left - margin.right;\n\t//barWidth = 50,\n\t//barOffset = 5;\n\n\tvar colors = d3.scale.linear()\n\t\t.domain([0, data.length*.80,  data.length])\n\t\t.range(['#FFB832', '#C61C6F']);\n\n\n\t//var xScale = d3.scale.linear()\n\t\t//.domain([0, d3.max(countArray)])\n\t\t//.range([0, height]);\n\n\t//var yScale = d3.scale.ordinal()\n\t\t//.domain(d3.range(0, data.length))\n\t\t//.rangeBands([0, height])\n\n\tvar yScale = d3.scale.linear()\n\t\t.domain([0, d3.max(countArray)])\n\t\t.range([0, height]);\n\n\tvar xScale = d3.scale.ordinal()\n\t\t.domain(d3.range(0, data.length))\n\t\t.rangeBands([0, width], .5)\n\n\n\n\n\tvar tooltip = d3.select('body').append('div')\n\t\t.attr('class', 'tooltip')\n\t\t.style('position', 'absolute')\n\t\t.style('padding', '0 10px')\n\t\t.style('background', 'white')\n\t\t.style('opacity', 0)\n\n    const node = this.node\n    //var canvas = d3.select(\"div#\" + chart).append(\"svg\")\n    var canvas = d3.select(node)\n      //.attr(\"id\", chart)\n\t\t//.style('background', '#E7E0CB')\n\t\t.attr('width', width + margin.left + margin.right)\n\t\t.attr('height', height + margin.top + margin.bottom)\n\t\t.append(\"g\")\n\t\t.attr('transform', 'translate(' + margin.left + ', ' + margin.top +')')\n\t\t.selectAll(\"rect\")\n\t\t\t.data(data)\n\t\t\t.enter()\n\t\t\t.append(\"g\")\n\t\t\t\t.append(\"rect\")\n\t\t\t\t\t.style('fill', function(d,i){\n\t\t\t\t\t\treturn colors(i);\n\t\t\t\t\t})\n\t\t\t\t\t.attr('height', 0)\n\t\t\t\t\t.attr('y', height)\n\t\t\t\t\t.attr(\"width\", xScale.rangeBand())\n\t\t\t\t\t.attr(\"x\", function (d,i) {return xScale(i);})\n\n\n\t\t\t\t\t.on('mouseover', function(d) {\n\t\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.style('opacity', .9)\n\n\t\t\t\t\t\ttooltip.html(\"<a href='\" + d.item + \"'>\" + d.title + \"</a>. Quoted \" + d.count + \" times\")\n\t\t\t\t\t\t\t.style('left', (d3.event.pageX + 0) + 'px')\n\t\t\t\t\t\t\t.style('top', (d3.event.pageY + 0) + 'px')\n\t\t\t\t\t\t\t.style('left', d3.select(node).left + 150 + 'px')\n\t\t\t\t\t\t\t.style('top', d3.select(node).top + 125 + 'px')\n\n\t\t\t\t\t\t\td3.select(this)\n\t\t\t\t\t\t\t\t.style('opacity', .5);\n\t\t\t\t\t})\n\t\t\t\t\t.on('mouseout', function(d) {\n\t\t\t\t\t\t//tooltip.transition().style('opacity', 0)\n\t\t\t\t\t\td3.select(this)\n\t\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t\t.style('opacity', 1);\n\t\t\t\t\t})\n\n\n\t\t//canvas.transition()\n    canvas.transition()\n\t\t\t.attr(\"height\", function (d) {return yScale(d.count)})\n\t\t\t.attr(\"y\", function(d) { return height - yScale(d.count) })\n\t\t\t.delay(function(d,i){return i * 10})\n\t\t\t.duration(1000)\n\t\t\t.ease('elastic')\n\n\t\t\tvar vGuideScale = d3.scale.linear()\n\t\t\t\t.domain([0, d3.max(countArray)])\n\t\t\t\t.range([height, 0])\n\n\t\t\tvar vAxis = d3.svg.axis()\n\t\t\t\t.scale(vGuideScale)\n\t\t\t\t.orient('left')\n\t\t\t\t.ticks(10)\n\t\t\tvar vGuide = d3.select(node).append('g')\n\t\t\t\tvAxis(vGuide)\n\t\t\t\tvGuide.attr('transform', 'translate('+ margin.left+', '+margin.top + ')')\n\t\t\t\tvGuide.selectAll('path')\n\t\t\t\t\t.style({fill: 'none', stroke: \"#000\"})\n\t\t\t\tvGuide.selectAll('line')\n\t\t\t\t\t.style({ stroke: \"#000\"})\n\n\t\t\t//var horizontalGuideScale = d3.scale.ordinal()\n\t\t\t\t//.domain([0, d3.max(countArray)])\n\t\t\t\t//.range([height, 0])\n\n\t\t\tvar hAxis = d3.svg.axis()\n\t\t\t\t.scale(xScale)\n\t\t\t\t.orient('bottom')\n\t\t\t\t.tickValues(xScale.domain().filter(function(d, i){\n\t\t\t\t\treturn i % 50 === 0\n\t\t\t\t}\n\t\t\t\t));\n\n        var hGuide = d3.select(node).append('g')\n\t\t\t\thAxis(hGuide)\n\t\t\t\thGuide.attr('transform', 'translate('+ margin.left+', '+ (height + margin.top) + ')')\n\t\t\t\thGuide.selectAll('path')\n\t\t\t\t\t.style({fill: 'none', stroke: \"#000\"})\n\t\t\t\thGuide.selectAll('line')\n\t\t\t\t\t.style({ stroke: \"#000\"})\n\t\t}\nrender() {\n      return(\n          <svg ref={node => this.node = node}\n          width={500} height={500}>\n          </svg>\n\n\n    )\n   }\n}\n//module.exports = BarChart;\n\n// export default connect(\n// \t(state) => {\n// \t\treturn state\n// \t}\n// )(BarChart);\n\nconst mapStateToProps = state => (\n  {\n    chart: state.chart,\n  }\n);\n\nconst mapDispatchToProps = dispatch => ({\n\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BarChart);\n","import React, { Component } from 'react'\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\nvar cetei = require(\"../vendor/CETEI\");\n\n\n\n\n\nclass Image extends React.Component {\n   constructor(props){\n      super(props)\n      this.handleToggleImage = this.handleToggleImage.bind(this)\n\n  }\n   componentDidMount() {\n\n   }\n   componentDidUpdate(count) {\n\n   }\n   handleToggleImage(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n \t\tdispatch(actions.toggleImagesDisplay(this.props.images.visible));\n\n   }\n   render(){\n     var _this = this;\n     function showImages(){\n       var images = _this.props.images;\n       if (images.visible && images.images.length > 0){\n         return images.images.map(function(image){\n           var imageUrl = image.url;\n           return(\n             <img src={imageUrl + \"/full/1000,/0/default.jpg\"}/>\n           )\n           }\n         )\n\n       }\n     }\n     return(\n       <div className=\"images\">\n         {showImages()}\n       </div>\n     )\n   }\n }\n//module.exports = BarChart;\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(Image);\n","import React, { Component } from 'react'\nimport $ from 'jquery';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\nvar cetei = require(\"../vendor/CETEI\");\n\n\nclass FullText extends React.Component {\n   constructor(props){\n      super(props)\n      this.handleToggleFullText = this.handleToggleFullText.bind(this)\n\n  }\n  componentDidUpdate() {\n    var _this = this;\n\t\tconst htmlText = new cetei()\n\t\tif (this.props.fullText.textInfo.text){\n\t\t\thtmlText.makeHTML5(this.props.fullText.textInfo.text, function(data){\n\t\t\t\t// get id of quote\n\t\t\t\tconst quoteid = _this.props.focusedQuotation.id.split(\"/\").pop();\n        const sourceid = _this.props.focusedQuotation.source.split(\"/\").pop();\n\n\t\t\t\t//load text in div\n\t\t\t\t_this.refs.text.replaceChild(data, _this.refs.text.childNodes[0]);\n        let selfTopPos = \"\"\n        try{\n          // find quote in text if there and change class to highlighted\n  \t\t\t\tif (data.querySelector(\"#\" + quoteid)){\n  \t\t\t\t\tdata.querySelector(\"#\" + quoteid).setAttribute(\"class\", \"highlighted\");\n  \t\t\t\t}\n          selfTopPos = document.getElementById(quoteid).offsetTop;\n        }\n        catch(e){\n          // find quote in text if there and change class to highlighted\n  \t\t\t\tif (data.querySelector(\"#\" + sourceid)){\n  \t\t\t\t\tdata.querySelector(\"#\" + sourceid).setAttribute(\"class\", \"highlighted\");\n  \t\t\t\t}\n          selfTopPos = document.getElementById(sourceid).offsetTop;\n        }\n\n        console.log(\"scroll\", selfTopPos);\n        $(\".full-text-wrapper\").animate({ scrollTop: selfTopPos-100 }, 400);\n\n\t\t\t});\n\t\t}\n\n\n  }\n  handleToggleFullText(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n \t\tdispatch(actions.toggleFullTextDisplay(this.props.fullText.visible));\n\n  }\n  render(){\n     var _this = this;\n\n     return(\n       <div className=\"full-text-wrapper\">\n         <div id=\"text-tool-bar\">\n           <button id=\"hide-full-text\" onClick={this.handleToggleFullText}>Hide Text</button>\n         </div>\n         <div id=\"text\" ref=\"text\"><div/>\n       </div>\n\n       </div>\n     )\n   }\n }\n\n//module.exports = BarChart;\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(FullText);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\n\n\n\n\n//var actions = require('actions');\nimport Search from \"./Search\";\nimport QuotationList from \"./QuotationList\";\nimport FocusedQuotation from \"./FocusedQuotation\";\nimport CanonicalQuotation from \"./CanonicalQuotation\";\nimport CanonicalQuotationList from \"./CanonicalQuotationList\";\nimport ManifestationQuotationList from \"./ManifestationQuotationList\";\nimport Paragraph from \"./Paragraph\";\nimport BarChart from \"./BarChart\";\nimport Images from \"./Images\";\nimport FullText from \"./FullText\";\n\nclass TodoApp extends React.Component{\n\trender(){\n\t\tvar _this = this;\n\t\tfunction barGraphDisplay(){\n\t\t\tif (_this.props.chart.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"chart\">\n\t\t\t\t\t\t<BarChart size={[500,500]}/>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\tfunction imagesDisplay(){\n\t\t\tif (_this.props.images.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t<Images/>\n\t\t\t\t\t\t<div className=\"column5\">\n\t\t\t\t\t\t\t<Paragraph/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\tfunction fullTextDisplay(){\n\t\t\tif (_this.props.fullText.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<FullText/>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\tfunction quotationDisplay(){\n\t\t\tif (!_this.props.chart.visible && !_this.props.images.visible && !_this.props.fullText.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t<div id=\"quotationsList\" className=\"column2\">\n\t\t\t\t\t\t<QuotationList/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"ManifestationQuotationsList\" className=\"column3\">\n\t\t\t\t\t\t<ManifestationQuotationList/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column4\">\n\t\t\t\t\t\t<Paragraph/>\n\t\t\t\t\t\t{/* <FocusedQuotation/>\n\t\t\t\t\t\t<CanonicalQuotation/> */}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"CanonicalQuotationList\" className=\"column5\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//<CanonicalQuotationList/>\n\t\t\t\t\t\t\t<Paragraph type=\"source\"/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<div className='search column1'>\n\t\t\t\t\t\t<Search/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{quotationDisplay()}\n\t\t\t\t\t{barGraphDisplay()}\n\t\t\t\t\t{imagesDisplay()}\n\t\t\t\t\t{fullTextDisplay()}\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n//module.exports = ;\nexport default connect(\n  (state) => {\n\t\treturn state\n\t}\n)(TodoApp);\n","import React from \"react\";\nimport TodoApp from \"./TodoApp\";\n\nvar Main = (props) => {\n\treturn(\n\t\t\t<div>\n        <h3 className='page-title'><em>Ad fontes</em>: A Scholastic Quotation Explorer</h3>\n\t\t\t\t<div className='page-header'>\n\t\t\t\t\t<p>A <a href=\"http://lombardpress.org\">LombardPress</a> Publication</p>\n\t\t\t\t\t<p>Powerd by Data from the <a href=\"https://scta.info\">Scholastic Commentaries and Text Archive</a></p>\n\t\t\t\t\t<p>Designed by <a href=\"http://jeffreycwitt.com\">Jeffrey C. Witt</a></p>\n        </div>\n        <TodoApp/>\n\t\t\t</div>\n\t\t);\n}\n\nexport default Main;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {Provider} from \"react-redux\"\n//import {Route, Router, IndexRoute, hashHistory} from \"react-router\"\n\nimport TodoApp from \"./components/TodoApp\"\n//var BarChart = require(\"BarChart\");\nimport BarChart from './components/BarChart'\nimport Main from './components/Main'\n\nimport {setSearchParameters, fetchQuotationAuthors, fetchExpressionAuthors, fetchSearchWorksList, fetchExpressionTypes, fetchQuotationExpressionTypes, fetchQuotationWorksList, fetchWorkGroups, fetchAuthorTypes, fetchChart} from './actions/actions'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './styles/app.scss';\nvar store = require(\"./store/configureStore\").configure();\n\n\n\nstore.subscribe(() => {\n\tvar state = store.getState();\n\n});\n\n//var state = store.getState();\n\nstore.dispatch(setSearchParameters({}));\n//store.dispatch(actions.fetchCanonicalQuotations());\nstore.dispatch(fetchQuotationAuthors());\nstore.dispatch(fetchExpressionAuthors());\nstore.dispatch(fetchSearchWorksList());\nstore.dispatch(fetchExpressionTypes());\nstore.dispatch(fetchQuotationExpressionTypes());\nstore.dispatch(fetchQuotationWorksList());\nstore.dispatch(fetchWorkGroups());\nstore.dispatch(fetchAuthorTypes());\nstore.dispatch(fetchChart());\n\n\n\n\n// load foundation\n//$(document).foundation();\n\n// App css\n\n//require('style!css!sass!applicationStyles')\n//$(document).foundation();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Main/>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n","export var searchReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'CLEAR_SEARCH_PARAMETERS':\n      return {\n        ...state,\n        searchParameters: []\n        }\n    case 'SET_SEARCH_PARAMETERS':\n      return {\n        ...state,\n        searchParameters: action.searchParameters\n        }\n    case 'START_SEARCH_WORKS_FETCH':\n        return {\n          ...state,\n          searchWorks: []\n        }\n    case 'COMPLETE_SEARCH_WORKS_FETCH':\n      return {\n        ...state,\n        searchWorks: action.listOfWorks\n      }\n    case 'START_QUOTATION_AUTHORS_FETCH':\n        return {\n          ...state,\n          quotationAuthors: []\n        }\n    case 'COMPLETE_QUOTATION_AUTHORS_FETCH':\n      return {\n        ...state,\n        quotationAuthors: action.authors\n      }\n    case 'START_EXPRESSION_AUTHORS_FETCH':\n        return {\n          ...state,\n          expressionAuthors: []\n        }\n    case 'COMPLETE_EXPRESSION_AUTHORS_FETCH':\n      return {\n        ...state,\n        expressionAuthors: action.authors\n      }\n    case 'START_QUOTATION_WORKS_LIST_FETCH':\n        return {\n          ...state,\n          quotationWorksList: []\n        }\n    case 'COMPLETE_QUOTATION_WORKS_LIST_FETCH':\n      return {\n        ...state,\n        quotationWorksList: action.quotationWorksList\n      }\n    case 'START_QUOTATION_WORK_PARTS_FETCH':\n      return {\n        ...state,\n        quotationWorkParts: []\n      }\n    case 'COMPLETE_QUOTATION_WORK_PARTS_FETCH':\n      return {\n        ...state,\n        quotationWorkParts: action.parts\n      }\n    case 'START_EXPRESSION_PARTS_FETCH':\n      return {\n        ...state,\n        expressionParts: []\n      }\n    case 'COMPLETE_EXPRESSION_PARTS_FETCH':\n      return {\n        ...state,\n        expressionParts: action.parts\n      }\n    case 'START_EXPRESSION_TYPE_FETCH':\n        return {\n          ...state,\n          expressionTypes: []\n        }\n    case 'COMPLETE_EXPRESSION_TYPE_FETCH':\n      return {\n        ...state,\n        expressionTypes: action.expressionTypes\n      }\n    case 'START_QUOTATION_EXPRESSION_TYPE_FETCH':\n        return {\n          ...state,\n          quotationExpressionTypes: []\n        }\n    case 'COMPLETE_QUOTATION_EXPRESSION_TYPE_FETCH':\n      return {\n        ...state,\n        quotationExpressionTypes: action.quotationExpressionTypes\n      }\n    case 'START_WORK_GROUPS_FETCH':\n        return {\n          ...state,\n          workGroups: []\n        }\n    case 'COMPLETE_WORK_GROUPS_FETCH':\n      return {\n        ...state,\n        workGroups: action.workGroups\n      }\n    case 'START_AUTHOR_TYPES_FETCH':\n        return {\n          ...state,\n          authorTypes: []\n        }\n    case 'COMPLETE_AUTHOR_TYPES_FETCH':\n      return {\n        ...state,\n        authorTypes: action.authorTypes\n      }\n    default:\n      return state\n  };\n};\n","export var chartReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'TOGGLE_GRAPH_DISPLAY':\n        return {\n          ...state,\n          visible: !action.current\n        }\n    case 'START_CHART_FETCH':\n        return {\n          ...state,\n          count: []\n        }\n    case 'COMPLETE_CHART_FETCH':\n      return {\n        ...state,\n        count: action.count\n      }\n    default:\n      return state\n  };\n};\n","export var imagesReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'TOGGLE_IMAGES_DISPLAY':\n        return {\n          ...state,\n          visible: !action.current\n        }\n    // case 'TOGGLE_GRAPH_DISPLAY':\n    //   return {\n    //     ...state,\n    //     visible: false\n    //   }\n    case 'START_IMAGES_FETCH':\n        return {\n          ...state,\n          images: []\n        }\n    case 'COMPLETE_IMAGES_FETCH':\n      return {\n        ...state,\n        images: action.images\n      }\n    default:\n      return state\n  };\n};\n","export var quotationsReducer = (state = [], action) => {\n  switch (action.type){\n    case 'ADD_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'ADD_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'CLEAR_QUOTATIONS':\n      return [];\n    case 'START_QUOTATIONS_FETCH':\n      //return [];\n      return \"fetching\";\n    case 'COMPLETE_QUOTATIONS_FETCH':\n      return action.quotations.map((quotation)=>{\n        return {\n          id: quotation.quotation.value,\n          quotation: quotation.quotation_text.value,\n          title: quotation.toplevel_expression_title.value,\n          author: quotation.author_title.value,\n          focused: false,\n          isInstanceOf: quotation.isInstanceOf ? quotation.isInstanceOf.value : null,\n          source: quotation.source ? quotation.source.value : null,\n          citation: quotation.citation ? quotation.citation.value : null,\n          refText: quotation.refText ? quotation.refText.value : null,\n          refType: quotation.refType ? quotation.refType.value.split(\"/resource/\").reverse()[0] : null,\n        }\n      });\n    case 'CHANGE_QUOTATIONS_FOCUS':\n      var updatedState = state.map((quotation) =>{\n        if (quotation.id === action.id){\n          return{\n            ...quotation,\n            focused: true\n          }\n        }\n        else{\n          return{\n            ...quotation,\n            focused: false\n          }\n        }\n      });\n      return [\n        ...updatedState,\n      ];\n    default:\n      return state;\n  };\n};\n","export var focusedQuotationReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'CREATE_FOCUSED_QUOTATION':\n      return action.quotation;\n    case 'CLEAR_FOCUSED_QUOTATION':\n      return {}\n    default:\n      return state;\n  };\n};\n","export var canonicalQuotationReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'CREATE_CANONICAL_QUOTATION':\n      return action.quotation;\n    case 'CLEAR_CANONICAL_QUOTATION':\n      return null;\n    default:\n      return state;\n  };\n};\n","export var canonicalQuotationsReducer = (state = [], action) => {\n  switch (action.type){\n    case 'ADD_CANONICAL_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'CLEAR_CANONICAL_QUOTATIONS':\n      return []\n    case 'START_CANONICAL_QUOTATIONS_FETCH':\n      return []\n    case 'COMPLETE_CANONICAL_QUOTATIONS_FETCH':\n\n      return action.canonicalQuotations.map((quotation) => {\n        return {\n          id: quotation.quotation.value,\n          quotation: quotation.quotation_text.value,\n          citation: quotation.citation ? quotation.citation.value : \"citation not yet recorded\",\n          focused: false,\n        }\n      });\n    case 'CLEAR_CANONICAL_QUOTATIONS_FOCUS':\n      return state.map((quotation) => {\n        return{\n          ...quotation,\n          focused: false\n        }\n      });\n    case 'CHANGE_CANONICAL_QUOTATIONS_FOCUS':\n      var updatedState = state.map((quotation) =>{\n        if (quotation.id === action.id){\n          return{\n            ...quotation,\n            focused: true\n          }\n        }\n        else{\n          return{\n            ...quotation,\n            focused: false\n          }\n        }\n      });\n      return [\n        ...updatedState,\n      ];\n    default:\n      return state;\n  };\n};\n","/// manifestation quotations reducer\nexport var manifestationQuotationsReducer = (state = [], action) => {\n  switch (action.type){\n    case 'ADD_MANIFESTATION_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'CLEAR_MANIFESTATION_QUOTATIONS':\n      return []\n    case 'START_MANIFESTATION_QUOTATIONS_FETCH':\n      return []\n    case 'COMPLETE_MANIFESTATION_QUOTATIONS_FETCH':\n\n      return action.manifestationQuotations.map((quotation) => {\n        return {\n          id: quotation.quotation.value,\n          quotation: quotation.quotation_text.value,\n          focused: false,\n          isManifestationOf: quotation.isManifestationOf ? quotation.isManifestationOf.value : null\n        }\n      });\n    case 'CLEAR_MANIFESTATION_QUOTATIONS_FOCUS':\n      return state.map((quotation) => {\n        return{\n          ...quotation,\n          focused: false\n        }\n      });\n    case 'CHANGE_MANIFESTATION_QUOTATIONS_FOCUS':\n      var updatedState = state.map((quotation) =>{\n        if (quotation.id === action.id){\n          return{\n            ...quotation,\n            focused: true\n          }\n        }\n        else{\n          return{\n            ...quotation,\n            focused: false\n          }\n        }\n      });\n      return [\n        ...updatedState,\n      ];\n    default:\n      return state;\n  };\n};\n","export var paragraphReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'ADD_PARAGRAPH':\n      return action.paragraph;\n    case 'CLEAR_PARAGRAPH':\n      return {}\n    case 'START_PARAGRAPH_FETCH':\n      return {}\n    case 'COMPLETE_PARAGRAPH_FETCH':\n      return action.paragraph\n    case 'START_REVIEW_FETCH':\n      return state\n    case 'COMPLETE_REVIEW_FETCH':\n      return {\n        ...state,\n        review: action.review\n      }\n    default:\n      return state;\n  }\n};\n","export var sourceParagraphReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'ADD_SOURCE_PARAGRAPH':\n      return action.sourceParagraph;\n    case 'CLEAR_SOURCE_PARAGRAPH':\n      return {}\n    case 'START_SOURCE_PARAGRAPH_FETCH':\n      return {}\n    case 'COMPLETE_SOURCE_PARAGRAPH_FETCH':\n      return action.sourceParagraph\n    case 'START_SOURCE_PARAGRAPH_REVIEW_FETCH':\n      return state\n    case 'COMPLETE_SOURCE_PARAGRAPH_REVIEW_FETCH':\n      return {\n        ...state,\n        review: action.review\n      }\n    default:\n      return state;\n  }\n};\n","// paragraphReducer\nexport var fullTextReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'TOGGLE_FULL_TEXT_DISPLAY':\n      return {\n        ...state,\n        visible: !action.current\n      }\n    case 'ADD_FULL_TEXT':\n      return {\n        ...state,\n        textInfo: action.text\n      }\n    case 'CLEAR_FULL_TEXT':\n      return {\n        ...state,\n        textInfo: {}\n      }\n    case 'START_FULL_TEXT_FETCH':\n      return {\n        ...state,\n        textInfo: {}\n      }\n    case 'COMPLETE_FULL_TEXT_FETCH':\n      return {\n        ...state,\n        textInfo: action.text\n      }\n    default:\n      return state;\n  }\n};\n","\n\n\nimport {searchReducer} from '../reducers/searchReducer';\nimport {chartReducer} from \"../reducers/chartReducer\";\nimport {imagesReducer} from \"../reducers/imagesReducer\";\nimport {quotationsReducer} from \"../reducers/quotationsReducer\";\nimport {focusedQuotationReducer} from \"../reducers/focusedQuotationReducer\";\nimport {canonicalQuotationReducer} from \"../reducers/canonicalQuotationReducer\";\nimport {canonicalQuotationsReducer} from \"../reducers/canonicalQuotationsReducer\";\nimport {manifestationQuotationsReducer} from \"../reducers/manifestationQuotationsReducer\";\nimport {paragraphReducer} from \"../reducers/paragraphReducer\";\nimport {sourceParagraphReducer} from \"../reducers/sourceParagraphReducer\";\nimport {fullTextReducer} from \"../reducers/fullTextReducer\";\n\nvar redux = require('redux')\nvar thunk = require('redux-thunk').default;\n\nexport var configure = (initialState = {}) => {\n  var reducer = redux.combineReducers({\n    search: searchReducer,\n    quotations: quotationsReducer,\n    focusedQuotation: focusedQuotationReducer,\n    canonicalQuotation: canonicalQuotationReducer,\n    canonicalQuotations: canonicalQuotationsReducer,\n    manifestationQuotations: manifestationQuotationsReducer,\n    paragraph: paragraphReducer,\n    sourceParagraph: sourceParagraphReducer,\n    chart: chartReducer,\n    images: imagesReducer,\n    fullText: fullTextReducer,\n\n  })\n\n  var store = redux.createStore(reducer, initialState, redux.compose(\n    redux.applyMiddleware(thunk),\n    window.devToolsExtension ?window.devToolsExtension() : f => f\n  ));\n  return store;\n}\n","import axios from 'axios';\n\nconst sparqlEndpoint = \"https://sparql-docker.scta.info/ds/query\"\n//const sparqlEndpoint = \"http://sparql-staging.scta.info/ds/query\"\n//const sparqlEndpoint = \"http://localhost:3030/ds/query\"\n\n///search actions\n//===============\nexport var clearSearchParameters = () => {\n  return {\n    type: \"CLEAR_SEARCH_PARAMETERS\",\n  };\n};\nexport var setSearchParameters = (searchParameters) => {\n  return {\n    type: \"SET_SEARCH_PARAMETERS\",\n    searchParameters\n  };\n};\nexport var startSearchWorksFetch = () => {\n  return{\n    type: \"START_SEARCH_WORKS_FETCH\"\n  };\n};\nexport var completeSearchWorksFetch = (listOfWorks) => {\n  return{\n    type: \"COMPLETE_SEARCH_WORKS_FETCH\",\n    listOfWorks\n  };\n};\nexport var fetchSearchWorksList = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var workGroupSparql = \"\"\n    if (state.search.searchParameters.workGroup){\n      workGroupSparql = [\n      \"<http://scta.info/resource/\" + state.search.searchParameters.workGroup + \"> <http://scta.info/property/hasExpression> ?expression .\"\n      ].join('');\n    }\n    let expressionAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?expressionAuthor . \",\n      \"?expressionAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n      ].join('');\n    }\n\n    var authorSparql = \"\"\n    if (state.search.searchParameters.expressionAuthor){\n      authorSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n      ].join('');\n    }\n    var query = [\n        \"SELECT ?type ?expression ?expressionShortId ?expressionTitle ?author ?authorTitle ?workGroup ?workGroupTitle\",\n        \"WHERE { \",\n          \"?expression a <http://scta.info/resource/expression> .\",\n          \"?expression a ?type .\",\n          \"?expression <http://scta.info/property/level> '1' . \",\n          expressionAuthorTypeSparql,\n          workGroupSparql,\n          authorSparql,\n          \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n          \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n          \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n          \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n          \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n          \"?expression <http://purl.org/dc/terms/isPartOf> ?workGroup .\",\n          \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n          \"}\",\n        \"ORDER BY ?expressionTitle\"].join('');\n\n  dispatch(startSearchWorksFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var searchWorks = results.map((result) => {\n      var workInfo = {\n          expression: result.expression.value,\n          expressionShortId: result.expressionShortId ? result.expressionShortId.value : \"\",\n          expressionTitle: result.expressionTitle.value,\n          workGroup: result.workGroup ? result.workGroup.value : \"\",\n          workGroupTitle: result.workGroupTitle ? result.workGroupTitle.value : \"\",\n          author: result.author ? result.author.value : \"\",\n          authorTitle: result.author ? result.authorTitle.value : \"\",\n          type: result.type.value\n\n        }\n        return workInfo\n\n      });\n      dispatch(completeSearchWorksFetch(searchWorks));\n    });\n  }\n};\n\n//Begin Quotations Authors Fetch\nexport var startQuotationAuthorsFetch = () => {\n  return{\n    type: \"START_QUOTATION_AUTHORS_FETCH\"\n  };\n};\nexport var completeQuotationAuthorsFetch = (authors) => {\n  return{\n    type: \"COMPLETE_QUOTATION_AUTHORS_FETCH\",\n    authors\n  };\n};\nexport var fetchQuotationAuthors = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    let quotationAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorType){\n\n      quotationAuthorTypeSparql = [\n      \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.quotationAuthorType + \"> .\"\n      ].join('');\n    }\n    // Begin Author date sparql filters\n    let quotationAuthorDateSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?dateOfBirth .\"\n    }\n    let quotationAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter){\n      quotationAuthorDateAfterSparqlFilter = \"FILTER (?dateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n    }\n    let quotationAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateBeforeSparqlFilter = \"FILTER (?dateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n    }\n    // END author date sparql filter\n    var query = [\n        \"SELECT DISTINCT ?author ?authorTitle ?authorShortId \",\n        \"WHERE { \",\n        \"?author a <http://scta.info/resource/person> .\",\n        quotationAuthorTypeSparql,\n        quotationAuthorDateSparql,\n        \"?resource a <http://scta.info/resource/expression> .\",\n        \"?resource <http://scta.info/property/level> '1' .\",\n        \"?resource <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n        \"?author <http://scta.info/property/shortId> ?authorShortId .\",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n        quotationAuthorDateAfterSparqlFilter,\n        quotationAuthorDateBeforeSparqlFilter,\n        \"}\",\n        \"ORDER BY ?authorTitle\"].join('');\n  dispatch(startQuotationAuthorsFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var authors = results.map((result) => {\n        var authorInfo = {\n          author: result.author.value,\n          authorShortId: result.authorShortId.value,\n          authorTitle: result.authorTitle.value,\n        }\n        return authorInfo\n\n      });\n      dispatch(completeQuotationAuthorsFetch(authors));\n    });\n  }\n};\n// End Quotation Authors Fetch\n// Begin Expression Authors Fetch\nexport var startExpressionAuthorsFetch = () => {\n  return{\n    type: \"START_EXPRESSION_AUTHORS_FETCH\"\n  };\n};\nexport var completeExpressionAuthorsFetch = (authors) => {\n  return{\n    type: \"COMPLETE_EXPRESSION_AUTHORS_FETCH\",\n    authors\n  };\n};\nexport var fetchExpressionAuthors = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    let expressionAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorType){\n\n      expressionAuthorTypeSparql = [\n      \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n      ].join('');\n    }\n\n    // Begin expression author filter\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?dateOfBirth .\"\n    }\n\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?dateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateBeforeSparqlFilter = \"FILTER (?dateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    // End expression author filter\n    var query = [\n        \"SELECT DISTINCT ?author ?authorTitle ?authorShortId \",\n        \"WHERE { \",\n        \"?author a <http://scta.info/resource/person> .\",\n        expressionAuthorTypeSparql,\n        expressionAuthorDateSparql,\n        \"?resource a <http://scta.info/resource/expression> .\",\n        \"?resource <http://scta.info/property/level> '1' .\",\n        \"?resource <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n        \"?author <http://scta.info/property/shortId> ?authorShortId .\",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n        expressionAuthorDateAfterSparqlFilter,\n        expressionAuthorDateBeforeSparqlFilter,\n        \"}\",\n        \"ORDER BY ?authorTitle\"].join('');\n\n  dispatch(startExpressionAuthorsFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var authors = results.map((result) => {\n        var authorInfo = {\n          author: result.author.value,\n          authorShortId: result.authorShortId.value,\n          authorTitle: result.authorTitle.value,\n        }\n        return authorInfo\n\n      });\n      dispatch(completeExpressionAuthorsFetch(authors));\n    });\n  }\n};\n// END Expression Authors Actions\nexport var startQuotationWorksListFetch = () => {\n  return{\n    type: \"START_QUOTATION_WORKS_LIST_FETCH\"\n  };\n};\nexport var completeQuotationWorksListFetch = (quotationWorksList) => {\n  return{\n    type: \"COMPLETE_QUOTATION_WORKS_LIST_FETCH\",\n    quotationWorksList\n  };\n};\nexport var fetchQuotationWorksList = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var quotationWorkGroupSparql = \"\"\n    if (state.search.searchParameters.quotationWorkGroup){\n      quotationWorkGroupSparql = [\n      \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?expression .\"\n      ].join('');\n    }\n    var quotationAuthorSparql = \"\"\n    if (state.search.searchParameters.quotationAuthor){\n      quotationAuthorSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.quotationAuthor + \"> .\"\n      ].join('');\n    }\n    let quotationAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.quotationAuthorType){\n      quotationAuthorTypeSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n      \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.quotationAuthorType + \"> .\"\n      ].join('');\n    }\n\n    // var query = [\n    //     \"SELECT ?type ?expression ?expressionShortId ?expressionTitle ?author ?authorTitle ?workGroup ?workGroupTitle\",\n    //     \"WHERE { \",\n    //     \"{\",\n    //     \"?expression a <http://scta.info/resource/work> .\",\n    //     \"?expression a ?type .\",\n    //     \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n    //     \"}\",\n    //     \"UNION{\",\n    //     \"?expression a <http://scta.info/resource/expression> .\",\n    //     \"?expression a ?type .\",\n    //     \"?expression <http://scta.info/property/level> '1' . \",\n    //     \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n    //     \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n    //     \"OPTIONAL { \",\n    //     \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n    //     \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n    //     \"}\",\n    //     \"?expression <http://purl.org/dc/terms/isPartOf> ?workGroup .\",\n    //     \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n    //     \"}\",\n    //     \"}\",\n    //     \"ORDER BY ?expressionTitle\"].join('');\n    var query = [\n        \"SELECT ?type ?expression ?expressionShortId ?expressionTitle ?author ?authorTitle ?workGroup ?workGroupTitle\",\n        \"WHERE { \",\n        \"?expression a <http://scta.info/resource/expression> .\",\n        \"?expression a ?type .\",\n        \"?expression <http://scta.info/property/level> '1' . \",\n        quotationAuthorTypeSparql,\n        quotationWorkGroupSparql,\n        quotationAuthorSparql,\n        \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n        \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n        \"OPTIONAL { \",\n        \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n        \"}\",\n        \"?expression <http://purl.org/dc/terms/isPartOf> ?workGroup .\",\n        \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n        \"}\",\n        \"ORDER BY ?expressionTitle\"].join('');\n\n  dispatch(startQuotationWorksListFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var quotationWorksList = results.map((result) => {\n      var quotationWorkInfo = {\n          expression: result.expression.value,\n          expressionShortId: result.expressionShortId ? result.expressionShortId.value : \"\",\n          expressionTitle: result.expressionTitle.value,\n          workGroup: result.workGroup ? result.workGroup.value : \"\",\n          workGroupTitle: result.workGroupTitle ? result.workGroupTitle.value : \"\",\n          author: result.author ? result.author.value : \"\",\n          authorTitle: result.author ? result.authorTitle.value : \"\",\n          type: result.type.value\n\n        }\n        return quotationWorkInfo\n      });\n      dispatch(completeQuotationWorksListFetch(quotationWorksList));\n    });\n  }\n};\nexport var startQuotationWorkPartsFetch = () => {\n  return{\n    type: \"START_QUOTATION_WORK_PARTS_FETCH\"\n  };\n};\nexport var completeQuotationWorkPartsFetch = (parts) => {\n  return{\n    type: \"COMPLETE_QUOTATION_WORK_PARTS_FETCH\",\n    parts\n  };\n};\nexport var fetchQuotationWorkParts = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var currentNode = \"\";\n    if (state.search.searchParameters.quotationWorkPart != \"\"){\n      currentNode = state.search.searchParameters.quotationWorkPart;\n    }\n    else if (state.search.searchParameters.quotationWork != \"\"){\n      currentNode = state.search.searchParameters.quotationWork;\n    }\n    else{\n      currentNode = \"\";\n    }\n\n    var query = [\n        \"SELECT ?grandparent ?grandparent_title ?parent_title ?parent ?child ?child_title \",\n        \"WHERE { \",\n        \"BIND(<http://scta.info/resource/\" + currentNode + \"> AS ?parent)\",\n        \"OPTIONAL {\",\n          \"?parent <http://purl.org/dc/elements/1.1/title> ?parent_title\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/hasPart> ?child .\",\n        \"?child <http://purl.org/dc/elements/1.1/title> ?child_title .\",\n        //\"MINUS{?child <http://scta.info/property/structureType> <http://scta.info/resource/structureDivision> .}\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/isPartOf> ?grandparent .\",\n        //\"?grandparent <http://scta.info/property/structureType> <http://scta.info/resource/structureCollection> .\",\n        \"?grandparent <http://purl.org/dc/elements/1.1/title> ?grandparent_title\",\n        \"}\",\n        \"}\"\n        ].join('');\n    //conditional here prevents running query if the node is blank\n    //if (currentNode){\n    dispatch(startQuotationWorkPartsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings;\n      var parts = results.map((result) => {\n          var partInfo = {\n            grandparent: result.grandparent ? result.grandparent.value : \"\",\n            grandparent_title: result.grandparent_title ? result.grandparent_title.value : \"\",\n            parent: result.parent.value,\n            parent_title: result.parent_title ? result.parent_title.value : \"\",\n            child: result.child ? result.child.value : \"\",\n            child_title: result.child_title ? result.child_title.value : \"\"\n          }\n          return partInfo\n\n        });\n        dispatch(completeQuotationWorkPartsFetch(parts));\n      });\n    //}\n  }\n};\n\nexport var startExpressionPartsFetch = () => {\n  return{\n    type: \"START_EXPRESSION_PARTS_FETCH\"\n  };\n};\nexport var completeExpressionPartsFetch = (parts) => {\n  return{\n    type: \"COMPLETE_EXPRESSION_PARTS_FETCH\",\n    parts\n  };\n};\nexport var fetchExpressionParts = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var currentNode = \"\";\n    if (state.search.searchParameters.expressionPart != \"\"){\n      currentNode = state.search.searchParameters.expressionPart;\n    }\n    else if (state.search.searchParameters.expressionId != \"\"){\n      currentNode = state.search.searchParameters.expressionId;\n    }\n    else{\n      currentNode = \"\";\n    }\n    var query = [\n        \"SELECT ?grandparent ?grandparent_title ?grandparent_level ?parent_title ?parent ?parent_level ?child ?child_level ?child_title \",\n        \"WHERE { \",\n        \"BIND(<http://scta.info/resource/\" + currentNode + \"> AS ?parent)\",\n        \"OPTIONAL {\",\n          \"?parent <http://purl.org/dc/elements/1.1/title> ?parent_title .\",\n          \"?parent <http://scta.info/property/level> ?parent_level .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/hasPart> ?child .\",\n        \"?child <http://purl.org/dc/elements/1.1/title> ?child_title .\",\n        \"?child <http://scta.info/property/level> ?child_level .\",\n        //\"MINUS{?child <http://scta.info/property/structureType> <http://scta.info/resource/structureDivision> .}\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/isPartOf> ?grandparent .\",\n        //\"?grandparent <http://scta.info/property/structureType> <http://scta.info/resource/structureCollection> .\",\n        \"?grandparent <http://purl.org/dc/elements/1.1/title> ?grandparent_title .\",\n        \"?grandparent <http://scta.info/property/level> ?grandparent_level .\",\n        \"}\",\n        \"}\"\n        ].join('');\n  //conditional prevents running query if current node is blank\n  if (currentNode){\n    dispatch(startExpressionPartsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings;\n      var parts = results.map((result) => {\n          var partInfo = {\n            grandparent: result.grandparent ? result.grandparent.value : \"\",\n            grandparent_title: result.grandparent_title ? result.grandparent_title.value : \"\",\n            grandparent_level: result.grandparent_level ? result.grandparent_level.value : \"\",\n            parent: result.parent.value,\n            parent_title: result.parent_title ? result.parent_title.value : \"\",\n            parent_level: result.parent_level ? result.parent_level.value : \"\",\n            child: result.child ? result.child.value : \"\",\n            child_title: result.child_title ? result.child_title.value : \"\",\n            child_level: result.child_level ? result.child_level.value : \"\",\n          }\n          return partInfo\n\n        });\n        dispatch(completeExpressionPartsFetch(parts));\n      });\n    }\n  }\n};\n\nexport var startQuotationExpressionTypeFetch = () => {\n  return{\n    type: \"START_QUOTATION_EXPRESSION_TYPE_FETCH\"\n  };\n};\nexport var completeQuotationExpressionTypeFetch = (quotationExpressionTypes) => {\n  return{\n    type: \"COMPLETE_QUOTATION_EXPRESSION_TYPE_FETCH\",\n    quotationExpressionTypes\n  };\n};\nexport var fetchQuotationExpressionTypes = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n        \"SELECT ?quotationExpressionType ?quotationExpressionTypeTitle ?quotationExpressionTypeShortId \",\n        \"WHERE { \",\n        \"?quotationExpressionType a <http://scta.info/resource/expressionType> .\",\n        \"?quotationExpressionType <http://scta.info/property/shortId> ?quotationExpressionTypeShortId .\",\n        \"?quotationExpressionType <http://purl.org/dc/elements/1.1/title> ?quotationExpressionTypeTitle .\",\n        \"}\",\n        \"ORDER BY ?quotationExpressionTypeTitle\"].join('');\n\n  dispatch(startQuotationExpressionTypeFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n\n    var quotationExpressionTypes = results.map((result) => {\n      var quotationExpressionTypeInfo = {\n          quotationExpressionType: result.quotationExpressionType.value,\n          quotationExpressionTypeShortId: result.quotationExpressionTypeShortId.value,\n          quotationExpressionTypeTitle: result.quotationExpressionTypeTitle.value\n        }\n        return quotationExpressionTypeInfo\n      });\n      dispatch(completeQuotationExpressionTypeFetch(quotationExpressionTypes));\n    });\n  }\n};\n\n\nexport var startExpressionTypeFetch = () => {\n  return{\n    type: \"START_EXPRESSION_TYPE_FETCH\"\n  };\n};\nexport var completeExpressionTypeFetch = (expressionTypes) => {\n  return{\n    type: \"COMPLETE_EXPRESSION_TYPE_FETCH\",\n    expressionTypes\n  };\n};\nexport var fetchExpressionTypes = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n        \"SELECT ?expressionType ?expressionTypeTitle ?expressionTypeShortId \",\n        \"WHERE { \",\n        \"?expressionType a <http://scta.info/resource/expressionType> .\",\n        \"?expressionType <http://scta.info/property/shortId> ?expressionTypeShortId .\",\n        \"?expressionType <http://purl.org/dc/elements/1.1/title> ?expressionTypeTitle .\",\n        \"}\",\n        \"ORDER BY ?expressionTypeTitle\"].join('');\n\n  dispatch(startExpressionTypeFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var expressionTypes = results.map((result) => {\n      var expressionTypeInfo = {\n          expressionType: result.expressionType.value,\n          expressionTypeShortId: result.expressionTypeShortId.value,\n          expressionTypeTitle: result.expressionTypeTitle.value\n        }\n        return expressionTypeInfo\n      });\n      dispatch(completeExpressionTypeFetch(expressionTypes));\n    });\n  }\n};\nexport var startWorkGroupsFetch = () => {\n  return{\n    type: \"START_WORK_GROUPS_FETCH\"\n  };\n};\nexport var completeWorkGroupsFetch = (workGroups) => {\n  return{\n    type: \"COMPLETE_WORK_GROUPS_FETCH\",\n    workGroups\n  };\n};\nexport var fetchWorkGroups = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n        \"SELECT ?workGroup ?workGroupShortId ?workGroupTitle \",\n        \"WHERE { \",\n        \"?workGroup a <http://scta.info/resource/workGroup> .\",\n        \"?workGroup <http://scta.info/property/shortId> ?workGroupShortId .\",\n        \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n        \"}\",\n        \"ORDER BY ?workGroupTitle\"].join('');\n  dispatch(startWorkGroupsFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var workGroups = results.map((result) => {\n      var workGroupInfo = {\n          workGroup: result.workGroup.value,\n          workGroupShortId: result.workGroupShortId.value,\n          workGroupTitle: result.workGroupTitle.value\n        }\n        return workGroupInfo\n      });\n      dispatch(completeWorkGroupsFetch(workGroups));\n    });\n  }\n};\n// Author types fetch\n\nexport var startAuthorTypesFetch = () => {\n  return{\n    type: \"START_AUTHOR_TYPES_FETCH\"\n  };\n};\nexport var completeAuthorTypesFetch = (authorTypes) => {\n  return{\n    type: \"COMPLETE_AUTHOR_TYPES_FETCH\",\n    authorTypes\n  };\n};\nexport var fetchAuthorTypes = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n      \"SELECT ?authorType ?authorTypeTitle ?authorTypeShortId \",\n      \"WHERE { \",\n      \"?authorType a <http://scta.info/resource/personType> .\",\n      \"?authorType <http://scta.info/property/shortId> ?authorTypeShortId .\",\n      \"?authorType <http://purl.org/dc/elements/1.1/title> ?authorTypeTitle .\",\n      \"}\",\n      \"ORDER BY ?authorTypeTitle\"].join('');\n  dispatch(startAuthorTypesFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var authorTypes = results.map((result) => {\n      var authorTypeInfo = {\n          authorType: result.authorType.value,\n          authorTypeShortId: result.authorTypeShortId.value,\n          authorTypeTitle: result.authorTypeTitle.value\n        }\n        return authorTypeInfo\n      });\n      dispatch(completeAuthorTypesFetch(authorTypes));\n    });\n  }\n};\n\n\n\n///Chart Actions\nexport var toggleGraphDisplay = (current) => {\n  return{\n    type: \"TOGGLE_GRAPH_DISPLAY\",\n    current\n  };\n}\nexport var startChartFetch = () => {\n  return{\n    type: \"START_CHART_FETCH\"\n  };\n};\nexport var completeChartFetch = (count) => {\n  return{\n    type: \"COMPLETE_CHART_FETCH\",\n    count\n  };\n};\nexport var fetchChart = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var level = parseInt(state.search.searchParameters.expressionLevel)\n    if (level === 1){\n      level = 2;\n    }\n    var searchText = state.search.searchParameters.searchText || \"\";\n\n    let expressionWorkGroupSparql = \"\";\n    if (state.search.searchParameters.workGroup){\n      const workGroup = state.search.searchParameters.workGroup;\n      expressionWorkGroupSparql = [\n        \"?ref <http://purl.org/dc/terms/isPartOf> <http://scta.info/resource/\" + workGroup + \">  . \"\n      ].join('');\n    }\n\n// BEGIN Expression author queries\n    let expressionAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n    }\n\n    //Begin expression author date filter for expression author\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?expressionAuthorDateOfBirth .\"\n    }\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n        expressionAuthorDateBeforeSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    //END expression author date filter for expression author\n\n    var expressionAuthorSparql = \"\";\n    if (state.search.searchParameters.expressionAuthor){\n      expressionAuthorSparql = \"?ref <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n    }\n\n    var expressionAuthorCoreSparql = [\n      \"?ref <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n      expressionAuthorTypeSparql,\n      expressionAuthorDateSparql,\n      expressionAuthorSparql\n    ].join('');\n// End expression author queries\n\n//BEGIN Quotation Author Queries\n      var quotationAuthorTypeSparql = \"\";\n      if (state.search.searchParameters.quotationAuthorType){\n        var searchShortId = state.search.searchParameters.quotationAuthorType;\n        quotationAuthorTypeSparql = \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + searchShortId + \">  . \";\n      }\n\n      //Begin quotation author date filter for expression author\n      let quotationAuthorDateSparql = \"\";\n      if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n        quotationAuthorDateSparql =\n            \"?quotationAuthor <http://scta.info/property/dateOfBirth> ?quotationAuthorDateOfBirth .\"\n      }\n      let quotationAuthorDateAfterSparqlFilter = \"\";\n      if (state.search.searchParameters.quotationAuthorDateAfter){\n        quotationAuthorDateAfterSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n      }\n      let quotationAuthorDateBeforeSparqlFilter = \"\";\n      if (state.search.searchParameters.quotationAuthorDateBefore){\n          quotationAuthorDateBeforeSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n      }\n      //END quotation author date filter for expression author\n\n      var quotationAuthorSparql = \"\";\n      if (state.search.searchParameters.quotationAuthor){\n        var searchShortId = (state.search.searchParameters.quotationAuthor);\n        quotationAuthorSparql = \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + searchShortId + \">  . \"\n      }\n      var quotationAuthorCoreSparql = \"\"\n      if (state.search.searchParameters.quotationAuthorDateAfter\n        || state.search.searchParameters.quotationAuthorDateBefore\n        || state.search.searchParameters.quotationAuthor\n        || state.search.searchParameters.quotationAuthorType\n      ){\n        var quotationAuthorCoreSparql = [\n          \"{\",\n            \"?element <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n            \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n            \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n            \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n            quotationAuthorTypeSparql,\n            quotationAuthorDateSparql,\n            quotationAuthorSparql,\n          \"}\",\n          \"UNION\",\n          \"{\",\n            \"?element <http://scta.info/property/source> ?source .\",\n            \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n            \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n            quotationAuthorTypeSparql,\n            quotationAuthorDateSparql,\n            quotationAuthorSparql,\n          \"}\"\n        ].join('');\n      }\n\n// END Quotation Author Queries for Quotations List\n\n\n\n    var quotationWorkGroupSparql = \"\";\n    if (state.search.searchParameters.quotationWorkGroup){\n      var searchShortId = (state.search.searchParameters.quotationWorkGroup);\n      quotationWorkGroupSparql = [\n        \"{\",\n          \"?element <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n          \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"?element <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\"\n      ].join('');\n    }\n\n\n    var quotationWorkSparql = \"\";\n    if (state.search.searchParameters.quotationWork || state.search.searchParameters.quotationWorkPart){\n      var searchShortId = (state.search.searchParameters.quotationWorkPart) ? state.search.searchParameters.quotationWorkPart : state.search.searchParameters.quotationWork\n      quotationWorkSparql = [\n      \"{\",\n        \"?element <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is a member of the search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"\\n#check for quotation whose source is a member the search expression\\n\",\n        \"{\",\n          \"?element <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for quotation whose source is the search expression\\n\",\n        \"{\",\n          \"?element <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\"\n    ].join('');\n    }\n\n    //BEGIN condition for choosing ref quote or combo\n        var structureElementTypeSparql = \"\";\n        if (state.search.searchParameters.structureElementType === \"structureElementRef\"){\n          structureElementTypeSparql = [\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n            \"MINUS\",\n            \"{?element <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n            ].join('');\n        }\n        else if (state.search.searchParameters.structureElementType === \"structureElementRefDup\"){\n          structureElementTypeSparql = \"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .\"\n        }\n        else if (state.search.searchParameters.structureElementType === \"structureElementQuote\"){\n          structureElementTypeSparql = \"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\"\n        }\n        else if (state.search.searchParameters.structureElementType === \"allDup\"){\n          structureElementTypeSparql = [\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n            \"UNION\",\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> . }\"\n          ].join('');\n        }\n        else{\n          structureElementTypeSparql = [\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n            \"UNION\",\n            \"{{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n            \"MINUS\",\n            \"{?element <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n\n            \"}\"\n          ].join('');\n        }\n    //END condition for choosing ref quote or combo\n\n\n\n    //var expressionId = state.search.searchParameters.expressionPart ? state.search.searchParameters.expressionPart : state.search.searchParameters.expressionId\n    if (state.search.searchParameters.expressionId){\n      // query for quote frequency within a given expression\n      var expressionId = state.search.searchParameters.expressionId\n      var query = [\n        \"SELECT ?ref ?reftitle ?totalOrderNumber (count(?element) as ?count) \",\n        \"WHERE {\",\n        \"?ref a <http://scta.info/resource/expression> .\",\n        \"?ref <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + expressionId + \"> .\",\n        \"?ref <http://scta.info/property/level> '\" + level + \"' .\",\n        \"?ref <http://purl.org/dc/elements/1.1/title> ?reftitle .\",\n        \"OPTIONAL {\",\n        \"?ref <http://scta.info/property/totalOrderNumber> ?totalOrderNumber .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?element <http://scta.info/property/isMemberOf> ?ref .\",\n        //\"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\",\n        structureElementTypeSparql,\n        \"?element <http://scta.info/property/structureElementText> ?quotation_text .\",\n        quotationAuthorCoreSparql,\n        quotationWorkGroupSparql,\n        quotationWorkSparql,\n        \"}\",\n        quotationAuthorDateBeforeSparqlFilter,\n        quotationAuthorDateAfterSparqlFilter,\n        \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n        \"}\",\n        \"group by ?ref ?reftitle ?totalOrderNumber \",\n        \"ORDER BY ?totalOrderNumber \"\n      ].join('');\n    }\n    else {\n      // query for quote frequency across top level expressions\n      var query = [\n        \"SELECT ?ref ?reftitle ?totalOrderNumber (count(?element) as ?count) \",\n        \"WHERE {\",\n        \"?ref a <http://scta.info/resource/expression> .\",\n        \"?ref <http://scta.info/property/level> '1' .\",\n        expressionWorkGroupSparql,\n        expressionAuthorCoreSparql,\n        \"?ref <http://purl.org/dc/elements/1.1/title> ?reftitle .\",\n        \"OPTIONAL {\",\n        \"?ref <http://scta.info/property/totalOrderNumber> ?totalOrderNumber .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?element <http://scta.info/property/isMemberOf> ?ref .\",\n        //\"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\",\n        structureElementTypeSparql,\n        \"?element <http://scta.info/property/structureElementText> ?quotation_text .\",\n        quotationAuthorCoreSparql,\n        quotationWorkGroupSparql,\n        quotationWorkSparql,\n        \"}\",\n        quotationAuthorDateBeforeSparqlFilter,\n        quotationAuthorDateAfterSparqlFilter,\n        expressionAuthorDateBeforeSparqlFilter,\n        expressionAuthorDateAfterSparqlFilter,\n        \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n        \"}\",\n        \"group by ?ref ?reftitle ?totalOrderNumber \",\n        \"ORDER BY ?totalOrderNumber \"\n      ].join('');\n    }\n\n  dispatch(startChartFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var count = results.map((result) => {\n        return {\n          \"item\": result.ref ? result.ref.value : \"\",\n          \"title\": result.reftitle ? result.reftitle.value : \"\",\n          \"count\": result.count ? result.count.value : \"\"\n        }\n      });\n      dispatch(completeChartFetch(count));\n    });\n  }\n};\n\n///Chart Actions\nexport var toggleImagesDisplay = (current) => {\n  return{\n    type: \"TOGGLE_IMAGES_DISPLAY\",\n    current\n  };\n}\nexport var startImagesFetch = () => {\n  return{\n    type: \"START_IMAGES_FETCH\"\n  };\n};\nexport var completeImagesFetch = (images) => {\n  return{\n    type: \"COMPLETE_IMAGES_FETCH\",\n    images\n  };\n};\nexport var fetchImages = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var manifestation_id = state.paragraph.manifestation_id\n    var query = [\n      \"SELECT ?url \",\n      \"WHERE { \",\n      \"<\" + manifestation_id + \"> <http://scta.info/property/isOnSurface> ?surface .\",\n      \"?surface <http://scta.info/property/hasISurface> ?isurface .\",\n      \"?isurface <http://scta.info/property/hasCanvas> ?canvas .\",\n      \"?canvas <http://iiif.io/api/presentation/2#hasImageAnnotations> ?anno .\",\n      \"?canvas <http://iiif.io/api/presentation/2#hasImageAnnotations> ?anno .\",\n      \"?anno <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> ?imgres .\",\n      \"?imgres <http://www.w3.org/ns/oa#hasBody> ?body .\",\n      \"?body <http://rdfs.org/sioc/services#has_service> ?url .\",\n      \"}\"\n    ].join('');\n\n  dispatch(startImagesFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var images = results.map((result) => {\n        return {\n          \"url\": result.url.value,\n        }\n      });\n      dispatch(completeImagesFetch(images));\n    });\n  }\n};\n\n\n// Quotation Actions\n// ==================\nexport var addQuotations = (quotations) => {\n  return{\n    type: \"ADD_QUOTATIONS\",\n    quotations\n  };\n};\nexport var clearQuotations = () => {\n  return{\n    type: \"CLEAR_QUOTATIONS\"\n  };\n};\nexport var startQuotationsFetch = () => {\n  return{\n    type: \"START_QUOTATIONS_FETCH\"\n  };\n};\nexport var clearQuotationsFocus = () => {\n  return{\n    type: \"CLEAR_QUOTATIONS_FOCUS\"\n  };\n};\nexport var completeQuotationsFetch = (quotations) => {\n  return{\n    type: \"COMPLETE_QUOTATIONS_FETCH\",\n    quotations\n  };\n};\nexport var fetchQuotations = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var searchText = state.search.searchParameters.searchText || \"\";\n    var expressionIdSparql = \"\";\n    if (state.search.searchParameters.expressionId || state.search.searchParameters.expressionPart){\n      var searchShortId = (state.search.searchParameters.expressionPart) ? state.search.searchParameters.expressionPart : state.search.searchParameters.expressionId\n      var expressionIdSparql = [\n      \"?quotation <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\"\n      ].join('');\n\n    }\n// BEGIN Expression author queries\n    let expressionAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n    }\n\n    //Begin expression author date filter for expression author\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?dateOfBirth .\"\n    }\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?dateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n        expressionAuthorDateBeforeSparqlFilter = \"FILTER (?dateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    //END expression author date filter for expression author\n\n    var authorSparql = \"\";\n    if (state.search.searchParameters.expressionAuthor){\n      authorSparql = \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n    }\n\n    var expressionAuthorCoreSparql = [\n      \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n      expressionAuthorTypeSparql,\n      expressionAuthorDateSparql,\n      authorSparql,\n      \"?author <http://purl.org/dc/elements/1.1/title> ?author_title . \"\n      ].join('');\n// End expression author queries\n\n\n//BEGIN Quotation Author Queries\n    var quotationAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorType){\n      var searchShortId = state.search.searchParameters.quotationAuthorType;\n      quotationAuthorTypeSparql = \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + searchShortId + \">  . \";\n    }\n\n    //Begin quotation author date filter for expression author\n    let quotationAuthorDateSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateSparql =\n          \"?quotationAuthor <http://scta.info/property/dateOfBirth> ?quotationAuthorDateOfBirth .\"\n    }\n    let quotationAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter){\n      quotationAuthorDateAfterSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n    }\n    let quotationAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateBefore){\n        quotationAuthorDateBeforeSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n    }\n    //END quotation author date filter for expression author\n\n    var quotationAuthorSparql = \"\";\n    if (state.search.searchParameters.quotationAuthor){\n      var searchShortId = (state.search.searchParameters.quotationAuthor);\n      quotationAuthorSparql = \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + searchShortId + \">  . \"\n    }\n    var quotationAuthorCoreSparql = \"\"\n    if (state.search.searchParameters.quotationAuthorDateAfter\n      || state.search.searchParameters.quotationAuthorDateBefore\n      || state.search.searchParameters.quotationAuthor\n      || state.search.searchParameters.quotationAuthorType\n    ){\n    var quotationAuthorCoreSparql = [\n      \"{\",\n        \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n        \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n        quotationAuthorTypeSparql,\n        quotationAuthorDateSparql,\n        quotationAuthorSparql,\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"?quotation <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n        \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n        quotationAuthorTypeSparql,\n        quotationAuthorDateSparql,\n        quotationAuthorSparql,\n      \"}\"\n    ].join('');\n    }\n\n// END Quotation Author Queries for Quotations List\n\n    var quotationWorkGroupSparql = \"\";\n    if (state.search.searchParameters.quotationWorkGroup){\n      var searchShortId = (state.search.searchParameters.quotationWorkGroup);\n      quotationWorkGroupSparql = [\n        \"{\",\n          \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n          \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\"\n      ].join('');\n    }\n\n\n    //NEW QUERY\n    var quotationWorkSparql = \"\";\n    if (state.search.searchParameters.quotationWork || state.search.searchParameters.quotationWorkPart){\n      var searchShortId = (state.search.searchParameters.quotationWorkPart) ? state.search.searchParameters.quotationWorkPart : state.search.searchParameters.quotationWork\n      quotationWorkSparql = [\n      \"{\",\n        \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is a member of the search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"\\n#check for quotation whose source is a member the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for quotation whose source is the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\"\n    ].join('');\n    }\n\n    //NEW QUERY\n    let quotationExpressionTypeSparql = \"\";\n    if (state.search.searchParameters.quotationExpressionType){\n      const quotationExpressionTypeShortId = state.search.searchParameters.quotationExpressionType;\n      quotationExpressionTypeSparql = [\n      \"{\",\n        \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is a member an expression with the designated type\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> ?memberOf .\",\n          \"?memberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is has designated type\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"\\n#check for quotation whose source is a member the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> ?memberOf .\",\n          \"?memberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for quotation whose source is the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n      \"}\"\n    ].join('');\n    }\n\n    var workGroupSparql = \"\";\n    if (state.search.searchParameters.workGroup){\n      workGroupSparql = [\n      \"<http://scta.info/resource/\" + state.search.searchParameters.workGroup + \"> <http://scta.info/property/hasExpression> ?toplevel_expression .\",\n      ].join('');\n    }\n\n    var expressionTypeSparql = \"\";\n    if (state.search.searchParameters.expressionType){\n      expressionTypeSparql = [\n        \"?quotation <http://scta.info/property/isMemberOf> ?expressionIsmemberOf .\",\n        \"?expressionIsmemberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + state.search.searchParameters.expressionType + \"> .\",\n      ].join('');\n    }\n//BEGIN condition for choosing ref quote or combo\n    var structureElementTypeSparql = \"\";\n    if (state.search.searchParameters.structureElementType === \"structureElementRef\"){\n      structureElementTypeSparql = [\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n        \"MINUS\",\n        \"{?quotation <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n        ].join('');\n    }\n    else if (state.search.searchParameters.structureElementType === \"structureElementRefDup\"){\n      structureElementTypeSparql = \"?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .\"\n    }\n    else if (state.search.searchParameters.structureElementType === \"structureElementQuote\"){\n      structureElementTypeSparql = \"?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\"\n    }\n    else if (state.search.searchParameters.structureElementType === \"allDup\"){\n      structureElementTypeSparql = [\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n        \"UNION\",\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> . }\"\n      ].join('');\n    }\n    else{\n      structureElementTypeSparql = [\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n        \"UNION\",\n        \"{{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n        \"MINUS\",\n        \"{?quotation <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n\n        \"}\"\n      ].join('');\n    }\n//END condition for choosing ref quote or combo\n    var query = \"\"\n    if (state.canonicalQuotation){\n      var canonicalQuotationId = state.canonicalQuotation.id;\n      var query = [\n            \"SELECT ?quotation ?isInstanceOf ?quotation_text ?toplevel_expression_title ?author_title ?citation ?ref ?refText \",\n            \"WHERE {\",\n            \"<\" + canonicalQuotationId + \"> <http://scta.info/property/hasInstance> ?quotation .\",\n            \"OPTIONAL {\",\n            \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n            \"}\",\n            \"OPTIONAL {\",\n            \"?quotation <http://scta.info/property/source> ?source .\",\n            \"}\",\n            expressionIdSparql,\n            quotationAuthorCoreSparql,\n            quotationWorkGroupSparql,\n            quotationWorkSparql,\n            quotationExpressionTypeSparql,\n            \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n            //\"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n            \"?quotation <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression . \",\n            expressionTypeSparql,\n            workGroupSparql,\n            \"?toplevel_expression <http://purl.org/dc/elements/1.1/title> ?toplevel_expression_title . \",\n            expressionAuthorCoreSparql,\n            \"OPTIONAL {\",\n              \"?quotation <http://scta.info/property/citation> ?citation . \",\n            \"}\",\n            \"OPTIONAL {\",\n              \"?ref <http://scta.info/property/isReferenceTo> ?quotation . \",\n              \"?ref <http://scta.info/property/structureElementText> ?refText . \",\n            \"}\",\n            expressionAuthorDateAfterSparqlFilter,\n            expressionAuthorDateBeforeSparqlFilter,\n            quotationAuthorDateAfterSparqlFilter,\n            quotationAuthorDateBeforeSparqlFilter,\n            \"}\",\n            \"LIMIT 100\"\n          ].join('');\n    }\n    else{\n      var query = [\n          \"SELECT ?quotation ?source ?isInstanceOf ?quotation_text ?toplevel_expression_title ?author_title ?citation ?ref ?refText ?refType \",\n          \"WHERE {\",\n          structureElementTypeSparql,\n          \"?quotation <http://scta.info/property/structureElementType> ?refType . \",\n          \"?quotation a <http://scta.info/resource/expression> .\",\n          \"OPTIONAL {\",\n          \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n          \"}\",\n          \"OPTIONAL {\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"}\",\n          expressionIdSparql,\n          quotationAuthorCoreSparql,\n          quotationWorkGroupSparql,\n          quotationWorkSparql,\n          quotationExpressionTypeSparql,\n          \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n          \"?quotation <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression . \",\n          expressionTypeSparql,\n          workGroupSparql,\n          authorSparql,\n          \"?toplevel_expression <http://purl.org/dc/elements/1.1/title> ?toplevel_expression_title . \",\n          expressionAuthorCoreSparql,\n          \"OPTIONAL {\",\n            \"?quotation <http://scta.info/property/citation> ?citation . \",\n          \"}\",\n          \"OPTIONAL {\",\n            \"?ref <http://scta.info/property/isReferenceTo> ?quotation . \",\n            \"?ref <http://scta.info/property/structureElementText> ?refText . \",\n          \"}\",\n          expressionAuthorDateAfterSparqlFilter,\n          expressionAuthorDateBeforeSparqlFilter,\n          quotationAuthorDateAfterSparqlFilter,\n          quotationAuthorDateBeforeSparqlFilter,\n          \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n          \"}\",\n          \"ORDER BY ?quotation_text \",\n          \"LIMIT 100\"\n        ].join('');\n      }\n    dispatch(startQuotationsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings\n\n      dispatch(completeQuotationsFetch(results));\n    });\n  };\n}\n\n// Focused Quotation actions\nexport var changeQuotationsFocus = (id) => {\n  return{\n    type: \"CHANGE_QUOTATIONS_FOCUS\",\n    id\n  }\n}\n\nexport var clearFocusedQuotation = () => {\n  return{\n    type: \"CLEAR_FOCUSED_QUOTATION\"\n  }\n}\n\nexport var createFocusedQuotation = (quotation) => {\n  return{\n    type: \"CREATE_FOCUSED_QUOTATION\",\n    quotation\n  };\n};\n\n// Canonical Quotation\nexport var createCanonicalQuotation = (quotation) => {\n  return{\n    type: \"CREATE_CANONICAL_QUOTATION\",\n    quotation\n  };\n};\nexport var clearCanonicalQuotation = () => {\n  return{\n    type: \"CLEAR_CANONICAL_QUOTATION\"\n  };\n};\n\n\n// CanonicalQuotations (plural) Actions\nexport var changeCanonicalQuotationsFocus = (id) => {\n  return{\n    type: \"CHANGE_CANONICAL_QUOTATIONS_FOCUS\",\n    id\n  }\n}\nexport var clearCanonicalQuotationsFocus = () =>{\n  return{\n    type: \"CLEAR_CANONICAL_QUOTATIONS_FOCUS\",\n  }\n}\nexport var clearCanonicalQuotations = () => {\n  return{\n    type: \"CLEAR_CANONICAL_QUOTATIONS\"\n  };\n};\nexport var startCanonicalQuotationsFetch = () => {\n  return{\n    type: \"START_CANONICAL_QUOTATIONS_FETCH\"\n  };\n};\nexport var completeCanonicalQuotationsFetch = (canonicalQuotations) => {\n  return{\n    type: \"COMPLETE_CANONICAL_QUOTATIONS_FETCH\",\n    canonicalQuotations\n  };\n};\nexport var fetchCanonicalQuotations = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var searchText = state.search.searchParameters.searchText || \"\";\n\n\n    var quotationInstanceSparql = \"\"\n    if (state.search.searchParameters.expressionId || state.search.searchParameters.expressionAuthor || state.search.searchParameters.workGroup){\n      quotationInstanceSparql = [\n      \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n      ].join('');\n    }\n    var topLevelExpressionSparql = \"\"\n    if (state.search.searchParameters.expressionAuthor || state.search.searchParameters.workGroup){\n      topLevelExpressionSparql = [\n      \"?quotationInstance <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression .\",\n      ].join('');\n    }\n\n    // var quotationTypeSparql = \"\"\n    // if (state.search.searchParameters.quotationType){\n    //   var quotationTypeSparql = \"?quotation <http://scta.info/property/quotationType>\t<http://scta.info/resource/\" + state.search.searchParameters.quotationType + \"> .\"\n    // }\n    var expressionIdSparql = \"\";\n    if (state.search.searchParameters.expressionId || state.search.searchParameters.expressionPart){\n      var searchShortId = (state.search.searchParameters.expressionPart) ? state.search.searchParameters.expressionPart : state.search.searchParameters.expressionId\n      var expressionIdSparql = [\n      \"?quotationInstance <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n      ].join('');\n    }\n\n//END Expression author sparql for canonical quotations\n    let expressionAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = \"?expressionAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \">  . \"\n    }\n    //Begin expression author date filter for expression author\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql =\n          \"?expressionAuthor <http://scta.info/property/dateOfBirth> ?expressionAuthorDateOfBirth .\"\n    }\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n        expressionAuthorDateBeforeSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    //END expression author date filter for expression author\n\n    var authorSparql = \"\";\n    if (state.search.searchParameters.expressionAuthor){\n      authorSparql = \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n    }\n\n    var expressionAuthorCoreSparql = [\n      \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n      \"?quotationInstance <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression .\",\n      \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?expressionAuthor . \",\n      expressionAuthorTypeSparql,\n      expressionAuthorDateSparql,\n      authorSparql\n    ].join('');\n\n//END Expression author sparql for canonical quotations\n\n//BEGIN Quotation author sparql for canonical quotations\n    let quotationAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorType){\n      const searchShortId = state.search.searchParameters.quotationAuthorType;\n      quotationAuthorTypeSparql = \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + searchShortId + \">  . \"\n    }\n    //Begin quotation author date filter for expression author\n    let quotationAuthorDateSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateSparql =\n          \"?quotationAuthor <http://scta.info/property/dateOfBirth> ?quotationAuthorDateOfBirth .\"\n    }\n    let quotationAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter){\n      quotationAuthorDateAfterSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n    }\n    let quotationAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateBefore){\n        quotationAuthorDateBeforeSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n    }\n    //END quotation author date filter for expression author\n    var quotationAuthorSparql = \"\";\n    if (state.search.searchParameters.quotationAuthor){\n      var searchShortId = (state.search.searchParameters.quotationAuthor);\n      quotationAuthorSparql = \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + searchShortId + \">  . \"\n    }\n    var quotationAuthorCoreSparql = [\n      \"?quotation <http://scta.info/property/source> ?source .\",\n      \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n      \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor .\",\n      quotationAuthorTypeSparql,\n      quotationAuthorDateSparql,\n      quotationAuthorSparql\n    ].join('');\n\n//END Quotation author sparql for canonical quotations\n\n    var quotationWorkGroupSparql = \"\";\n    if (state.search.searchParameters.quotationWorkGroup){\n      var searchShortId = (state.search.searchParameters.quotationWorkGroup);\n      quotationWorkGroupSparql = [\n        \"?quotation <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n        \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n      ].join('');\n    }\n\n    var quotationWorkSparql = \"\";\n    if (state.search.searchParameters.quotationWork || state.search.searchParameters.quotationWorkPart){\n      var searchShortId = (state.search.searchParameters.quotationWorkPart) ? state.search.searchParameters.quotationWorkPart : state.search.searchParameters.quotationWork\n\n\n    quotationWorkSparql = [\n      \"{\",\n        \"\\n#check for canonical quotation whose source is memberOf the search expression\\n\",\n        \"?quotation <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> . \",\n      \"}\",\n      \"UNION\",\n      \"\\n#check for canonical quotation whose source IS the search expression\\n\",\n      \"{\",\n        \"?quotation <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n      \"}\"\n      ].join('');\n    }\n\n    let quotationExpressionTypeSparql = \"\";\n    if (state.search.searchParameters.quotationExpressionType){\n      const quotationExpressionTypeShortId = state.search.searchParameters.quotationExpressionType\n\n      quotationExpressionTypeSparql = [\n        \"{\",\n          \"\\n#check for canonical quotation whose source is memberOf the search expression\\n\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> ?memberOf .\",\n          \"?memberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> . \",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for canonical quotation whose source IS the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\"\n        ].join('');\n      }\n\n  var workGroupSparql = \"\";\n    if (state.search.searchParameters.workGroup){\n      workGroupSparql = [\n      // \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n      // \"?quotationInstance <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression .\",\n      \"<http://scta.info/resource/\" + state.search.searchParameters.workGroup + \"> <http://scta.info/property/hasExpression> ?toplevel_expression .\",\n      ].join('');\n\n    }\n\n    let expressionTypeSparql = \"\";\n    if (state.search.searchParameters.expressionType){\n      expressionTypeSparql = [\n\n        \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n        \"?quotationInstance <http://scta.info/property/isMemberOf> ?expressionIsMemberOf .\",\n        \"?expressionIsMemberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + state.search.searchParameters.expressionType + \"> .\",\n      ].join('');\n    }\n\n\n    var query = [\n          \"SELECT DISTINCT ?quotation ?citation ?quotation_text \",\n          \"WHERE {\",\n          \"?quotation a <http://scta.info/resource/quotation> .\",\n          \"?quotation <http://scta.info/property/quotation> ?quotation_text .\",\n          expressionTypeSparql,\n          quotationInstanceSparql,\n          topLevelExpressionSparql,\n          expressionAuthorCoreSparql,\n          workGroupSparql,\n          quotationAuthorCoreSparql,\n          quotationWorkGroupSparql,\n          quotationWorkSparql,\n          quotationExpressionTypeSparql,\n          expressionIdSparql,\n          \"OPTIONAL { \",\n          \"?quotation <http://scta.info/property/citation> ?citation .\",\n          \"}\",\n          quotationAuthorDateAfterSparqlFilter,\n          quotationAuthorDateBeforeSparqlFilter,\n          expressionAuthorDateBeforeSparqlFilter,\n          expressionAuthorDateAfterSparqlFilter,\n          \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n          \"}\",\n          \"ORDER BY ?citation \",\n          \"LIMIT 1000\"\n        ].join('');\n    dispatch(startQuotationsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings\n      dispatch(completeCanonicalQuotationsFetch(results));\n    });\n  };\n}\n\n//maifestation Quotations Actions\n// CanonicalQuotations (plural) Actions\nexport var changeManifestationQuotationsFocus = (id) => {\n  return{\n    type: \"CHANGE_MANIFESTATION_QUOTATIONS_FOCUS\",\n    id\n  }\n}\nexport var clearManifestationQuotationsFocus = () =>{\n  return{\n    type: \"CLEAR_MANIFESTATION_QUOTATIONS_FOCUS\",\n  }\n}\nexport var clearManifestationQuotations = () => {\n  return{\n    type: \"CLEAR_MANIFESTATION_QUOTATIONS\"\n  };\n};\nexport var startManifestationQuotationsFetch = () => {\n  return{\n    type: \"START_MANIFESTATION_QUOTATIONS_FETCH\"\n  };\n};\nexport var completeManifestationQuotationsFetch = (manifestationQuotations) => {\n  return{\n    type: \"COMPLETE_MANIFESTATION_QUOTATIONS_FETCH\",\n    manifestationQuotations\n  };\n};\nexport var fetchManifestationQuotations = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var searchText = state.search.searchParameters.searchText || \"\";\n\n    var query = \"\"\n\n    if (state.focusedQuotation.id != undefined){\n      var expressionQuotationId = state.focusedQuotation.id;\n      query = [\n            \"SELECT ?quotation ?isManifestationOf ?quotation_text \",\n            \"WHERE {\",\n            \"<\" + expressionQuotationId + \"> <http://scta.info/property/hasManifestation> ?quotation .\",\n            \"?quotation <http://scta.info/property/isManifestationOf> ?isManifestationOf .\",\n            \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n            \"}\"\n          ].join('');\n    }\n    else{\n      query = [\n          \"SELECT ?quotation ?isManifestationOf ?quotation_text \",\n          \"WHERE {\",\n          \"?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\",\n          \"?quotation a <http://scta.info/resource/manifestation> .\",\n          \"?quotation <http://scta.info/property/isManifestationOf> ?isManifestationOf .\",\n          \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n          \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n          \"}\",\n          \"ORDER BY ?isInstanceOf \",\n          \"LIMIT 100\"\n        ].join('');\n      }\n\n    dispatch(startManifestationQuotationsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings\n\n      dispatch(completeManifestationQuotationsFetch(results));\n    });\n  };\n}\n\n//paragraph actions\n\nexport var clearParagraph = () => {\n  return{\n    type: \"CLEAR_PARAGRAPH\"\n  };\n};\n\nexport var startParagraphFetch = () => {\n  return{\n    type: \"START_PARAGRAPH_FETCH\"\n  };\n};\nexport var completeParagraphFetch = (paragraph) => {\n  return{\n    type: \"COMPLETE_PARAGRAPH_FETCH\",\n    paragraph\n  };\n};\nexport var fetchParagraph = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.focusedQuotation){\n      var quotationId = state.focusedQuotation.id;\n      //var expressionQuotationId = quotationid;\n      var query = \"\";\n      var idType = state.focusedQuotation.type\n\n      if (idType === \"expression\"){\n        query = [\n            \"SELECT ?expression_paragraph ?manifestation_paragraph ?transcription_paragraph ?xml_url ?transcription_item_file \",\n            \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?expression_paragraph .\",\n            \"?expression_paragraph <http://scta.info/property/hasCanonicalManifestation> ?manifestation_paragraph .\",\n            \"?manifestation_paragraph <http://scta.info/property/hasCanonicalTranscription> ?transcription_paragraph .\",\n            \"?transcription_paragraph <http://scta.info/property/isPartOfStructureItem> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_paragraph <http://scta.info/property/hasXML> ?xml_url .\",\n            \"}\"\n          ].join('');\n        }\n      else if (idType === \"manifestation\"){\n        query = [\n            \"SELECT ?expression_paragraph ?manifestation_paragraph ?transcription_paragraph ?xml_url ?transcription_item_file \",\n            \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?manifestation_paragraph . \",\n            \"?manifestation_paragraph <http://scta.info/property/isManifestationOf> ?expression_paragraph .\",\n            \"?manifestation_paragraph <http://scta.info/property/hasCanonicalTranscription> ?transcription_paragraph .\",\n            \"?transcription_paragraph <http://scta.info/property/isPartOfStructureItem> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_paragraph <http://scta.info/property/hasXML> ?xml_url .\",\n            \"}\"\n          ].join('');\n      }\n\n      dispatch(startParagraphFetch());\n      axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n        var results = res.data.results.bindings[0];\n        if (results){\n          axios.get(results.xml_url.value).then(function(res2){\n            var paragraph = {\n              expression_id: results.expression_paragraph.value,\n              manifestation_id: results.manifestation_paragraph.value,\n              transcription_id: results.transcription_paragraph.value,\n              transcription_item_file: results.transcription_item_file ? results.transcription_item_file.value : \"\",\n              paragraph_text: res2.data\n            }\n            dispatch(completeParagraphFetch(paragraph));\n            dispatch(fetchReview());\n          });\n        }\n      });\n    };\n  };\n};\nexport var startReviewFetch = () => {\n  return{\n    type: \"START_REVIEW_FETCH\"\n  };\n};\nexport var completeReviewFetch = (review) => {\n  return{\n    type: \"COMPLETE_REVIEW_FETCH\",\n    review\n  };\n};\nexport var fetchReview = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.paragraph.transcription_item_file){\n      var url = state.paragraph.transcription_item_file;\n      var reviewUrl = \"http://dll-review-registry.scta.info/api/v1/reviews?url=\" + url + \"&society=MAA\";\n      dispatch(startReviewFetch());\n      axios.get(reviewUrl).then(function(res){\n        var review = res.data[0];\n        dispatch(completeReviewFetch(review));\n      });\n    };\n  };\n};\n\n//Source Paragraph Actions\n\nexport var clearSourceParagraph = () => {\n  return{\n    type: \"CLEAR_SOURCE_PARAGRAPH\"\n  };\n};\n\nexport var startSourceParagraphFetch = () => {\n  return{\n    type: \"START_SOURCE_PARAGRAPH_FETCH\"\n  };\n};\nexport var completeSourceParagraphFetch = (sourceParagraph) => {\n  return{\n    type: \"COMPLETE_SOURCE_PARAGRAPH_FETCH\",\n    sourceParagraph\n  };\n};\nexport var fetchSourceParagraph = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.focusedQuotation){\n      var sourceParagraphid = state.focusedQuotation.source;\n      //var expressionQuotationId = quotationid;\n      var query = [\n          \"SELECT ?expression_paragraph ?manifestation_paragraph ?transcription_paragraph ?xml_url ?transcription_item_file \",\n          \"WHERE { \",\n          \"BIND(<\" + sourceParagraphid + \"> as ?expression_paragraph) .\",\n          \"?expression_paragraph <http://scta.info/property/hasCanonicalManifestation> ?manifestation_paragraph .\",\n          \"?manifestation_paragraph <http://scta.info/property/hasCanonicalTranscription> ?transcription_paragraph .\",\n          \"?transcription_paragraph <http://scta.info/property/isPartOfStructureItem> ?transcription_item .\",\n          \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n          \"?transcription_paragraph <http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\"\n        ].join('');\n\n      dispatch(startSourceParagraphFetch());\n      axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n        var results = res.data.results.bindings[0];\n        if (results){\n          axios.get(results.xml_url.value).then(function(res2){\n            var sourceParagraph = {\n              expression_id: results.expression_paragraph.value,\n              manifestation_id: results.manifestation_paragraph.value,\n              transcription_id: results.transcription_paragraph.value,\n              transcription_item_file: results.transcription_item_file ? results.transcription_item_file.value : \"\",\n              paragraph_text: res2.data\n            }\n            dispatch(completeSourceParagraphFetch(sourceParagraph));\n          //dispatch(fetchSourceParagraphReview());\n          });\n        }\n      });\n    };\n  };\n};\nexport var startSourceParagraphReviewFetch = () => {\n  return{\n    type: \"START_SOURCE_PARAGRAPH_REVIEW_FETCH\"\n  };\n};\nexport var completeSourceParagraphReviewFetch = (review) => {\n  return{\n    type: \"COMPLETE_SOURCE_PARAGRAPH_FETCH\",\n    review\n  };\n};\nexport var fetchSourceParagraphReview = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.sourceParagraph.transcription_item_file){\n      var url = state.sourceParagraph.transcription_item_file;\n      var reviewUrl = \"http://dll-review-registry.scta.info/api/v1/reviews?url=\" + url + \"&society=MAA\";\n      dispatch(startSourceParagraphFetch());\n      axios.get(reviewUrl).then(function(res){\n        var review = res.data[0];\n        dispatch(completeSourceParagraphReviewFetch(review));\n      });\n    };\n  };\n};\n\n// Full text actions\n\n//paragraph actions\n\nexport var toggleFullTextDisplay = (current) => {\n  return{\n    type: \"TOGGLE_FULL_TEXT_DISPLAY\",\n    current\n  };\n}\nexport var clearFullText = () => {\n  return{\n    type: \"CLEAR_FULL_TEXT\"\n  };\n};\n\nexport var startFullTextFetch = () => {\n  return{\n    type: \"START_FULL_TEXT_FETCH\"\n  };\n};\nexport var completeFullTextFetch = (text) => {\n  return{\n    type: \"COMPLETE_FULL_TEXT_FETCH\",\n    text\n  };\n};\nexport var fetchFullText = (source=false) =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = \"\";\n    if (state.focusedQuotation){\n      var quotationId = state.focusedQuotation.id;\n      //var expressionQuotationId = quotationid;\n      var idType = state.focusedQuotation.type\n\n      if (source === true){\n        query = [\n          \"SELECT ?expression_item ?manifestation_item ?transcription_item ?xml_url ?transcription_item_file \",\n          \"WHERE { \",\n          \"BIND(<\" + state.focusedQuotation.source + \"> AS ?expression_block) .\",\n          \"?expression_block <http://scta.info/property/isPartOfStructureItem> ?expression_item .\",\n          \"?expression_item <http://scta.info/property/hasCanonicalManifestation> ?manifestation_item .\",\n          \"?manifestation_item <http://scta.info/property/hasCanonicalTranscription> ?transcription_item .\",\n          \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n          \"?transcription_item <http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\"\n        ].join('');\n      }\n      else if (idType === \"expression\"){\n        query = [\n            \"SELECT ?expression_item ?manifestation_item ?transcription_item ?xml_url ?transcription_item_file \",\n            \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?expression_block .\",\n            \"?expression_block <http://scta.info/property/isPartOfStructureItem> ?expression_item .\",\n            \"?expression_item <http://scta.info/property/hasCanonicalManifestation> ?manifestation_item .\",\n            \"?manifestation_item <http://scta.info/property/hasCanonicalTranscription> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_item <http://scta.info/property/hasXML> ?xml_url .\",\n            \"}\"\n          ].join('');\n        }\n      else if (idType === \"manifestation\"){\n        query = [\n            \"SELECT ?expression_item ?manifestation_item ?transcription_item ?xml_url ?transcription_item_file \",\n            \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?manifestation_block . \",\n            \"?manifestation_block <http://scta.info/property/isPartOfStructureItem> ?manifestation_item .\",\n            \"?manifestation_item <http://scta.info/property/isManifestationOf> ?expression_item .\",\n            \"?manifestation_item <http://scta.info/property/hasCanonicalTranscription> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_item <http://scta.info/property/hasXML> ?xml_url .\",\n            \"}\"\n          ].join('');\n      }\n      console.log(query)\n      dispatch(startFullTextFetch());\n      axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n        var results = res.data.results.bindings[0];\n        console.log(\"full text results\", results)\n        axios.get(results.xml_url.value).then(function(res2){\n          var text = {\n            expression_id: results.expression_item.value,\n            manifestation_id: results.manifestation_item.value,\n            transcription_id: results.transcription_item.value,\n            transcription_item_file: results.transcription_item_file ? results.transcription_item_file.value : \"\",\n            text: res2.data\n          }\n          dispatch(completeFullTextFetch(text));\n          dispatch(fetchReview());\n        });\n      });\n    };\n  };\n};\n"],"sourceRoot":""}