{"version":3,"sources":["vendor/behaviors.js","actions/actions.jsx","components/Search.jsx","components/Quotation.jsx","components/QuotationList.jsx","components/FocusedQuotation.jsx","components/CanonicalQuotation.jsx","components/CanonicalQuotationListItem.jsx","components/CanonicalQuotationList.jsx","components/ManifestationQuotationListItem.jsx","components/ManifestationQuotationList.jsx","components/Paragraph.jsx","components/BarChart.jsx","components/Images.jsx","components/FullText.jsx","components/TodoApp.js","components/Main.jsx","index.js","reducers/searchReducer.jsx","reducers/chartReducer.jsx","reducers/imagesReducer.jsx","reducers/quotationsReducer.jsx","reducers/focusedQuotationReducer.jsx","reducers/canonicalQuotationReducer.jsx","reducers/canonicalQuotationsReducer.jsx","reducers/manifestationQuotationsReducer.jsx","reducers/paragraphReducer.jsx","reducers/sourceParagraphReducer.jsx","reducers/fullTextReducer.jsx","store/configureStore.jsx","vendor/CETEI.js"],"names":["test","elt","content","Image","src","this","rw","getAttribute","hasAttribute","width","replace","height","dl","document","createElement","Array","from","children","child","nodeType","Node","ELEMENT_NODE","localName","dt","innerHTML","appendChild","dd","table","firstElementChild","head","remove","caption","querySelectorAll","row","tr","attributes","attr","setAttribute","name","value","parentElement","replaceChild","cell","td","pre","serialize","module","exports","sparqlEndpoint","clearSearchParameters","type","setSearchParameters","searchParameters","startSearchWorksFetch","completeSearchWorksFetch","listOfWorks","fetchSearchWorksList","dispatch","getState","state","workGroupSparql","search","workGroup","join","expressionAuthorTypeSparql","expressionAuthorType","authorSparql","expressionAuthor","query","axios","get","params","then","res","searchWorks","data","results","bindings","map","result","expression","expressionShortId","expressionTitle","workGroupTitle","author","authorTitle","startQuotationAuthorsFetch","completeQuotationAuthorsFetch","authors","fetchQuotationAuthors","quotationAuthorTypeSparql","quotationAuthorType","quotationAuthorDateSparql","quotationAuthorDateAfter","quotationAuthorDateBefore","quotationAuthorDateAfterSparqlFilter","quotationAuthorDateBeforeSparqlFilter","authorShortId","startExpressionAuthorsFetch","completeExpressionAuthorsFetch","fetchExpressionAuthors","expressionAuthorDateSparql","expressionAuthorDateAfter","expressionAuthorDateBefore","expressionAuthorDateAfterSparqlFilter","expressionAuthorDateBeforeSparqlFilter","startQuotationWorksListFetch","completeQuotationWorksListFetch","quotationWorksList","fetchQuotationWorksList","quotationWorkGroupSparql","quotationWorkGroup","quotationAuthorSparql","quotationAuthor","startQuotationWorkPartsFetch","completeQuotationWorkPartsFetch","parts","fetchQuotationWorkParts","quotationWorkPart","quotationWork","grandparent","grandparent_title","parent","parent_title","child_title","startExpressionPartsFetch","completeExpressionPartsFetch","fetchExpressionParts","currentNode","expressionPart","expressionId","grandparent_level","parent_level","child_level","startQuotationExpressionTypeFetch","completeQuotationExpressionTypeFetch","quotationExpressionTypes","fetchQuotationExpressionTypes","quotationExpressionType","quotationExpressionTypeShortId","quotationExpressionTypeTitle","startExpressionTypeFetch","completeExpressionTypeFetch","expressionTypes","fetchExpressionTypes","expressionType","expressionTypeShortId","expressionTypeTitle","startWorkGroupsFetch","completeWorkGroupsFetch","workGroups","fetchWorkGroups","workGroupShortId","startAuthorTypesFetch","completeAuthorTypesFetch","authorTypes","fetchAuthorTypes","authorType","authorTypeShortId","authorTypeTitle","toggleGraphDisplay","current","startChartFetch","completeChartFetch","count","fetchChart","level","parseInt","expressionLevel","searchText","expressionWorkGroupSparql","expressionAuthorSparql","expressionAuthorCoreSparql","searchShortId","quotationAuthorCoreSparql","quotationWorkSparql","structureElementTypeSparql","structureElementType","ref","reftitle","toggleImagesDisplay","startImagesFetch","completeImagesFetch","images","fetchImages","paragraph","manifestation_id","url","addQuotations","quotations","clearQuotations","startQuotationsFetch","clearQuotationsFocus","completeQuotationsFetch","fetchQuotations","expressionIdSparql","quotationExpressionTypeSparql","expressionTypeSparql","canonicalQuotation","id","changeQuotationsFocus","clearFocusedQuotation","createFocusedQuotation","quotation","createCanonicalQuotation","clearCanonicalQuotation","changeCanonicalQuotationsFocus","clearCanonicalQuotationsFocus","clearCanonicalQuotations","startCanonicalQuotationsFetch","completeCanonicalQuotationsFetch","canonicalQuotations","fetchCanonicalQuotations","quotationInstanceSparql","topLevelExpressionSparql","changeManifestationQuotationsFocus","clearManifestationQuotationsFocus","clearManifestationQuotations","startManifestationQuotationsFetch","completeManifestationQuotationsFetch","manifestationQuotations","fetchManifestationQuotations","undefined","focusedQuotation","clearParagraph","startParagraphFetch","completeParagraphFetch","fetchParagraph","quotationId","idType","hasXML","res2","expression_id","manifestations","hasManifestations","hasDefaultManifestation","transcription_id","hasDefaultTranscription","transcription_item_file","hasDocument","paragraph_text","fetchReview","catch","err","console","log","startReviewFetch","completeReviewFetch","review","reviewUrl","clearSourceParagraph","startSourceParagraphFetch","completeSourceParagraphFetch","sourceParagraph","fetchSourceParagraph","source","startSourceParagraphReviewFetch","completeSourceParagraphReviewFetch","fetchSourceParagraphReview","toggleFullTextDisplay","clearFullText","startFullTextFetch","completeFullTextFetch","text","fetchFullText","xml_url","expression_item","manifestation_item","transcription_item","connect","require","actions","Search","props","handleSetSearchText","bind","handleOnShowQuotationsWithoutAssociation","handleRunQuery","handleGraph","handleClearFilters","e","refs","preventDefault","split","chart","visible","_this","displayWorkGroupsList","onSubmit","onClick","Group","Label","Control","as","onChange","placeholder","onBlur","quotationAuthors","work","quotationWorkParts","part","grandparentid","displayQuotationWorkPartsGrandparent","parentid","displayQuotationWorkPartsParent","childShortId","displayQuotationWorkParts","expressionAuthors","expressionParts","displayExpressionPartsGrandparent","displayExpressionPartsParent","displayExpressionParts","href","React","Component","Quotation","handleOnClick","isInstanceOf","newFocusedQuotationObject","canonicalQuotationObject","find","topPos","getElementById","offsetTop","$","animate","scrollTop","selfTopPos","alert","className","title","refText","citation","target","QuotationList","length","quotationClass","includes","refType","classes","key","FocusedQuotation","CanonicalQuotation","displayQuotation","displayQuotationId","CanonicalQuotationListItem","quotationObject","CanonicalQuotationList","focused","ManifestationQuotationListItem","isManifestationOf","isManifestationOfObject","ManifestationQuotationList","Paragraph","handleShowImages","handleImageWrapperWraperClick","handleShowFullText","runQueryForSource","addTEICustom","imageSize","imageFocus","setState","prevState","fullText","htmlText","cetei","makeHTML5","quoteid","pop","querySelector","childNodes","emptyTextNode","createTextNode","sourceId","newManifestations","constructor","m","manifestation","manifestationTitle","transcription","focusedManifestation","showFullTextToggle","tresourceid","d3","BarChart","createBarChart","prevProps","selectAll","select","filter","d","i","countArray","margin","colors","scale","linear","domain","range","yScale","max","xScale","ordinal","rangeBands","tooltip","append","style","node","enter","rangeBand","on","transition","html","item","event","pageX","pageY","left","top","delay","duration","ease","vGuideScale","vAxis","svg","axis","orient","ticks","vGuide","fill","stroke","hAxis","tickValues","hGuide","Images","handleToggleImage","image","imageUrl","showImages","FullText","handleToggleFullText","textInfo","sourceid","TodoApp","quotationDisplay","size","barGraphDisplay","imagesDisplay","fullTextDisplay","Main","store","configure","subscribe","ReactDOM","render","searchReducer","action","chartReducer","imagesReducer","quotationsReducer","quotation_text","toplevel_expression_title","author_title","reverse","updatedState","focusedQuotationReducer","canonicalQuotationReducer","canonicalQuotationsReducer","manifestationQuotationsReducer","paragraphReducer","sourceParagraphReducer","fullTextReducer","redux","thunk","default","initialState","reducer","combineReducers","createStore","compose","applyMiddleware","window","devToolsExtension","f","behaviors","CETEI","base","els","hasStyle","prefixes","location","push","supportsShadowDom","createShadowRoot","attachShadow","TEI_url","callback","perElementFn","startsWith","indexOf","Promise","resolve","reject","client","XMLHttpRequest","open","send","onload","status","response","statusText","onerror","reason","TEI","TEI_dom","DOMParser","parseFromString","doc","domToHTML5","registerTEIElements","_fromTEI","dom","convertEl","el","newElement","copy","namespaceURI","tagName","importNode","att","rule","textContent","cloneNode","documentElement","registerElement","registerAll","fallback","done","getElementsByTagName","shadow","shadowCSS","bhvs","root_el","Set","getElementsByTagNameNS","x","add","strings","span","str","replacements","re","exec","call","ceteicean","_template","_insert","fn","isArray","decorator","self","_appendShadow","nodeName","_appendBasic","mode","addShadowStyle","hideContent","names","proto","Object","create","HTMLElement","prototype","getHandler","createdCallback","prefixedName","error","getFallback","match","urls","stripElt","PROCESSING_INSTRUCTION_NODE","nodeValue","COMMENT_NODE","hidden","localStorage","setItem","scrollY","getItem","scrollTo","unload","savePosition","load","restorePosition"],"mappings":"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","file":"static/js/main.52dab106.chunk.js","sourcesContent":["var test =  {\n  \"handlers\": {\n    \"eg\": [\"<pre>\",\"</pre>\"],\n    // inserts a link inside <ptr> using the @target; the link in the\n    // @href is piped through the rw (rewrite) function before insertion\n    \"ptr\": [\"<a href=\\\"$rw@target\\\">$@target</a>\"],\n    // wraps the content of the <ref> in an HTML link\n    //\"ref\": [\"<a href=\\\"$rw@target\\\">\",\"</a>\"],\n    \"graphic\": function(elt) {\n      let content = new Image();\n      content.src = this.rw(elt.getAttribute(\"url\"));\n      if (elt.hasAttribute(\"width\")) {\n        content.width = elt.getAttribute(\"width\").replace(/[^.0-9]/g, \"\");\n      }\n      if (elt.hasAttribute(\"height\")) {\n        content.height = elt.getAttribute(\"height\").replace(/[^.0-9]/g, \"\");\n      }\n      return content;\n    },\n    \"list\": function(elt) {\n      if (elt.hasAttribute(\"type\") && elt.getAttribute(\"type\") == \"gloss\") {\n        let dl = document.createElement(\"dl\");\n        for (let child of Array.from(elt.children)) {\n          if (child.nodeType == Node.ELEMENT_NODE) {\n            if (child.localName == \"tei-label\") {\n              let dt = document.createElement(\"dt\");\n              dt.innerHTML = child.innerHTML;\n              dl.appendChild(dt);\n            }\n            if (child.localName == \"tei-item\") {\n              let dd = document.createElement(\"dd\");\n              dd.innerHTML = child.innerHTML;\n              dl.appendChild(dd);\n            }\n          }\n        }\n        return dl;\n      } else {\n        return null;\n      }\n    },\n    \"table\": function(elt) {\n      let table = document.createElement(\"table\");\n      table.innerHTML = elt.innerHTML;\n      if (table.firstElementChild.localName == \"tei-head\") {\n        let head = table.firstElementChild;\n        head.remove();\n        let caption = document.createElement(\"caption\");\n        caption.innerHTML = head.innerHTML;\n        table.appendChild(caption);\n      }\n      for (let row of Array.from(table.querySelectorAll(\"tei-row\"))) {\n        let tr = document.createElement(\"tr\");\n        tr.innerHTML = row.innerHTML;\n        for (let attr of Array.from(row.attributes)) {\n          tr.setAttribute(attr.name, attr.value);\n        }\n        row.parentElement.replaceChild(tr, row);\n      }\n      for (let cell of Array.from(table.querySelectorAll(\"tei-cell\"))) {\n        let td = document.createElement(\"td\");\n        if (cell.hasAttribute(\"cols\")) {\n          td.setAttribute(\"colspan\", cell.getAttribute(\"cols\"));\n        }\n        td.innerHTML = cell.innerHTML;\n        for (let attr of Array.from(cell.attributes)) {\n          td.setAttribute(attr.name, attr.value);\n        }\n        cell.parentElement.replaceChild(td, cell);\n      }\n      return table;\n    },\n    \"egXML\": function(elt) {\n      let pre = document.createElement(\"pre\");\n      pre.innerHTML = this.serialize(elt, true);\n      return pre;\n    }\n  }\n}\nmodule.exports = test;\n","import axios from 'axios';\n\nconst sparqlEndpoint = \"https://sparql-docker.scta.info/ds/query\"\n//const sparqlEndpoint = \"http://sparql-staging.scta.info/ds/query\"\n//const sparqlEndpoint = \"http://localhost:3030/ds/query\"\n\n///search actions\n//===============\nexport var clearSearchParameters = () => {\n  return {\n    type: \"CLEAR_SEARCH_PARAMETERS\",\n  };\n};\nexport var setSearchParameters = (searchParameters) => {\n  return {\n    type: \"SET_SEARCH_PARAMETERS\",\n    searchParameters\n  };\n};\nexport var startSearchWorksFetch = () => {\n  return{\n    type: \"START_SEARCH_WORKS_FETCH\"\n  };\n};\nexport var completeSearchWorksFetch = (listOfWorks) => {\n  return{\n    type: \"COMPLETE_SEARCH_WORKS_FETCH\",\n    listOfWorks\n  };\n};\nexport var fetchSearchWorksList = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var workGroupSparql = \"\"\n    if (state.search.searchParameters.workGroup){\n      workGroupSparql = [\n      \"<http://scta.info/resource/\" + state.search.searchParameters.workGroup + \"> <http://scta.info/property/hasExpression> ?expression .\"\n      ].join('');\n    }\n    let expressionAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?expressionAuthor . \",\n      \"?expressionAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n      ].join('');\n    }\n\n    var authorSparql = \"\"\n    if (state.search.searchParameters.expressionAuthor){\n      authorSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n      ].join('');\n    }\n    var query = [\n        \"SELECT ?type ?expression ?expressionShortId ?expressionTitle ?author ?authorTitle ?workGroup ?workGroupTitle\",\n        \"WHERE { \",\n          \"?expression a <http://scta.info/resource/expression> .\",\n          \"?expression a ?type .\",\n          \"?expression <http://scta.info/property/level> '1' . \",\n          expressionAuthorTypeSparql,\n          workGroupSparql,\n          authorSparql,\n          \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n          \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n          \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n          \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n          \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n          \"?expression <http://purl.org/dc/terms/isPartOf> ?workGroup .\",\n          \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n          \"}\",\n        \"ORDER BY ?expressionTitle\"].join('');\n\n  dispatch(startSearchWorksFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var searchWorks = results.map((result) => {\n      var workInfo = {\n          expression: result.expression.value,\n          expressionShortId: result.expressionShortId ? result.expressionShortId.value : \"\",\n          expressionTitle: result.expressionTitle.value,\n          workGroup: result.workGroup ? result.workGroup.value : \"\",\n          workGroupTitle: result.workGroupTitle ? result.workGroupTitle.value : \"\",\n          author: result.author ? result.author.value : \"\",\n          authorTitle: result.author ? result.authorTitle.value : \"\",\n          type: result.type.value\n\n        }\n        return workInfo\n\n      });\n      dispatch(completeSearchWorksFetch(searchWorks));\n    });\n  }\n};\n\n//Begin Quotations Authors Fetch\nexport var startQuotationAuthorsFetch = () => {\n  return{\n    type: \"START_QUOTATION_AUTHORS_FETCH\"\n  };\n};\nexport var completeQuotationAuthorsFetch = (authors) => {\n  return{\n    type: \"COMPLETE_QUOTATION_AUTHORS_FETCH\",\n    authors\n  };\n};\nexport var fetchQuotationAuthors = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    let quotationAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorType){\n\n      quotationAuthorTypeSparql = [\n      \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.quotationAuthorType + \"> .\"\n      ].join('');\n    }\n    // Begin Author date sparql filters\n    let quotationAuthorDateSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?dateOfBirth .\"\n    }\n    let quotationAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter){\n      quotationAuthorDateAfterSparqlFilter = \"FILTER (?dateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n    }\n    let quotationAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateBeforeSparqlFilter = \"FILTER (?dateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n    }\n    // END author date sparql filter\n    var query = [\n        \"SELECT DISTINCT ?author ?authorTitle ?authorShortId \",\n        \"WHERE { \",\n        \"?author a <http://scta.info/resource/person> .\",\n        quotationAuthorTypeSparql,\n        quotationAuthorDateSparql,\n        \"?resource a <http://scta.info/resource/expression> .\",\n        \"?resource <http://scta.info/property/level> '1' .\",\n        \"?resource <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n        \"?author <http://scta.info/property/shortId> ?authorShortId .\",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n        quotationAuthorDateAfterSparqlFilter,\n        quotationAuthorDateBeforeSparqlFilter,\n        \"}\",\n        \"ORDER BY ?authorTitle\"].join('');\n  dispatch(startQuotationAuthorsFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var authors = results.map((result) => {\n        var authorInfo = {\n          author: result.author.value,\n          authorShortId: result.authorShortId.value,\n          authorTitle: result.authorTitle.value,\n        }\n        return authorInfo\n\n      });\n      dispatch(completeQuotationAuthorsFetch(authors));\n    });\n  }\n};\n// End Quotation Authors Fetch\n// Begin Expression Authors Fetch\nexport var startExpressionAuthorsFetch = () => {\n  return{\n    type: \"START_EXPRESSION_AUTHORS_FETCH\"\n  };\n};\nexport var completeExpressionAuthorsFetch = (authors) => {\n  return{\n    type: \"COMPLETE_EXPRESSION_AUTHORS_FETCH\",\n    authors\n  };\n};\nexport var fetchExpressionAuthors = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    let expressionAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorType){\n\n      expressionAuthorTypeSparql = [\n      \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n      ].join('');\n    }\n\n    // Begin expression author filter\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?dateOfBirth .\"\n    }\n\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?dateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateBeforeSparqlFilter = \"FILTER (?dateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    // End expression author filter\n    var query = [\n        \"SELECT DISTINCT ?author ?authorTitle ?authorShortId \",\n        \"WHERE { \",\n        \"?author a <http://scta.info/resource/person> .\",\n        expressionAuthorTypeSparql,\n        expressionAuthorDateSparql,\n        \"?resource a <http://scta.info/resource/expression> .\",\n        \"?resource <http://scta.info/property/level> '1' .\",\n        \"?resource <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n        \"?author <http://scta.info/property/shortId> ?authorShortId .\",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n        expressionAuthorDateAfterSparqlFilter,\n        expressionAuthorDateBeforeSparqlFilter,\n        \"}\",\n        \"ORDER BY ?authorTitle\"].join('');\n\n  dispatch(startExpressionAuthorsFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var authors = results.map((result) => {\n        var authorInfo = {\n          author: result.author.value,\n          authorShortId: result.authorShortId.value,\n          authorTitle: result.authorTitle.value,\n        }\n        return authorInfo\n\n      });\n      dispatch(completeExpressionAuthorsFetch(authors));\n    });\n  }\n};\n// END Expression Authors Actions\nexport var startQuotationWorksListFetch = () => {\n  return{\n    type: \"START_QUOTATION_WORKS_LIST_FETCH\"\n  };\n};\nexport var completeQuotationWorksListFetch = (quotationWorksList) => {\n  return{\n    type: \"COMPLETE_QUOTATION_WORKS_LIST_FETCH\",\n    quotationWorksList\n  };\n};\nexport var fetchQuotationWorksList = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var quotationWorkGroupSparql = \"\"\n    if (state.search.searchParameters.quotationWorkGroup){\n      quotationWorkGroupSparql = [\n      \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?expression .\"\n      ].join('');\n    }\n    var quotationAuthorSparql = \"\"\n    if (state.search.searchParameters.quotationAuthor){\n      quotationAuthorSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.quotationAuthor + \"> .\"\n      ].join('');\n    }\n    let quotationAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.quotationAuthorType){\n      quotationAuthorTypeSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n      \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.quotationAuthorType + \"> .\"\n      ].join('');\n    }\n\n    // var query = [\n    //     \"SELECT ?type ?expression ?expressionShortId ?expressionTitle ?author ?authorTitle ?workGroup ?workGroupTitle\",\n    //     \"WHERE { \",\n    //     \"{\",\n    //     \"?expression a <http://scta.info/resource/work> .\",\n    //     \"?expression a ?type .\",\n    //     \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n    //     \"}\",\n    //     \"UNION{\",\n    //     \"?expression a <http://scta.info/resource/expression> .\",\n    //     \"?expression a ?type .\",\n    //     \"?expression <http://scta.info/property/level> '1' . \",\n    //     \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n    //     \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n    //     \"OPTIONAL { \",\n    //     \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n    //     \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n    //     \"}\",\n    //     \"?expression <http://purl.org/dc/terms/isPartOf> ?workGroup .\",\n    //     \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n    //     \"}\",\n    //     \"}\",\n    //     \"ORDER BY ?expressionTitle\"].join('');\n    var query = [\n        \"SELECT ?type ?expression ?expressionShortId ?expressionTitle ?author ?authorTitle ?workGroup ?workGroupTitle\",\n        \"WHERE { \",\n        \"?expression a <http://scta.info/resource/expression> .\",\n        \"?expression a ?type .\",\n        \"?expression <http://scta.info/property/level> '1' . \",\n        quotationAuthorTypeSparql,\n        quotationWorkGroupSparql,\n        quotationAuthorSparql,\n        \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n        \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n        \"OPTIONAL { \",\n        \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n        \"}\",\n        \"?expression <http://purl.org/dc/terms/isPartOf> ?workGroup .\",\n        \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n        \"}\",\n        \"ORDER BY ?expressionTitle\"].join('');\n\n  dispatch(startQuotationWorksListFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var quotationWorksList = results.map((result) => {\n      var quotationWorkInfo = {\n          expression: result.expression.value,\n          expressionShortId: result.expressionShortId ? result.expressionShortId.value : \"\",\n          expressionTitle: result.expressionTitle.value,\n          workGroup: result.workGroup ? result.workGroup.value : \"\",\n          workGroupTitle: result.workGroupTitle ? result.workGroupTitle.value : \"\",\n          author: result.author ? result.author.value : \"\",\n          authorTitle: result.author ? result.authorTitle.value : \"\",\n          type: result.type.value\n\n        }\n        return quotationWorkInfo\n      });\n      dispatch(completeQuotationWorksListFetch(quotationWorksList));\n    });\n  }\n};\nexport var startQuotationWorkPartsFetch = () => {\n  return{\n    type: \"START_QUOTATION_WORK_PARTS_FETCH\"\n  };\n};\nexport var completeQuotationWorkPartsFetch = (parts) => {\n  return{\n    type: \"COMPLETE_QUOTATION_WORK_PARTS_FETCH\",\n    parts\n  };\n};\nexport var fetchQuotationWorkParts = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var currentNode = \"\";\n    if (state.search.searchParameters.quotationWorkPart != \"\"){\n      currentNode = state.search.searchParameters.quotationWorkPart;\n    }\n    else if (state.search.searchParameters.quotationWork != \"\"){\n      currentNode = state.search.searchParameters.quotationWork;\n    }\n    else{\n      currentNode = \"\";\n    }\n\n    var query = [\n        \"SELECT ?grandparent ?grandparent_title ?parent_title ?parent ?child ?child_title \",\n        \"WHERE { \",\n        \"BIND(<http://scta.info/resource/\" + currentNode + \"> AS ?parent)\",\n        \"OPTIONAL {\",\n          \"?parent <http://purl.org/dc/elements/1.1/title> ?parent_title\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/hasPart> ?child .\",\n        \"?child <http://purl.org/dc/elements/1.1/title> ?child_title .\",\n        //\"MINUS{?child <http://scta.info/property/structureType> <http://scta.info/resource/structureDivision> .}\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/isPartOf> ?grandparent .\",\n        //\"?grandparent <http://scta.info/property/structureType> <http://scta.info/resource/structureCollection> .\",\n        \"?grandparent <http://purl.org/dc/elements/1.1/title> ?grandparent_title\",\n        \"}\",\n        \"}\"\n        ].join('');\n    //conditional here prevents running query if the node is blank\n    //if (currentNode){\n    dispatch(startQuotationWorkPartsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings;\n      var parts = results.map((result) => {\n          var partInfo = {\n            grandparent: result.grandparent ? result.grandparent.value : \"\",\n            grandparent_title: result.grandparent_title ? result.grandparent_title.value : \"\",\n            parent: result.parent.value,\n            parent_title: result.parent_title ? result.parent_title.value : \"\",\n            child: result.child ? result.child.value : \"\",\n            child_title: result.child_title ? result.child_title.value : \"\"\n          }\n          return partInfo\n\n        });\n        dispatch(completeQuotationWorkPartsFetch(parts));\n      });\n    //}\n  }\n};\n\nexport var startExpressionPartsFetch = () => {\n  return{\n    type: \"START_EXPRESSION_PARTS_FETCH\"\n  };\n};\nexport var completeExpressionPartsFetch = (parts) => {\n  return{\n    type: \"COMPLETE_EXPRESSION_PARTS_FETCH\",\n    parts\n  };\n};\nexport var fetchExpressionParts = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var currentNode = \"\";\n    if (state.search.searchParameters.expressionPart != \"\"){\n      currentNode = state.search.searchParameters.expressionPart;\n    }\n    else if (state.search.searchParameters.expressionId != \"\"){\n      currentNode = state.search.searchParameters.expressionId;\n    }\n    else{\n      currentNode = \"\";\n    }\n    var query = [\n        \"SELECT ?grandparent ?grandparent_title ?grandparent_level ?parent_title ?parent ?parent_level ?child ?child_level ?child_title \",\n        \"WHERE { \",\n        \"BIND(<http://scta.info/resource/\" + currentNode + \"> AS ?parent)\",\n        \"OPTIONAL {\",\n          \"?parent <http://purl.org/dc/elements/1.1/title> ?parent_title .\",\n          \"?parent <http://scta.info/property/level> ?parent_level .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/hasPart> ?child .\",\n        \"?child <http://purl.org/dc/elements/1.1/title> ?child_title .\",\n        \"?child <http://scta.info/property/level> ?child_level .\",\n        //\"MINUS{?child <http://scta.info/property/structureType> <http://scta.info/resource/structureDivision> .}\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/isPartOf> ?grandparent .\",\n        //\"?grandparent <http://scta.info/property/structureType> <http://scta.info/resource/structureCollection> .\",\n        \"?grandparent <http://purl.org/dc/elements/1.1/title> ?grandparent_title .\",\n        \"?grandparent <http://scta.info/property/level> ?grandparent_level .\",\n        \"}\",\n        \"}\"\n        ].join('');\n  //conditional prevents running query if current node is blank\n  if (currentNode){\n    dispatch(startExpressionPartsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings;\n      var parts = results.map((result) => {\n          var partInfo = {\n            grandparent: result.grandparent ? result.grandparent.value : \"\",\n            grandparent_title: result.grandparent_title ? result.grandparent_title.value : \"\",\n            grandparent_level: result.grandparent_level ? result.grandparent_level.value : \"\",\n            parent: result.parent.value,\n            parent_title: result.parent_title ? result.parent_title.value : \"\",\n            parent_level: result.parent_level ? result.parent_level.value : \"\",\n            child: result.child ? result.child.value : \"\",\n            child_title: result.child_title ? result.child_title.value : \"\",\n            child_level: result.child_level ? result.child_level.value : \"\",\n          }\n          return partInfo\n\n        });\n        dispatch(completeExpressionPartsFetch(parts));\n      });\n    }\n  }\n};\n\nexport var startQuotationExpressionTypeFetch = () => {\n  return{\n    type: \"START_QUOTATION_EXPRESSION_TYPE_FETCH\"\n  };\n};\nexport var completeQuotationExpressionTypeFetch = (quotationExpressionTypes) => {\n  return{\n    type: \"COMPLETE_QUOTATION_EXPRESSION_TYPE_FETCH\",\n    quotationExpressionTypes\n  };\n};\nexport var fetchQuotationExpressionTypes = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n        \"SELECT ?quotationExpressionType ?quotationExpressionTypeTitle ?quotationExpressionTypeShortId \",\n        \"WHERE { \",\n        \"?quotationExpressionType a <http://scta.info/resource/expressionType> .\",\n        \"?quotationExpressionType <http://scta.info/property/shortId> ?quotationExpressionTypeShortId .\",\n        \"?quotationExpressionType <http://purl.org/dc/elements/1.1/title> ?quotationExpressionTypeTitle .\",\n        \"}\",\n        \"ORDER BY ?quotationExpressionTypeTitle\"].join('');\n\n  dispatch(startQuotationExpressionTypeFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n\n    var quotationExpressionTypes = results.map((result) => {\n      var quotationExpressionTypeInfo = {\n          quotationExpressionType: result.quotationExpressionType.value,\n          quotationExpressionTypeShortId: result.quotationExpressionTypeShortId.value,\n          quotationExpressionTypeTitle: result.quotationExpressionTypeTitle.value\n        }\n        return quotationExpressionTypeInfo\n      });\n      dispatch(completeQuotationExpressionTypeFetch(quotationExpressionTypes));\n    });\n  }\n};\n\n\nexport var startExpressionTypeFetch = () => {\n  return{\n    type: \"START_EXPRESSION_TYPE_FETCH\"\n  };\n};\nexport var completeExpressionTypeFetch = (expressionTypes) => {\n  return{\n    type: \"COMPLETE_EXPRESSION_TYPE_FETCH\",\n    expressionTypes\n  };\n};\nexport var fetchExpressionTypes = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n        \"SELECT ?expressionType ?expressionTypeTitle ?expressionTypeShortId \",\n        \"WHERE { \",\n        \"?expressionType a <http://scta.info/resource/expressionType> .\",\n        \"?expressionType <http://scta.info/property/shortId> ?expressionTypeShortId .\",\n        \"?expressionType <http://purl.org/dc/elements/1.1/title> ?expressionTypeTitle .\",\n        \"}\",\n        \"ORDER BY ?expressionTypeTitle\"].join('');\n\n  dispatch(startExpressionTypeFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var expressionTypes = results.map((result) => {\n      var expressionTypeInfo = {\n          expressionType: result.expressionType.value,\n          expressionTypeShortId: result.expressionTypeShortId.value,\n          expressionTypeTitle: result.expressionTypeTitle.value\n        }\n        return expressionTypeInfo\n      });\n      dispatch(completeExpressionTypeFetch(expressionTypes));\n    });\n  }\n};\nexport var startWorkGroupsFetch = () => {\n  return{\n    type: \"START_WORK_GROUPS_FETCH\"\n  };\n};\nexport var completeWorkGroupsFetch = (workGroups) => {\n  return{\n    type: \"COMPLETE_WORK_GROUPS_FETCH\",\n    workGroups\n  };\n};\nexport var fetchWorkGroups = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n        \"SELECT ?workGroup ?workGroupShortId ?workGroupTitle \",\n        \"WHERE { \",\n        \"?workGroup a <http://scta.info/resource/workGroup> .\",\n        \"?workGroup <http://scta.info/property/shortId> ?workGroupShortId .\",\n        \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n        \"}\",\n        \"ORDER BY ?workGroupTitle\"].join('');\n  dispatch(startWorkGroupsFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var workGroups = results.map((result) => {\n      var workGroupInfo = {\n          workGroup: result.workGroup.value,\n          workGroupShortId: result.workGroupShortId.value,\n          workGroupTitle: result.workGroupTitle.value\n        }\n        return workGroupInfo\n      });\n      dispatch(completeWorkGroupsFetch(workGroups));\n    });\n  }\n};\n// Author types fetch\n\nexport var startAuthorTypesFetch = () => {\n  return{\n    type: \"START_AUTHOR_TYPES_FETCH\"\n  };\n};\nexport var completeAuthorTypesFetch = (authorTypes) => {\n  return{\n    type: \"COMPLETE_AUTHOR_TYPES_FETCH\",\n    authorTypes\n  };\n};\nexport var fetchAuthorTypes = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n      \"SELECT ?authorType ?authorTypeTitle ?authorTypeShortId \",\n      \"WHERE { \",\n      \"?authorType a <http://scta.info/resource/personType> .\",\n      \"?authorType <http://scta.info/property/shortId> ?authorTypeShortId .\",\n      \"?authorType <http://purl.org/dc/elements/1.1/title> ?authorTypeTitle .\",\n      \"}\",\n      \"ORDER BY ?authorTypeTitle\"].join('');\n  dispatch(startAuthorTypesFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var authorTypes = results.map((result) => {\n      var authorTypeInfo = {\n          authorType: result.authorType.value,\n          authorTypeShortId: result.authorTypeShortId.value,\n          authorTypeTitle: result.authorTypeTitle.value\n        }\n        return authorTypeInfo\n      });\n      dispatch(completeAuthorTypesFetch(authorTypes));\n    });\n  }\n};\n\n\n\n///Chart Actions\nexport var toggleGraphDisplay = (current) => {\n  return{\n    type: \"TOGGLE_GRAPH_DISPLAY\",\n    current\n  };\n}\nexport var startChartFetch = () => {\n  return{\n    type: \"START_CHART_FETCH\"\n  };\n};\nexport var completeChartFetch = (count) => {\n  return{\n    type: \"COMPLETE_CHART_FETCH\",\n    count\n  };\n};\nexport var fetchChart = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var level = parseInt(state.search.searchParameters.expressionLevel)\n    if (level === 1){\n      level = 2;\n    }\n    var searchText = state.search.searchParameters.searchText || \"\";\n\n    let expressionWorkGroupSparql = \"\";\n    if (state.search.searchParameters.workGroup){\n      const workGroup = state.search.searchParameters.workGroup;\n      expressionWorkGroupSparql = [\n        \"?ref <http://purl.org/dc/terms/isPartOf> <http://scta.info/resource/\" + workGroup + \">  . \"\n      ].join('');\n    }\n\n// BEGIN Expression author queries\n    let expressionAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n    }\n\n    //Begin expression author date filter for expression author\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?expressionAuthorDateOfBirth .\"\n    }\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n        expressionAuthorDateBeforeSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    //END expression author date filter for expression author\n\n    var expressionAuthorSparql = \"\";\n    if (state.search.searchParameters.expressionAuthor){\n      expressionAuthorSparql = \"?ref <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n    }\n\n    var expressionAuthorCoreSparql = [\n      \"?ref <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n      expressionAuthorTypeSparql,\n      expressionAuthorDateSparql,\n      expressionAuthorSparql\n    ].join('');\n// End expression author queries\n\n//BEGIN Quotation Author Queries\n      var quotationAuthorTypeSparql = \"\";\n      if (state.search.searchParameters.quotationAuthorType){\n        var searchShortId = state.search.searchParameters.quotationAuthorType;\n        quotationAuthorTypeSparql = \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + searchShortId + \">  . \";\n      }\n\n      //Begin quotation author date filter for expression author\n      let quotationAuthorDateSparql = \"\";\n      if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n        quotationAuthorDateSparql =\n            \"?quotationAuthor <http://scta.info/property/dateOfBirth> ?quotationAuthorDateOfBirth .\"\n      }\n      let quotationAuthorDateAfterSparqlFilter = \"\";\n      if (state.search.searchParameters.quotationAuthorDateAfter){\n        quotationAuthorDateAfterSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n      }\n      let quotationAuthorDateBeforeSparqlFilter = \"\";\n      if (state.search.searchParameters.quotationAuthorDateBefore){\n          quotationAuthorDateBeforeSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n      }\n      //END quotation author date filter for expression author\n\n      var quotationAuthorSparql = \"\";\n      if (state.search.searchParameters.quotationAuthor){\n        var searchShortId = (state.search.searchParameters.quotationAuthor);\n        quotationAuthorSparql = \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + searchShortId + \">  . \"\n      }\n      var quotationAuthorCoreSparql = \"\"\n      if (state.search.searchParameters.quotationAuthorDateAfter\n        || state.search.searchParameters.quotationAuthorDateBefore\n        || state.search.searchParameters.quotationAuthor\n        || state.search.searchParameters.quotationAuthorType\n      ){\n        var quotationAuthorCoreSparql = [\n          \"{\",\n            \"?element <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n            \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n            \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n            \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n            quotationAuthorTypeSparql,\n            quotationAuthorDateSparql,\n            quotationAuthorSparql,\n          \"}\",\n          \"UNION\",\n          \"{\",\n            \"?element <http://scta.info/property/source> ?source .\",\n            \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n            \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n            quotationAuthorTypeSparql,\n            quotationAuthorDateSparql,\n            quotationAuthorSparql,\n          \"}\"\n        ].join('');\n      }\n\n// END Quotation Author Queries for Quotations List\n\n\n\n    var quotationWorkGroupSparql = \"\";\n    if (state.search.searchParameters.quotationWorkGroup){\n      var searchShortId = (state.search.searchParameters.quotationWorkGroup);\n      quotationWorkGroupSparql = [\n        \"{\",\n          \"?element <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n          \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"?element <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\"\n      ].join('');\n    }\n\n\n    var quotationWorkSparql = \"\";\n    if (state.search.searchParameters.quotationWork || state.search.searchParameters.quotationWorkPart){\n      var searchShortId = (state.search.searchParameters.quotationWorkPart) ? state.search.searchParameters.quotationWorkPart : state.search.searchParameters.quotationWork\n      quotationWorkSparql = [\n      \"{\",\n        \"?element <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is a member of the search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"\\n#check for quotation whose source is a member the search expression\\n\",\n        \"{\",\n          \"?element <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for quotation whose source is the search expression\\n\",\n        \"{\",\n          \"?element <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\"\n    ].join('');\n    }\n\n    //BEGIN condition for choosing ref quote or combo\n        var structureElementTypeSparql = \"\";\n        if (state.search.searchParameters.structureElementType === \"structureElementRef\"){\n          structureElementTypeSparql = [\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n            \"MINUS\",\n            \"{?element <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n            ].join('');\n        }\n        else if (state.search.searchParameters.structureElementType === \"structureElementRefDup\"){\n          structureElementTypeSparql = \"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .\"\n        }\n        else if (state.search.searchParameters.structureElementType === \"structureElementQuote\"){\n          structureElementTypeSparql = \"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\"\n        }\n        else if (state.search.searchParameters.structureElementType === \"allDup\"){\n          structureElementTypeSparql = [\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n            \"UNION\",\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> . }\"\n          ].join('');\n        }\n        else{\n          structureElementTypeSparql = [\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n            \"UNION\",\n            \"{{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n            \"MINUS\",\n            \"{?element <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n\n            \"}\"\n          ].join('');\n        }\n    //END condition for choosing ref quote or combo\n\n\n\n    //var expressionId = state.search.searchParameters.expressionPart ? state.search.searchParameters.expressionPart : state.search.searchParameters.expressionId\n    if (state.search.searchParameters.expressionId){\n      // query for quote frequency within a given expression\n      var expressionId = state.search.searchParameters.expressionId\n      var query = [\n        \"SELECT ?ref ?reftitle ?totalOrderNumber (count(?element) as ?count) \",\n        \"WHERE {\",\n        \"?ref a <http://scta.info/resource/expression> .\",\n        \"?ref <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + expressionId + \"> .\",\n        \"?ref <http://scta.info/property/level> '\" + level + \"' .\",\n        \"?ref <http://purl.org/dc/elements/1.1/title> ?reftitle .\",\n        \"OPTIONAL {\",\n        \"?ref <http://scta.info/property/totalOrderNumber> ?totalOrderNumber .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?element <http://scta.info/property/isMemberOf> ?ref .\",\n        //\"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\",\n        structureElementTypeSparql,\n        \"?element <http://scta.info/property/structureElementText> ?quotation_text .\",\n        quotationAuthorCoreSparql,\n        quotationWorkGroupSparql,\n        quotationWorkSparql,\n        \"}\",\n        quotationAuthorDateBeforeSparqlFilter,\n        quotationAuthorDateAfterSparqlFilter,\n        \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n        \"}\",\n        \"group by ?ref ?reftitle ?totalOrderNumber \",\n        \"ORDER BY ?totalOrderNumber \"\n      ].join('');\n    }\n    else {\n      // query for quote frequency across top level expressions\n      var query = [\n        \"SELECT ?ref ?reftitle ?totalOrderNumber (count(?element) as ?count) \",\n        \"WHERE {\",\n        \"?ref a <http://scta.info/resource/expression> .\",\n        \"?ref <http://scta.info/property/level> '1' .\",\n        expressionWorkGroupSparql,\n        expressionAuthorCoreSparql,\n        \"?ref <http://purl.org/dc/elements/1.1/title> ?reftitle .\",\n        \"OPTIONAL {\",\n        \"?ref <http://scta.info/property/totalOrderNumber> ?totalOrderNumber .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?element <http://scta.info/property/isMemberOf> ?ref .\",\n        //\"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\",\n        structureElementTypeSparql,\n        \"?element <http://scta.info/property/structureElementText> ?quotation_text .\",\n        quotationAuthorCoreSparql,\n        quotationWorkGroupSparql,\n        quotationWorkSparql,\n        \"}\",\n        quotationAuthorDateBeforeSparqlFilter,\n        quotationAuthorDateAfterSparqlFilter,\n        expressionAuthorDateBeforeSparqlFilter,\n        expressionAuthorDateAfterSparqlFilter,\n        \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n        \"}\",\n        \"group by ?ref ?reftitle ?totalOrderNumber \",\n        \"ORDER BY ?totalOrderNumber \"\n      ].join('');\n    }\n\n  dispatch(startChartFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var count = results.map((result) => {\n        return {\n          \"item\": result.ref ? result.ref.value : \"\",\n          \"title\": result.reftitle ? result.reftitle.value : \"\",\n          \"count\": result.count ? result.count.value : \"\"\n        }\n      });\n      dispatch(completeChartFetch(count));\n    });\n  }\n};\n\n///Chart Actions\nexport var toggleImagesDisplay = (current) => {\n  return{\n    type: \"TOGGLE_IMAGES_DISPLAY\",\n    current\n  };\n}\nexport var startImagesFetch = () => {\n  return{\n    type: \"START_IMAGES_FETCH\"\n  };\n};\nexport var completeImagesFetch = (images) => {\n  return{\n    type: \"COMPLETE_IMAGES_FETCH\",\n    images\n  };\n};\nexport var fetchImages = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var manifestation_id = state.paragraph.manifestation_id\n    var query = [\n      \"SELECT ?url \",\n      \"WHERE { \",\n      \"<\" + manifestation_id + \"> <http://scta.info/property/isOnSurface> ?surface .\",\n      \"?surface <http://scta.info/property/hasISurface> ?isurface .\",\n      \"?isurface <http://scta.info/property/hasCanvas> ?canvas .\",\n      \"?canvas <http://iiif.io/api/presentation/2#hasImageAnnotations> ?anno .\",\n      \"?canvas <http://iiif.io/api/presentation/2#hasImageAnnotations> ?anno .\",\n      \"?anno <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> ?imgres .\",\n      \"?imgres <http://www.w3.org/ns/oa#hasBody> ?body .\",\n      \"?body <http://rdfs.org/sioc/services#has_service> ?url .\",\n      \"}\"\n    ].join('');\n\n  dispatch(startImagesFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var images = results.map((result) => {\n        return {\n          \"url\": result.url.value,\n        }\n      });\n      dispatch(completeImagesFetch(images));\n    });\n  }\n};\n\n\n// Quotation Actions\n// ==================\nexport var addQuotations = (quotations) => {\n  return{\n    type: \"ADD_QUOTATIONS\",\n    quotations\n  };\n};\nexport var clearQuotations = () => {\n  return{\n    type: \"CLEAR_QUOTATIONS\"\n  };\n};\nexport var startQuotationsFetch = () => {\n  return{\n    type: \"START_QUOTATIONS_FETCH\"\n  };\n};\nexport var clearQuotationsFocus = () => {\n  return{\n    type: \"CLEAR_QUOTATIONS_FOCUS\"\n  };\n};\nexport var completeQuotationsFetch = (quotations) => {\n  return{\n    type: \"COMPLETE_QUOTATIONS_FETCH\",\n    quotations\n  };\n};\nexport var fetchQuotations = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var searchText = state.search.searchParameters.searchText || \"\";\n    var expressionIdSparql = \"\";\n    if (state.search.searchParameters.expressionId || state.search.searchParameters.expressionPart){\n      var searchShortId = (state.search.searchParameters.expressionPart) ? state.search.searchParameters.expressionPart : state.search.searchParameters.expressionId\n      var expressionIdSparql = [\n      \"?quotation <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\"\n      ].join('');\n\n    }\n// BEGIN Expression author queries\n    let expressionAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n    }\n\n    //Begin expression author date filter for expression author\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?dateOfBirth .\"\n    }\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?dateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n        expressionAuthorDateBeforeSparqlFilter = \"FILTER (?dateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    //END expression author date filter for expression author\n\n    var authorSparql = \"\";\n    if (state.search.searchParameters.expressionAuthor){\n      authorSparql = \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n    }\n\n    var expressionAuthorCoreSparql = [\n      \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n      expressionAuthorTypeSparql,\n      expressionAuthorDateSparql,\n      authorSparql,\n      \"?author <http://purl.org/dc/elements/1.1/title> ?author_title . \"\n      ].join('');\n// End expression author queries\n\n\n//BEGIN Quotation Author Queries\n    var quotationAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorType){\n      var searchShortId = state.search.searchParameters.quotationAuthorType;\n      quotationAuthorTypeSparql = \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + searchShortId + \">  . \";\n    }\n\n    //Begin quotation author date filter for expression author\n    let quotationAuthorDateSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateSparql =\n          \"?quotationAuthor <http://scta.info/property/dateOfBirth> ?quotationAuthorDateOfBirth .\"\n    }\n    let quotationAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter){\n      quotationAuthorDateAfterSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n    }\n    let quotationAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateBefore){\n        quotationAuthorDateBeforeSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n    }\n    //END quotation author date filter for expression author\n\n    var quotationAuthorSparql = \"\";\n    if (state.search.searchParameters.quotationAuthor){\n      var searchShortId = (state.search.searchParameters.quotationAuthor);\n      quotationAuthorSparql = \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + searchShortId + \">  . \"\n    }\n    var quotationAuthorCoreSparql = \"\"\n    if (state.search.searchParameters.quotationAuthorDateAfter\n      || state.search.searchParameters.quotationAuthorDateBefore\n      || state.search.searchParameters.quotationAuthor\n      || state.search.searchParameters.quotationAuthorType\n    ){\n    var quotationAuthorCoreSparql = [\n      \"{\",\n        \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n        \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n        quotationAuthorTypeSparql,\n        quotationAuthorDateSparql,\n        quotationAuthorSparql,\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"?quotation <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n        \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n        quotationAuthorTypeSparql,\n        quotationAuthorDateSparql,\n        quotationAuthorSparql,\n      \"}\"\n    ].join('');\n    }\n\n// END Quotation Author Queries for Quotations List\n\n    var quotationWorkGroupSparql = \"\";\n    if (state.search.searchParameters.quotationWorkGroup){\n      var searchShortId = (state.search.searchParameters.quotationWorkGroup);\n      quotationWorkGroupSparql = [\n        \"{\",\n          \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n          \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\"\n      ].join('');\n    }\n\n\n    //NEW QUERY\n    var quotationWorkSparql = \"\";\n    if (state.search.searchParameters.quotationWork || state.search.searchParameters.quotationWorkPart){\n      var searchShortId = (state.search.searchParameters.quotationWorkPart) ? state.search.searchParameters.quotationWorkPart : state.search.searchParameters.quotationWork\n      quotationWorkSparql = [\n      \"{\",\n        \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is a member of the search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"\\n#check for quotation whose source is a member the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for quotation whose source is the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\"\n    ].join('');\n    }\n\n    //NEW QUERY\n    let quotationExpressionTypeSparql = \"\";\n    if (state.search.searchParameters.quotationExpressionType){\n      const quotationExpressionTypeShortId = state.search.searchParameters.quotationExpressionType;\n      quotationExpressionTypeSparql = [\n      \"{\",\n        \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is a member an expression with the designated type\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> ?memberOf .\",\n          \"?memberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is has designated type\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"\\n#check for quotation whose source is a member the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> ?memberOf .\",\n          \"?memberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for quotation whose source is the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n      \"}\"\n    ].join('');\n    }\n\n    var workGroupSparql = \"\";\n    if (state.search.searchParameters.workGroup){\n      workGroupSparql = [\n      \"<http://scta.info/resource/\" + state.search.searchParameters.workGroup + \"> <http://scta.info/property/hasExpression> ?toplevel_expression .\",\n      ].join('');\n    }\n\n    var expressionTypeSparql = \"\";\n    if (state.search.searchParameters.expressionType){\n      expressionTypeSparql = [\n        \"?quotation <http://scta.info/property/isMemberOf> ?expressionIsmemberOf .\",\n        \"?expressionIsmemberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + state.search.searchParameters.expressionType + \"> .\",\n      ].join('');\n    }\n//BEGIN condition for choosing ref quote or combo\n    var structureElementTypeSparql = \"\";\n    if (state.search.searchParameters.structureElementType === \"structureElementRef\"){\n      structureElementTypeSparql = [\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n        \"MINUS\",\n        \"{?quotation <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n        ].join('');\n    }\n    else if (state.search.searchParameters.structureElementType === \"structureElementRefDup\"){\n      structureElementTypeSparql = \"?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .\"\n    }\n    else if (state.search.searchParameters.structureElementType === \"structureElementQuote\"){\n      structureElementTypeSparql = \"?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\"\n    }\n    else if (state.search.searchParameters.structureElementType === \"allDup\"){\n      structureElementTypeSparql = [\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n        \"UNION\",\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> . }\"\n      ].join('');\n    }\n    else{\n      structureElementTypeSparql = [\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n        \"UNION\",\n        \"{{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n        \"MINUS\",\n        \"{?quotation <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n\n        \"}\"\n      ].join('');\n    }\n//END condition for choosing ref quote or combo\n    var query = \"\"\n    if (state.canonicalQuotation){\n      var canonicalQuotationId = state.canonicalQuotation.id;\n      var query = [\n            \"SELECT ?quotation ?isInstanceOf ?quotation_text ?toplevel_expression_title ?author_title ?citation ?ref ?refText \",\n            \"WHERE {\",\n            \"<\" + canonicalQuotationId + \"> <http://scta.info/property/hasInstance> ?quotation .\",\n            \"OPTIONAL {\",\n            \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n            \"}\",\n            \"OPTIONAL {\",\n            \"?quotation <http://scta.info/property/source> ?source .\",\n            \"}\",\n            expressionIdSparql,\n            quotationAuthorCoreSparql,\n            quotationWorkGroupSparql,\n            quotationWorkSparql,\n            quotationExpressionTypeSparql,\n            \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n            //\"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n            \"?quotation <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression . \",\n            expressionTypeSparql,\n            workGroupSparql,\n            \"?toplevel_expression <http://purl.org/dc/elements/1.1/title> ?toplevel_expression_title . \",\n            expressionAuthorCoreSparql,\n            \"OPTIONAL {\",\n              \"?quotation <http://scta.info/property/citation> ?citation . \",\n            \"}\",\n            \"OPTIONAL {\",\n              \"?ref <http://scta.info/property/isReferenceTo> ?quotation . \",\n              \"?ref <http://scta.info/property/structureElementText> ?refText . \",\n            \"}\",\n            expressionAuthorDateAfterSparqlFilter,\n            expressionAuthorDateBeforeSparqlFilter,\n            quotationAuthorDateAfterSparqlFilter,\n            quotationAuthorDateBeforeSparqlFilter,\n            \"}\",\n            \"LIMIT 100\"\n          ].join('');\n    }\n    else{\n      var query = [\n          \"SELECT ?quotation ?source ?isInstanceOf ?quotation_text ?toplevel_expression_title ?author_title ?citation ?ref ?refText ?refType \",\n          \"WHERE {\",\n          structureElementTypeSparql,\n          \"?quotation <http://scta.info/property/structureElementType> ?refType . \",\n          \"?quotation a <http://scta.info/resource/expression> .\",\n          \"OPTIONAL {\",\n          \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n          \"}\",\n          \"OPTIONAL {\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"}\",\n          expressionIdSparql,\n          quotationAuthorCoreSparql,\n          quotationWorkGroupSparql,\n          quotationWorkSparql,\n          quotationExpressionTypeSparql,\n          \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n          \"?quotation <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression . \",\n          expressionTypeSparql,\n          workGroupSparql,\n          authorSparql,\n          \"?toplevel_expression <http://purl.org/dc/elements/1.1/title> ?toplevel_expression_title . \",\n          expressionAuthorCoreSparql,\n          \"OPTIONAL {\",\n            \"?quotation <http://scta.info/property/citation> ?citation . \",\n          \"}\",\n          \"OPTIONAL {\",\n            \"?ref <http://scta.info/property/isReferenceTo> ?quotation . \",\n            \"?ref <http://scta.info/property/structureElementText> ?refText . \",\n          \"}\",\n          expressionAuthorDateAfterSparqlFilter,\n          expressionAuthorDateBeforeSparqlFilter,\n          quotationAuthorDateAfterSparqlFilter,\n          quotationAuthorDateBeforeSparqlFilter,\n          \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n          \"}\",\n          \"ORDER BY ?quotation_text \",\n          \"LIMIT 100\"\n        ].join('');\n      }\n    dispatch(startQuotationsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings\n\n      dispatch(completeQuotationsFetch(results));\n    });\n  };\n}\n\n// Focused Quotation actions\nexport var changeQuotationsFocus = (id) => {\n  return{\n    type: \"CHANGE_QUOTATIONS_FOCUS\",\n    id\n  }\n}\n\nexport var clearFocusedQuotation = () => {\n  return{\n    type: \"CLEAR_FOCUSED_QUOTATION\"\n  }\n}\n\nexport var createFocusedQuotation = (quotation) => {\n  return{\n    type: \"CREATE_FOCUSED_QUOTATION\",\n    quotation\n  };\n};\n\n// Canonical Quotation\nexport var createCanonicalQuotation = (quotation) => {\n  return{\n    type: \"CREATE_CANONICAL_QUOTATION\",\n    quotation\n  };\n};\nexport var clearCanonicalQuotation = () => {\n  return{\n    type: \"CLEAR_CANONICAL_QUOTATION\"\n  };\n};\n\n\n// CanonicalQuotations (plural) Actions\nexport var changeCanonicalQuotationsFocus = (id) => {\n  return{\n    type: \"CHANGE_CANONICAL_QUOTATIONS_FOCUS\",\n    id\n  }\n}\nexport var clearCanonicalQuotationsFocus = () =>{\n  return{\n    type: \"CLEAR_CANONICAL_QUOTATIONS_FOCUS\",\n  }\n}\nexport var clearCanonicalQuotations = () => {\n  return{\n    type: \"CLEAR_CANONICAL_QUOTATIONS\"\n  };\n};\nexport var startCanonicalQuotationsFetch = () => {\n  return{\n    type: \"START_CANONICAL_QUOTATIONS_FETCH\"\n  };\n};\nexport var completeCanonicalQuotationsFetch = (canonicalQuotations) => {\n  return{\n    type: \"COMPLETE_CANONICAL_QUOTATIONS_FETCH\",\n    canonicalQuotations\n  };\n};\nexport var fetchCanonicalQuotations = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var searchText = state.search.searchParameters.searchText || \"\";\n\n\n    var quotationInstanceSparql = \"\"\n    if (state.search.searchParameters.expressionId || state.search.searchParameters.expressionAuthor || state.search.searchParameters.workGroup){\n      quotationInstanceSparql = [\n      \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n      ].join('');\n    }\n    var topLevelExpressionSparql = \"\"\n    if (state.search.searchParameters.expressionAuthor || state.search.searchParameters.workGroup){\n      topLevelExpressionSparql = [\n      \"?quotationInstance <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression .\",\n      ].join('');\n    }\n\n    // var quotationTypeSparql = \"\"\n    // if (state.search.searchParameters.quotationType){\n    //   var quotationTypeSparql = \"?quotation <http://scta.info/property/quotationType>\t<http://scta.info/resource/\" + state.search.searchParameters.quotationType + \"> .\"\n    // }\n    var expressionIdSparql = \"\";\n    if (state.search.searchParameters.expressionId || state.search.searchParameters.expressionPart){\n      var searchShortId = (state.search.searchParameters.expressionPart) ? state.search.searchParameters.expressionPart : state.search.searchParameters.expressionId\n      var expressionIdSparql = [\n      \"?quotationInstance <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n      ].join('');\n    }\n\n//END Expression author sparql for canonical quotations\n    let expressionAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = \"?expressionAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \">  . \"\n    }\n    //Begin expression author date filter for expression author\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql =\n          \"?expressionAuthor <http://scta.info/property/dateOfBirth> ?expressionAuthorDateOfBirth .\"\n    }\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n        expressionAuthorDateBeforeSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    //END expression author date filter for expression author\n\n    var authorSparql = \"\";\n    if (state.search.searchParameters.expressionAuthor){\n      authorSparql = \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n    }\n\n    var expressionAuthorCoreSparql = [\n      \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n      \"?quotationInstance <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression .\",\n      \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?expressionAuthor . \",\n      expressionAuthorTypeSparql,\n      expressionAuthorDateSparql,\n      authorSparql\n    ].join('');\n\n//END Expression author sparql for canonical quotations\n\n//BEGIN Quotation author sparql for canonical quotations\n    let quotationAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorType){\n      const searchShortId = state.search.searchParameters.quotationAuthorType;\n      quotationAuthorTypeSparql = \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + searchShortId + \">  . \"\n    }\n    //Begin quotation author date filter for expression author\n    let quotationAuthorDateSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateSparql =\n          \"?quotationAuthor <http://scta.info/property/dateOfBirth> ?quotationAuthorDateOfBirth .\"\n    }\n    let quotationAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter){\n      quotationAuthorDateAfterSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n    }\n    let quotationAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateBefore){\n        quotationAuthorDateBeforeSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n    }\n    //END quotation author date filter for expression author\n    var quotationAuthorSparql = \"\";\n    if (state.search.searchParameters.quotationAuthor){\n      var searchShortId = (state.search.searchParameters.quotationAuthor);\n      quotationAuthorSparql = \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + searchShortId + \">  . \"\n    }\n    var quotationAuthorCoreSparql = [\n      \"?quotation <http://scta.info/property/source> ?source .\",\n      \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n      \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor .\",\n      quotationAuthorTypeSparql,\n      quotationAuthorDateSparql,\n      quotationAuthorSparql\n    ].join('');\n\n//END Quotation author sparql for canonical quotations\n\n    var quotationWorkGroupSparql = \"\";\n    if (state.search.searchParameters.quotationWorkGroup){\n      var searchShortId = (state.search.searchParameters.quotationWorkGroup);\n      quotationWorkGroupSparql = [\n        \"?quotation <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n        \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n      ].join('');\n    }\n\n    var quotationWorkSparql = \"\";\n    if (state.search.searchParameters.quotationWork || state.search.searchParameters.quotationWorkPart){\n      var searchShortId = (state.search.searchParameters.quotationWorkPart) ? state.search.searchParameters.quotationWorkPart : state.search.searchParameters.quotationWork\n\n\n    quotationWorkSparql = [\n      \"{\",\n        \"\\n#check for canonical quotation whose source is memberOf the search expression\\n\",\n        \"?quotation <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> . \",\n      \"}\",\n      \"UNION\",\n      \"\\n#check for canonical quotation whose source IS the search expression\\n\",\n      \"{\",\n        \"?quotation <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n      \"}\"\n      ].join('');\n    }\n\n    let quotationExpressionTypeSparql = \"\";\n    if (state.search.searchParameters.quotationExpressionType){\n      const quotationExpressionTypeShortId = state.search.searchParameters.quotationExpressionType\n\n      quotationExpressionTypeSparql = [\n        \"{\",\n          \"\\n#check for canonical quotation whose source is memberOf the search expression\\n\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> ?memberOf .\",\n          \"?memberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> . \",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for canonical quotation whose source IS the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\"\n        ].join('');\n      }\n\n  var workGroupSparql = \"\";\n    if (state.search.searchParameters.workGroup){\n      workGroupSparql = [\n      // \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n      // \"?quotationInstance <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression .\",\n      \"<http://scta.info/resource/\" + state.search.searchParameters.workGroup + \"> <http://scta.info/property/hasExpression> ?toplevel_expression .\",\n      ].join('');\n\n    }\n\n    let expressionTypeSparql = \"\";\n    if (state.search.searchParameters.expressionType){\n      expressionTypeSparql = [\n\n        \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n        \"?quotationInstance <http://scta.info/property/isMemberOf> ?expressionIsMemberOf .\",\n        \"?expressionIsMemberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + state.search.searchParameters.expressionType + \"> .\",\n      ].join('');\n    }\n\n\n    var query = [\n          \"SELECT DISTINCT ?quotation ?citation ?quotation_text \",\n          \"WHERE {\",\n          \"?quotation a <http://scta.info/resource/quotation> .\",\n          \"?quotation <http://scta.info/property/quotation> ?quotation_text .\",\n          expressionTypeSparql,\n          quotationInstanceSparql,\n          topLevelExpressionSparql,\n          expressionAuthorCoreSparql,\n          workGroupSparql,\n          quotationAuthorCoreSparql,\n          quotationWorkGroupSparql,\n          quotationWorkSparql,\n          quotationExpressionTypeSparql,\n          expressionIdSparql,\n          \"OPTIONAL { \",\n          \"?quotation <http://scta.info/property/citation> ?citation .\",\n          \"}\",\n          quotationAuthorDateAfterSparqlFilter,\n          quotationAuthorDateBeforeSparqlFilter,\n          expressionAuthorDateBeforeSparqlFilter,\n          expressionAuthorDateAfterSparqlFilter,\n          \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n          \"}\",\n          \"ORDER BY ?citation \",\n          \"LIMIT 1000\"\n        ].join('');\n    dispatch(startQuotationsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings\n      dispatch(completeCanonicalQuotationsFetch(results));\n    });\n  };\n}\n\n//maifestation Quotations Actions\n// CanonicalQuotations (plural) Actions\nexport var changeManifestationQuotationsFocus = (id) => {\n  return{\n    type: \"CHANGE_MANIFESTATION_QUOTATIONS_FOCUS\",\n    id\n  }\n}\nexport var clearManifestationQuotationsFocus = () =>{\n  return{\n    type: \"CLEAR_MANIFESTATION_QUOTATIONS_FOCUS\",\n  }\n}\nexport var clearManifestationQuotations = () => {\n  return{\n    type: \"CLEAR_MANIFESTATION_QUOTATIONS\"\n  };\n};\nexport var startManifestationQuotationsFetch = () => {\n  return{\n    type: \"START_MANIFESTATION_QUOTATIONS_FETCH\"\n  };\n};\nexport var completeManifestationQuotationsFetch = (manifestationQuotations) => {\n  return{\n    type: \"COMPLETE_MANIFESTATION_QUOTATIONS_FETCH\",\n    manifestationQuotations\n  };\n};\nexport var fetchManifestationQuotations = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var searchText = state.search.searchParameters.searchText || \"\";\n\n    var query = \"\"\n\n    if (state.focusedQuotation.id != undefined){\n      var expressionQuotationId = state.focusedQuotation.id;\n      query = [\n            \"SELECT ?quotation ?isManifestationOf ?quotation_text \",\n            \"WHERE {\",\n            \"<\" + expressionQuotationId + \"> <http://scta.info/property/hasManifestation> ?quotation .\",\n            \"?quotation <http://scta.info/property/isManifestationOf> ?isManifestationOf .\",\n            \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n            \"}\"\n          ].join('');\n    }\n    else{\n      query = [\n          \"SELECT ?quotation ?isManifestationOf ?quotation_text \",\n          \"WHERE {\",\n          \"?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\",\n          \"?quotation a <http://scta.info/resource/manifestation> .\",\n          \"?quotation <http://scta.info/property/isManifestationOf> ?isManifestationOf .\",\n          \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n          \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n          \"}\",\n          \"ORDER BY ?isInstanceOf \",\n          \"LIMIT 100\"\n        ].join('');\n      }\n\n    dispatch(startManifestationQuotationsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings\n\n      dispatch(completeManifestationQuotationsFetch(results));\n    });\n  };\n}\n\n//paragraph actions\n\nexport var clearParagraph = () => {\n  return{\n    type: \"CLEAR_PARAGRAPH\"\n  };\n};\n\nexport var startParagraphFetch = () => {\n  return{\n    type: \"START_PARAGRAPH_FETCH\"\n  };\n};\nexport var completeParagraphFetch = (paragraph) => {\n  return{\n    type: \"COMPLETE_PARAGRAPH_FETCH\",\n    paragraph\n  };\n};\nexport var fetchParagraph = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.focusedQuotation){\n      var quotationId = state.focusedQuotation.id;\n      //var expressionQuotationId = quotationid;\n      var query = \"\";\n      var idType = state.focusedQuotation.type\n\n      if (idType === \"expression\"){\n        query = [\n          \"CONSTRUCT\",\n          \"{\",\n            \"?expression_paragraph <http://scta.info/property/hasDefaultManifestation> ?manifestation_paragraph ;\",\n            \"<http://scta.info/property/hasManifestations> ?manifestations ;\",\n            \"<http://scta.info/property/hasDefaultTranscription> ?transcription_paragraph ;\",\n            \"<http://scta.info/property/isPartOfStructureItem> ?transcription_item ;\",\n            \"<http://scta.info/property/hasDocument> ?transcription_item_file ;\",\n            \"<http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\",\n          \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?expression_paragraph .\",\n            \"?expression_paragraph <http://scta.info/property/hasCanonicalManifestation> ?manifestation_paragraph .\",\n            \"?expression_paragraph <http://scta.info/property/hasManifestation> ?manifestations .\",\n            \"?manifestation_paragraph <http://scta.info/property/isManifestationOf> ?expression_paragraph .\",\n            \"?manifestation_paragraph <http://scta.info/property/hasCanonicalTranscription> ?transcription_paragraph .\",\n            \"?transcription_paragraph <http://scta.info/property/isPartOfStructureItem> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_paragraph <http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\"\n          ].join('');\n        }\n      else if (idType === \"manifestation\"){\n        query = [\n          \"CONSTRUCT\",\n          \"{\",\n            \"?expression_paragraph <http://scta.info/property/hasDefaultManifestation> ?manifestation_paragraph ;\",\n             \"<http://scta.info/property/hasManifestations> ?manifestations ;\",\n             \"<http://scta.info/property/hasDefaultTranscription> ?transcription_paragraph ;\",\n             \"<http://scta.info/property/isPartOfStructureItem> ?transcription_item ;\",\n             \"<http://scta.info/property/hasDocument> ?transcription_item_file ;\",\n             \"<http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\",\n          \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?manifestation_paragraph . \",\n            \"?manifestation_paragraph <http://scta.info/property/isManifestationOf> ?expression_paragraph .\",\n            \"?expression_paragraph <http://scta.info/property/hasManifestation> ?manifestations .\",\n            \"?manifestation_paragraph <http://scta.info/property/hasCanonicalTranscription> ?transcription_paragraph .\",\n            \"?transcription_paragraph <http://scta.info/property/isPartOfStructureItem> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_paragraph <http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\"\n        ].join('');\n      }\n\n      dispatch(startParagraphFetch());\n      axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n        var results = res.data\n        if (results){\n          axios.get(results.hasXML).then(function(res2){\n            var paragraph = {\n              expression_id: results[\"@id\"],\n              manifestations: results.hasManifestations,\n              manifestation_id: results.hasDefaultManifestation,\n              transcription_id: results.hasDefaultTranscription,\n              transcription_item_file: results.hasDocument,\n              paragraph_text: res2.data\n            }\n            dispatch(completeParagraphFetch(paragraph));\n            dispatch(fetchReview());\n          });\n        }\n      }).catch((err) => {\n        console.log(\"error:\", err)\n      })\n      ;\n    };\n  };\n};\nexport var startReviewFetch = () => {\n  return{\n    type: \"START_REVIEW_FETCH\"\n  };\n};\nexport var completeReviewFetch = (review) => {\n  return{\n    type: \"COMPLETE_REVIEW_FETCH\",\n    review\n  };\n};\nexport var fetchReview = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.paragraph.transcription_item_file){\n      var url = state.paragraph.transcription_item_file;\n      var reviewUrl = \"http://dll-review-registry.scta.info/api/v1/reviews?url=\" + url + \"&society=MAA\";\n      dispatch(startReviewFetch());\n      axios.get(reviewUrl).then(function(res){\n        var review = res.data[0];\n        dispatch(completeReviewFetch(review));\n      });\n    };\n  };\n};\n\n//Source Paragraph Actions\n\nexport var clearSourceParagraph = () => {\n  return{\n    type: \"CLEAR_SOURCE_PARAGRAPH\"\n  };\n};\n\nexport var startSourceParagraphFetch = () => {\n  return{\n    type: \"START_SOURCE_PARAGRAPH_FETCH\"\n  };\n};\nexport var completeSourceParagraphFetch = (sourceParagraph) => {\n  return{\n    type: \"COMPLETE_SOURCE_PARAGRAPH_FETCH\",\n    sourceParagraph\n  };\n};\nexport var fetchSourceParagraph = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.focusedQuotation){\n      var sourceParagraphid = state.focusedQuotation.source;\n      //var expressionQuotationId = quotationid;\n      var query = [\n        \"CONSTRUCT\",\n        \"{\",\n          \"?expression_paragraph <http://scta.info/property/hasDefaultManifestation> ?manifestation_paragraph ;\",\n           \"<http://scta.info/property/hasManifestations> ?manifestations ;\",\n           \"<http://scta.info/property/hasDefaultTranscription> ?transcription_paragraph ;\",\n           \"<http://scta.info/property/isPartOfStructureItem> ?transcription_item ;\",\n           \"<http://scta.info/property/hasDocument> ?transcription_item_file ;\",\n           \"<http://scta.info/property/hasXML> ?xml_url .\",\n        \"}\",\n          \"WHERE { \",\n          \"BIND(<\" + sourceParagraphid + \"> as ?expression_paragraph) .\",\n          \"?expression_paragraph <http://scta.info/property/hasCanonicalManifestation> ?manifestation_paragraph .\",\n          \"?expression_paragraph <http://scta.info/property/hasManifestation> ?manifestations .\",\n          \"?manifestation_paragraph <http://scta.info/property/hasCanonicalTranscription> ?transcription_paragraph .\",\n          \"?transcription_paragraph <http://scta.info/property/isPartOfStructureItem> ?transcription_item .\",\n          \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n          \"?transcription_paragraph <http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\"\n        ].join('');\n\n      dispatch(startSourceParagraphFetch());\n      axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n        var results = res.data\n        if (results){\n          axios.get(results.hasXML).then(function(res2){\n            var sourceParagraph = {\n              expression_id: results[\"@id\"],\n              manifestations: results.hasManifestations,\n              manifestation_id: results.hasDefaultManifestation,\n              transcription_id: results.hasDefaultTranscription,\n              transcription_item_file: results.hasDocument,\n              paragraph_text: res2.data\n            }\n            dispatch(completeSourceParagraphFetch(sourceParagraph));\n          //dispatch(fetchSourceParagraphReview());\n          });\n        }\n      });\n    };\n  };\n};\nexport var startSourceParagraphReviewFetch = () => {\n  return{\n    type: \"START_SOURCE_PARAGRAPH_REVIEW_FETCH\"\n  };\n};\nexport var completeSourceParagraphReviewFetch = (review) => {\n  return{\n    type: \"COMPLETE_SOURCE_PARAGRAPH_FETCH\",\n    review\n  };\n};\nexport var fetchSourceParagraphReview = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.sourceParagraph.transcription_item_file){\n      var url = state.sourceParagraph.transcription_item_file;\n      var reviewUrl = \"http://dll-review-registry.scta.info/api/v1/reviews?url=\" + url + \"&society=MAA\";\n      dispatch(startSourceParagraphFetch());\n      axios.get(reviewUrl).then(function(res){\n        var review = res.data[0];\n        dispatch(completeSourceParagraphReviewFetch(review));\n      });\n    };\n  };\n};\n\n// Full text actions\n\n//paragraph actions\n\nexport var toggleFullTextDisplay = (current) => {\n  return{\n    type: \"TOGGLE_FULL_TEXT_DISPLAY\",\n    current\n  };\n}\nexport var clearFullText = () => {\n  return{\n    type: \"CLEAR_FULL_TEXT\"\n  };\n};\n\nexport var startFullTextFetch = () => {\n  return{\n    type: \"START_FULL_TEXT_FETCH\"\n  };\n};\nexport var completeFullTextFetch = (text) => {\n  return{\n    type: \"COMPLETE_FULL_TEXT_FETCH\",\n    text\n  };\n};\nexport var fetchFullText = (source=false) =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = \"\";\n    if (state.focusedQuotation){\n      var quotationId = state.focusedQuotation.id;\n      //var expressionQuotationId = quotationid;\n      var idType = state.focusedQuotation.type\n\n      if (source === true){\n        query = [\n          \"SELECT ?expression_item ?manifestation_item ?transcription_item ?xml_url ?transcription_item_file \",\n          \"WHERE { \",\n          \"BIND(<\" + state.focusedQuotation.source + \"> AS ?expression_block) .\",\n          \"?expression_block <http://scta.info/property/isPartOfStructureItem> ?expression_item .\",\n          \"?expression_item <http://scta.info/property/hasCanonicalManifestation> ?manifestation_item .\",\n          \"?manifestation_item <http://scta.info/property/hasCanonicalTranscription> ?transcription_item .\",\n          \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n          \"?transcription_item <http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\"\n        ].join('');\n      }\n      else if (idType === \"expression\"){\n        query = [\n            \"SELECT ?expression_item ?manifestation_item ?transcription_item ?xml_url ?transcription_item_file \",\n            \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?expression_block .\",\n            \"?expression_block <http://scta.info/property/isPartOfStructureItem> ?expression_item .\",\n            \"?expression_item <http://scta.info/property/hasCanonicalManifestation> ?manifestation_item .\",\n            \"?manifestation_item <http://scta.info/property/hasCanonicalTranscription> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_item <http://scta.info/property/hasXML> ?xml_url .\",\n            \"}\"\n          ].join('');\n        }\n      else if (idType === \"manifestation\"){\n        query = [\n            \"SELECT ?expression_item ?manifestation_item ?transcription_item ?xml_url ?transcription_item_file \",\n            \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?manifestation_block . \",\n            \"?manifestation_block <http://scta.info/property/isPartOfStructureItem> ?manifestation_item .\",\n            \"?manifestation_item <http://scta.info/property/isManifestationOf> ?expression_item .\",\n            \"?manifestation_item <http://scta.info/property/hasCanonicalTranscription> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_item <http://scta.info/property/hasXML> ?xml_url .\",\n            \"}\"\n          ].join('');\n      }\n      console.log(query)\n      dispatch(startFullTextFetch());\n      axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n        var results = res.data.results.bindings[0];\n        console.log(\"full text results\", results)\n        axios.get(results.xml_url.value).then(function(res2){\n          var text = {\n            expression_id: results.expression_item.value,\n            manifestation_id: results.manifestation_item.value,\n            transcription_id: results.transcription_item.value,\n            transcription_item_file: results.transcription_item_file ? results.transcription_item_file.value : \"\",\n            text: res2.data\n          }\n          dispatch(completeFullTextFetch(text));\n          dispatch(fetchReview());\n        });\n      });\n    };\n  };\n};\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\nclass Search extends React.Component{\n  constructor(props){\n    super(props)\n    this.handleSetSearchText = this.handleSetSearchText.bind(this)\n    this.handleOnShowQuotationsWithoutAssociation = this.handleOnShowQuotationsWithoutAssociation.bind(this)\n    this.handleRunQuery = this.handleRunQuery.bind(this)\n    this.handleGraph = this.handleGraph.bind(this)\n    this.handleClearFilters = this.handleClearFilters.bind(this)\n  }\n  handleSetSearchText(e){\n    var {dispatch, search} = this.props;\n    var searchText = this.refs.searchText.value;\n    var searchParameters = {\n      ...this.props.search.searchParameters,\n      searchText\n    }\n    dispatch(actions.setSearchParameters(searchParameters));\n  }\n  handleOnShowQuotationsWithoutAssociation(e){\n\t\te.preventDefault();\n\t\tvar {dispatch, search} = this.props;\n    //var searchText = this.refs.searchText.value;\n    var quotationWorkGroup = this.refs.quotationWorkGroup.value;\n    var quotationExpressionType = this.refs.quotationExpressionType.value;\n    var quotationWork = this.refs.quotationWork.value;\n    var quotationWorkPart = this.refs.quotationWorkPart.value\n    var expressionId = this.refs.expressionId.value;\n    var expressionPart = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[0] : this.refs.expressionPart.value\n    var expressionLevel = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[1] : 1 ;\n    var expressionAuthor = this.refs.expressionAuthor.value;\n    var expressionAuthorType = this.refs.expressionAuthorType.value;\n    var quotationAuthor = this.refs.quotationAuthor.value;\n    var quotationAuthorType = this.refs.quotationAuthorType.value;\n    var expressionType = this.refs.expressionType.value;\n    var workGroup = this.refs.workGroup.value;\n    var quotationAuthorDateAfter = this.refs.quotationAuthorDateAfter.value;\n    var quotationAuthorDateBefore = this.refs.quotationAuthorDateBefore.value;\n    var expressionAuthorDateAfter = this.refs.expressionAuthorDateAfter.value;\n    var expressionAuthorDateBefore = this.refs.expressionAuthorDateBefore.value;\n    var structureElementType = this.refs.structureElementType.value;\n\n    //var retainCanonical = this.refs.retainCanonical.checked;\n    var searchParameters = {\n      //searchText,\n      expressionId,\n      expressionPart,\n      expressionLevel,\n      expressionAuthor,\n      quotationAuthor,\n      quotationExpressionType,\n      quotationWork,\n      quotationWorkPart,\n      quotationWorkGroup,\n      quotationAuthorType,\n      expressionAuthorType,\n      expressionType,\n      workGroup,\n      quotationAuthorDateAfter,\n      quotationAuthorDateBefore,\n      expressionAuthorDateAfter,\n      expressionAuthorDateBefore,\n      structureElementType\n\n    }\n\n    dispatch(actions.setSearchParameters(searchParameters));\n    //search filters options update\n    dispatch(actions.fetchQuotationWorkParts());\n    dispatch(actions.fetchExpressionParts());\n    dispatch(actions.fetchSearchWorksList());\n    dispatch(actions.fetchQuotationWorksList());\n    dispatch(actions.fetchQuotationAuthors());\n    dispatch(actions.fetchExpressionAuthors());\n    //fetch expression types, should adjust based on types that would apply for a select work group author or expression\n    // there are no filters for this yet\n    //dispatch(actions.fetchExpressionTypes());\n\n    // actually quotation query Actions\n    // comment these out, if you want to add search button and turn off automatic\n    // on change search <button id=\"runQuery\" onClick={this.handleRunQuery}>Search</button>\n\n      // if (!retainCanonical) dispatch(actions.clearCanonicalQuotation());\n  \t\t// dispatch(actions.clearFocusedQuotation());\n  \t\t// dispatch(actions.clearParagraph());\n  \t\t// if (!retainCanonical) dispatch(actions.fetchCanonicalQuotations());\n  \t\t// dispatch(actions.fetchQuotations());\n  \t\t// dispatch(actions.clearManifestationQuotations());\n      // dispatch(actions.fetchChart());\n    }\n  handleRunQuery(e){\n\t\te.preventDefault();\n    var {dispatch, search} = this.props;\n\t\t// var searchText = this.refs.searchText.value;\n    // var quotationWorkGroup = this.refs.quotationWorkGroup.value;\n    // var quotationWork = this.refs.quotationWork.value;\n    // var quotationWorkPart = this.refs.quotationWorkPart.value\n    // var expressionId = this.refs.expressionId.value;\n    // var expressionPart = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[0] : this.refs.expressionPart.value\n    // var expressionLevel = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[1] : 1 ;\n    // var expressionAuthor = this.refs.expressionAuthor.value;\n    // var expressionAuthorType = this.refs.expressionAuthorType.value;\n    // var quotationAuthor = this.refs.quotationAuthor.value;\n    // var quotationAuthorType = this.refs.quotationAuthorType.value;\n    // var expressionType = this.refs.expressionType.value;\n    // var quotationExpressionType = this.refs.quotationExpressionType.value;\n    // var workGroup = this.refs.workGroup.value;\n\n    //var retainCanonical = this.refs.retainCanonical.checked;\n    var retainCanonical = false;\n    // var searchParameters = {\n    //   searchText,\n    //   expressionId,\n    //   expressionPart,\n    //   expressionLevel,\n    //   expressionAuthor,\n    //   quotationAuthor,\n    //   quotationExpressionType,\n    //   quotationWork,\n    //   quotationWorkPart,\n    //   quotationWorkGroup,\n    //   quotationAuthorType,\n    //   expressionAuthorType,\n    //   expressionType,\n    //   workGroup\n    // }\n\n    if (!retainCanonical) dispatch(actions.clearCanonicalQuotation());\n\t\tdispatch(actions.clearFocusedQuotation());\n    dispatch(actions.clearManifestationQuotations());\n\t\tdispatch(actions.clearParagraph());\n    dispatch(actions.clearSourceParagraph());\n\t\tif (!retainCanonical) dispatch(actions.fetchCanonicalQuotations());\n\t\tdispatch(actions.fetchQuotations());\n\t\tdispatch(actions.fetchChart());\n\t}\n  handleClearFilters(e){\n    e.preventDefault();\n    var {dispatch, search} = this.props;\n    dispatch(actions.clearSearchParameters());\n    dispatch(actions.clearCanonicalQuotations());\n    dispatch(actions.clearQuotations());\n    dispatch(actions.fetchQuotationWorkParts());\n    dispatch(actions.fetchExpressionParts());\n    //dispatch(actions.fetchCanonicalQuotations());\n    dispatch(actions.fetchQuotationAuthors());\n    dispatch(actions.fetchExpressionAuthors());\n    dispatch(actions.fetchSearchWorksList());\n    //store.dispatch(actions.fetchExpressionTypes());\n    dispatch(actions.fetchQuotationWorksList());\n    dispatch(actions.fetchWorkGroups());\n    dispatch(actions.fetchAuthorTypes());\n    //dispatch(actions.fetchManifestationQuotations(searchText, quotationType, expressionId));\n    dispatch(actions.clearManifestationQuotations());\n    dispatch(actions.clearParagraph());\n    dispatch(actions.clearSourceParagraph());\n    this.refs.quotationAuthorDateAfter.value = \"\";\n    this.refs.quotationAuthorDateBefore.value = \"\";\n    this.refs.expressionAuthorDateAfter.value = \"\";\n    this.refs.expressionAuthorDateBefore.value = \"\";\n    this.refs.searchText.value = \"\";\n\n\n\n  }\n  handleGraph(e){\n\t\te.preventDefault();\n\t\tvar {dispatch} = this.props;\n\t\tdispatch(actions.toggleGraphDisplay(this.props.chart.visible));\n\t}\n\trender(){\n    var _this = this;\n    function displaySearchWorksList(){\n      var searchWorks = _this.props.search.searchWorks;\n      return searchWorks.map((work) => {\n        return(\n          <option value={work.expressionShortId}>{work.expressionTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationWorksList(){\n      var quotationWorksList = _this.props.search.quotationWorksList;\n      return quotationWorksList.map((work) => {\n        var id = work.expressionShortId ? work.expressionShortId : work.expression.split(\"http://scta.info/resource/\")[1];\n        return(\n          <option value={id}>{work.expressionTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationWorkPartsParent(){\n      var quotationWorkParts = _this.props.search.quotationWorkParts;\n      if (quotationWorkParts){\n        var part = quotationWorkParts[0];\n        if (part){\n          var parentid = part.parent.split(\"http://scta.info/resource/\")[1];\n          return(\n            <option value={parentid}>Current: {part.parent_title}</option>\n          )\n        }\n      }\n    }\n    function displayQuotationWorkPartsGrandparent(){\n      var quotationWorkParts = _this.props.search.quotationWorkParts;\n      if (quotationWorkParts){\n        var part = quotationWorkParts[0];\n        if (part){\n          var grandparentid = part.grandparent.split(\"http://scta.info/resource/\")[1];\n          if (grandparentid != undefined){\n            return(\n              <option value={grandparentid}>Up: {part.grandparent_title}</option>\n            )\n          }\n        }\n      }\n    }\n    function displayQuotationWorkParts(){\n      var quotationWorkParts = _this.props.search.quotationWorkParts;\n      if (quotationWorkParts){\n        return quotationWorkParts.map((part) => {\n          var id = part.childShortId ? part.childShortId : part.child.split(\"http://scta.info/resource/\")[1];\n          if (part.child){\n            return(\n              <option value={id}>{part.child_title}</option>\n              )\n            }\n          }\n        )\n      }\n    }\n    function displayExpressionPartsParent(){\n      var expressionParts = _this.props.search.expressionParts;\n      if (expressionParts){\n        var part = expressionParts[0];\n        if (part){\n          var parentid = part.parent.split(\"http://scta.info/resource/\")[1];\n          return(\n            <option value={parentid+ \"/\" + part.parent_level}>Current: {part.parent_title}</option>\n          )\n        }\n      }\n    }\n    function displayExpressionPartsGrandparent(){\n      var expressionParts = _this.props.search.expressionParts;\n      if (expressionParts){\n        var part = expressionParts[0];\n        if (part){\n          var grandparentid = part.grandparent.split(\"http://scta.info/resource/\")[1];\n          if (grandparentid != undefined){\n            return(\n              <option value={grandparentid + \"/\" + part.grandparent_level}>Up: {part.grandparent_title}</option>\n            )\n          }\n        }\n      }\n    }\n    function displayExpressionParts(){\n      var expressionParts = _this.props.search.expressionParts;\n      if (expressionParts){\n        return expressionParts.map((part) => {\n          var id = part.childShortId ? part.childShortId : part.child.split(\"http://scta.info/resource/\")[1];\n          if (part.child){\n            return(\n              <option value={id + \"/\" + part.child_level}>{part.child_title}</option>\n              )\n            }\n          }\n        )\n      }\n    }\n\n    function displayQuotationAuthorsList(){\n      var authors = _this.props.search.quotationAuthors;\n      return authors.map((author) => {\n        return(\n          <option value={author.authorShortId}>{author.authorTitle}</option>\n          )\n        }\n      )\n    }\n    function displayExpressionAuthorsList(){\n      var authors = _this.props.search.expressionAuthors;\n      return authors.map((author) => {\n        return(\n          <option value={author.authorShortId}>{author.authorTitle}</option>\n          )\n        }\n      )\n    }\n    function displayExpressionTypeList(){\n      var expressionTypes = _this.props.search.expressionTypes;\n      return expressionTypes.map((type) => {\n        return(\n          <option value={type.expressionTypeShortId}>{type.expressionTypeTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationExpressionTypeList(){\n      var quotationExpressionTypes = _this.props.search.quotationExpressionTypes;\n      return quotationExpressionTypes.map((type) => {\n        return(\n          <option value={type.quotationExpressionTypeShortId}>{type.quotationExpressionTypeTitle}</option>\n          )\n        }\n      )\n    }\n    function displayWorkGroupsList(){\n      var workGroups = _this.props.search.workGroups;\n      return workGroups.map((workGroup) => {\n        return(\n          <option value={workGroup.workGroupShortId}>{workGroup.workGroupTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationAuthorTypes(){\n      const authorTypes = _this.props.search.authorTypes;\n      return authorTypes.map((authorType) => {\n        return(\n          <option value={authorType.authorTypeShortId}>{authorType.authorTypeTitle}</option>\n          )\n        }\n      )\n    }\n    function displayExpressionAuthorTypes(){\n      const authorTypes = _this.props.search.authorTypes;\n      return authorTypes.map((authorType) => {\n        return(\n          <option value={authorType.authorTypeShortId}>{authorType.authorTypeTitle}</option>\n          )\n        }\n      )\n    }\n    return(\n      <div>\n        <Form onSubmit={this.handleOnShowQuotationsWithoutAssociation}>\n          <div>\n\n            <div>\n              {\n                // turn this on, if you want  add search button turn off automatic\n                // on change search\n                <Button id=\"runQuery\" onClick={this.handleRunQuery}>Run Search</Button>\n              }\n\n              <Button id=\"clearFilter\" onClick={this.handleClearFilters}>Clear Filters</Button>\n            </div>\n            {\n              /*<div>\n              <label><input id=\"checkbox1\" ref=\"retainCanonical\" type=\"checkbox\"/>Restrict to Can. Quotation</label>\n            </div>\n            */\n            }\n            <div>\n            <p>Search Parameters</p>\n            <Form.Group>\n              <Form.Label>Quotation/ReferenceType</Form.Label>\n              <Form.Control as=\"select\" ref=\"structureElementType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                <option value=\"structureElementQuote\">Quotations</option>\n                <option value=\"structureElementRef\">References</option>\n                <option value=\"structureElementRefDup\">References (With Quotation Overlap)</option>\n                <option value=\"\">All</option>\n                <option value=\"allDup\">All (with quotation overlap)</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                <Form.Control as=\"input\" type=\"text\" ref=\"searchText\" placeholder=\"search quotation text\" onChange={this.handleSetSearchText}/>\n              </Form.Label>\n            </Form.Group>\n            <hr/>\n            <p>Quotation Parameters</p>\n            <Form.Group>\n            <Form.Label>Quotation Author Type</Form.Label>\n              <Form.Control as=\"select\" ref=\"quotationAuthorType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                <option value=\"\">All</option>\n                {displayQuotationAuthorTypes()}\n              </Form.Control>\n\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Author Birth Date</Form.Label>\n              <br/>\n              After <Form.Control as=\"input\" ref=\"quotationAuthorDateAfter\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1200\"/>\n              <br/>\n              Before <Form.Control as=\"input\" ref=\"quotationAuthorDateBefore\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1400\"/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Author</Form.Label>\n              <Form.Control as=\"select\" ref=\"quotationAuthor\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.quotationAuthor}>\n                <option value=\"\">All</option>\n                {displayQuotationAuthorsList()}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Work Group</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationWorkGroup\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayWorkGroupsList()}\n                </Form.Control>\n\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Text Type</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationExpressionType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayQuotationExpressionTypeList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Text Title</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationWork\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.quotationWork}>\n                  <option value=\"\">All</option>\n                  {displayQuotationWorksList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Text Part</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationWorkPart\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.quotationWorkPart}>\n                  <option value=\"\">All</option>\n                  {displayQuotationWorkPartsGrandparent()}\n                  {displayQuotationWorkPartsParent()}\n                  {displayQuotationWorkParts()}\n                </Form.Control>\n            </Form.Group>\n            <hr/>\n            <p>Text Parameters</p>\n            <Form.Group>\n              <Form.Label>Text Author Type</Form.Label>\n              <Form.Control as=\"select\" ref=\"expressionAuthorType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                <option value=\"\">All</option>\n                {displayExpressionAuthorTypes()}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Author Birth Date</Form.Label>\n              <br/>\n              After <Form.Control as=\"input\" ref=\"expressionAuthorDateAfter\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1200\"/>\n              <br/>\n              Before <Form.Control as=\"input\" ref=\"expressionAuthorDateBefore\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1400\"/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Author</Form.Label>\n                <Form.Control as=\"select\" ref=\"expressionAuthor\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.expressionAuthor}>\n                  <option value=\"\">All</option>\n                  {displayExpressionAuthorsList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Work Group</Form.Label>\n                <Form.Control as=\"select\" ref=\"workGroup\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayWorkGroupsList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Type</Form.Label>\n                <Form.Control as=\"select\" ref=\"expressionType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayExpressionTypeList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Title</Form.Label>\n                <Form.Control as=\"select\" ref=\"expressionId\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.expressionId}>\n                  <option value=\"\">All</option>\n                  {displaySearchWorksList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Part</Form.Label>\n              <Form.Control as=\"select\" ref=\"expressionPart\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.expressionPart + \"/\" + _this.props.search.searchParameters.expressionLevel}>\n                <option value=\"\">All</option>\n                {displayExpressionPartsGrandparent()}\n                {displayExpressionPartsParent()}\n                {displayExpressionParts()}\n              </Form.Control>\n            </Form.Group>\n            </div>\n          </div>\n        </Form>\n        <p><a href=\"#\" onClick={this.handleGraph}>Toggle Historgram</a></p>\n      </div>\n\n\n\t\t)\n\t}\n}\n\nexport default connect(\n  (state) => {\n\t\treturn state\n\t}\n)(Search);\n","import React from 'react'\nimport $ from 'jquery';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n\n\nclass Quotation extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnClick = this.handleOnClick.bind(this)\n\t}\n\thandleOnClick(){\n\t\tvar {isInstanceOf, id, quotation, dispatch, source} = this.props;\n\t\tdispatch(actions.changeQuotationsFocus(this.props.id));\n\t\tvar newFocusedQuotationObject = {\n\t\t\tid,\n\t\t\tquotation,\n\t\t\tsource,\n\t\t\ttype: \"expression\"\n\t\t}\n\t\t// example of why all these different dispatches called here might be a problem\n\t\t//fetchParagraph() requires that the createFocusedQuotation() is set.\n\t\t//seems to be working as is, but i'm not sure if this is the best way\n\t\tdispatch(actions.createFocusedQuotation(newFocusedQuotationObject));\n\t\tdispatch(actions.fetchParagraph());\n\t\tdispatch(actions.fetchSourceParagraph());\n\t\t//dispatch(actions.fetchSourceParagraph());\n\t\t//this fetch also seems to rely on focusedQuotation state being set.\n\t\t// seems to work as is though\n\t\tdispatch(actions.fetchManifestationQuotations());\n\n\n\t\tif (isInstanceOf != null){\n\t\t\t// create canonicalQuotation\n\t\t\tvar canonicalQuotationObject = this.props.canonicalQuotations.find((quotation) => {\n\t\t\t\treturn quotation.id === isInstanceOf\n\n\t\t\t});\n\n\t\t\tif (canonicalQuotationObject != undefined){\n\t\t\t\tdispatch(actions.createCanonicalQuotation(canonicalQuotationObject));\n\t\t\t\t// focus canonicalquotation List Item\n\t\t\t\tdispatch(actions.changeCanonicalQuotationsFocus(isInstanceOf));\n\t\t\t\t// scroll\n\t\t\t\tvar topPos = document.getElementById(isInstanceOf).offsetTop;\n\t\t\t\t$('#CanonicalQuotationList').animate({ scrollTop: topPos-10 }, 400);\n\t\t\t\t//scroll self to top\n\t\t\t\tvar selfTopPos = document.getElementById(id).offsetTop;\n\t\t\t\t$('#quotationsList').animate({ scrollTop: selfTopPos-10 }, 400);\n\t\t\t}\n\t\t\telse{\n\t\t\t\talert(\"this quotation is assigned to a canonicalQuotation, but either there is an error in the id assigned or a canonicalQuotation record still needs to be made\")\n\t\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\t\tdispatch(actions.clearCanonicalQuotation());\n\t\t\t}\n\n\t\t}\n\t\telse{\n\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\tdispatch(actions.clearCanonicalQuotation());\n\n\t\t}\n\n\n\n\t}\n\trender(){\n\n\t\tvar {isInstanceOf, quotation, className, title, author, id, refText, citation} = this.props;\n\n\t\tvar className = isInstanceOf === null ? className + \" isNotInstance\" : className;\n\n\t\treturn(\n\t\t\t<div className=\"quotation-wrapper\">\n\t\t\t\t<p id={id} className={className} onClick={this.handleOnClick}>\n\t\t\t\t{quotation}\n\t\t\t\t</p>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">{author}, {title}</a>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">Original Ref: {refText}</a>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">Modern Citation: {citation}</a>\n\t\t\t</div>\n\n\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(Quotation);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Quotation from \"./Quotation\"\n\nclass QuotationList extends React.Component{\n\trender(){\n    var {quotations, focusedQuotation} = this.props;\n    var renderQuotations = () => {\n\t\t\tif (quotations === \"fetching\"){\n\t\t\t\treturn <p>Fetching...</p>\n\t\t\t}\n\t\t\telse if (quotations.length === 0){\n        return(\n            <p className=\"container__message\">No Quotations</p>\n        );\n      }\n\t\t\telse {\n\t\t\t\treturn quotations.map( (quotation) => {\n\t\t\t\t\t//var quotationClass = quotation.focused ? \"quotation focused\" : \"quotation\"\n\t\t\t\t\tlet quotationClass = \"\"\n\t\t\t\t\tif (focusedQuotation.id){\n\t\t\t\t\t\tif (focusedQuotation.id.includes(quotation.id)){\n\t\t\t\t\t\t\tquotationClass = \"quotation focused\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tquotationClass = \"quotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tquotationClass = \"quotation\"\n\t\t\t\t\t}\n\t\t\t\t\tvar refType = quotation.refType\n\t\t\t\t\tvar classes = quotationClass + \" \" + quotation.refType\n\t        return (\n\n\t          <Quotation className={classes} key={quotation.id} {...quotation}/>\n\t        );\n\t      });\n\t\t\t}\n    };\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<p>List of Expression Quotations</p>\n\t\t\t\t{this.props.quotations !== \"fetching\" && <p>Count {quotations.length}</p>}\n\t\t\t\t{renderQuotations()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(QuotationList);\n","import React from 'react'\nvar {connect} = require('react-redux');\n\nclass FocusedQuotation extends React.Component{\n\trender(){\n    var {focusedQuotation} = this.props;\n\t\tvar {quotation} = focusedQuotation\n\t\tvar {id} = focusedQuotation\n\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<p>Focused Quotation: {quotation}</p>\n\t\t\t\t<p><a href={id}>{id}</a></p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(FocusedQuotation);\n","import React from 'react';\nvar {connect} = require('react-redux');\n\nclass CanonicalQuotation extends React.Component{\n\trender(){\n    var {canonicalQuotation} = this.props;\n\t\tvar displayQuotation = canonicalQuotation ? canonicalQuotation.quotation : \"No canonical quotation id assigned\";\n\t\tvar displayQuotationId = canonicalQuotation ? canonicalQuotation.id : \"\";\n\t\tvar citation = canonicalQuotation ? canonicalQuotation.citation : \"\";\n\n\t\t//var {quotation} = canonicalQuotation\n\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<p>Canonical Quotation: {displayQuotation}</p>\n\t\t\t\t<p>{citation}</p>\n\t\t\t\t<p><a href={displayQuotationId}>{displayQuotationId}</a></p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(CanonicalQuotation);\n","import React from 'react'\nimport $ from 'jquery';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n\n\nclass CanonicalQuotationListItem extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnClick = this.handleOnClick.bind(this)\n\t}\n\thandleOnClick(){\n\t\tvar {id, quotation, citation, dispatch} = this.props;\n\t\tdispatch(actions.changeCanonicalQuotationsFocus(this.props.id));\n\t\tvar quotationObject = {\n\t\t\tid,\n\t\t\tquotation,\n\t\t\tcitation\n\t\t}\n\t\tdispatch(actions.createCanonicalQuotation(quotationObject));\n\t\t// doesn't seem like the way to do it, because this dispatch might get of sync.\n\t\t//The second one requires the state to be set by the first\n\t\t// should be done in subscribe, but I'm not sure how yet\n\t\tdispatch(actions.fetchQuotations());\n\t\tdispatch(actions.clearQuotationsFocus());\n\t\tdispatch(actions.clearFocusedQuotation());\n\t\tdispatch(actions.clearManifestationQuotations());\n\t\tdispatch(actions.clearParagraph());\n\n\t\tvar selfTopPos = document.getElementById(id).offsetTop;\n\t\t$('#CanonicalQuotationList').animate({ scrollTop: selfTopPos-10 }, 400);\n\t}\n\trender(){\n    var {id, quotation, className, citation} = this.props\n    return(\n\t\t\t<div className=\"quotation-wrapper\">\n\t\t\t\t<p id={id} className={className} onClick={this.handleOnClick}>{quotation}</p>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">{citation}</a>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect()(CanonicalQuotationListItem);\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport CanonicalQuotationListItem from \"./CanonicalQuotationListItem\"\n\nvar actions = require('../actions/actions');\n\nclass CanonicalQuotationList extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnShowQuotationsWithoutAssociation = this.handleOnShowQuotationsWithoutAssociation.bind(this)\n\t}\n\thandleOnShowQuotationsWithoutAssociation(e){\n\t\te.preventDefault();\n\t\tvar {dispatch} = this.props;\n\t\tvar searchText = this.refs.searchText.value;\n\n\t\tdispatch(actions.clearCanonicalQuotation());\n\t\tdispatch(actions.clearFocusedQuotation());\n\t\tdispatch(actions.clearParagraph());\n\t\t//dispatch(actions.clearCanonicalQuotationsFocus());\n\t\t//TODO change app so that searchText does need to be passed as parameters\n\t\t//but is retrieved from the searchState\n\t\tdispatch(actions.fetchCanonicalQuotations(searchText));\n\t\tdispatch(actions.fetchQuotations(searchText));\n\t\t//dispatch(actions.fetchManifestationQuotations(searchText));\n\t}\n\trender(){\n    var {canonicalQuotations} = this.props;\n\t\tvar renderQuotations = () => {\n      if (canonicalQuotations.length === 0){\n        return(\n            <p className=\"container__message\">No Quotations</p>\n        );\n      }\n\n      return canonicalQuotations.map( (quotation) => {\n\t\t\t\tvar quotationClass = quotation.focused ? \"quotation focused\" : \"quotation\"\n\t\t\t\t//var quotationClass = \"quotation\"\n        return (\n\t\t\t\t\t<CanonicalQuotationListItem className={quotationClass} key={quotation.id} {...quotation}/>\n        );\n      });\n    };\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<p>List of Canonical Quotations</p>\n\t\t\t\t<p>Count {canonicalQuotations.length}</p>\n\t\t\t\t{renderQuotations()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(CanonicalQuotationList);\n","import React from 'react'\nimport $ from 'jquery';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n\n\nclass ManifestationQuotationListItem extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnClick = this.handleOnClick.bind(this)\n\t}\n\thandleOnClick(){\n\t\tvar {isManifestationOf, id, quotation, dispatch} = this.props;\n\n\t\tvar newFocusedQuotationObject = {\n\t\t\tid,\n\t\t\tquotation,\n\t\t\ttype: \"manifestation\"\n\t\t}\n\t\tdispatch(actions.createFocusedQuotation(newFocusedQuotationObject));\n\n\t\tdispatch(actions.changeManifestationQuotationsFocus(id));\n\t\t//dispatch(actions.changeQuotationsFocus(isManifestationOf));\n\t\tdispatch(actions.fetchParagraph());\n\n\t\tvar topPos = document.getElementById(id).offsetTop;\n\t\t$('#ManifestationQuotationsList').animate({ scrollTop: topPos-10 }, 400);\n\n\t\t//synchronize other columns\n\t\tif (isManifestationOf != null){\n\t\t\t// create canonicalQuotation\n\t\t\tvar isManifestationOfObject = this.props.quotations.find((quotation) => {\n\t\t\t\treturn quotation.id === isManifestationOf;\n\n\t\t\t});\n\n\t\t\tif (isManifestationOfObject != undefined){\n\t\t\t\t//dispatch(actions.createCanonicalQuotation(canonicalQuotationObject));\n\t\t\t\t// focus canonicalquotation List Item\n\t\t\t\tdispatch(actions.changeQuotationsFocus(isManifestationOf));\n\t\t\t\t// scroll\n\t\t\t\tvar topPos = document.getElementById(isManifestationOf).offsetTop;\n\t\t\t\t$('#quotationsList').animate({ scrollTop: topPos-10 }, 400);\n\n\t\t\t\t//the following is repeated in quotation App; it should be abstracted and not repeated\n\t\t\t\tvar isInstanceOf = isManifestationOfObject.isInstanceOf\n\t\t\t\tif (isInstanceOf != null){\n\t\t\t\t\t// create canonicalQuotation\n\t\t\t\t\tvar canonicalQuotationObject = this.props.canonicalQuotations.find((quotation) => {\n\t\t\t\t\t\treturn quotation.id === isInstanceOf\n\n\t\t\t\t\t});\n\n\t\t\t\t\tif (canonicalQuotationObject != undefined){\n\t\t\t\t\t\tdispatch(actions.createCanonicalQuotation(canonicalQuotationObject));\n\t\t\t\t\t\t// focus canonicalquotation List Item\n\t\t\t\t\t\tdispatch(actions.changeCanonicalQuotationsFocus(isInstanceOf));\n\t\t\t\t\t\t// scroll\n\t\t\t\t\t\tvar topPos = document.getElementById(isInstanceOf).offsetTop;\n\t\t\t\t\t\t$('#CanonicalQuotationList').animate({ scrollTop: topPos-10 }, 400);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t//alert(\"this quotation is assigned to a canonicalQuotation, but either there is an error in the id assigned or a canonicalQuotation record still needs to be made\")\n\t\t\t\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\t\t\t\tdispatch(actions.clearCanonicalQuotation());\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//alert(\"this quotation is assigned to a canonicalQuotation, but either there is an error in the id assigned or a canonicalQuotation record still needs to be made\")\n\t\t\t\tdispatch(actions.clearQuotationsFocus());\n\t\t\t\tdispatch(actions.clearCanonicalQuotation());\n\t\t\t}\n\n\t\t}\n\t\telse{\n\t\t\tdispatch(actions.clearQuotationsFocus());\n\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\tdispatch(actions.clearCanonicalQuotation());\n\n\t\t}\n\n\n\t}\n\trender(){\n    var {id, quotation, className} = this.props\n    return(\n\t\t\t<p id={id} className={className} onClick={this.handleOnClick}>{quotation}</p>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(ManifestationQuotationListItem);\n","import React from 'react'\nimport {connect} from 'react-redux';\n\n\nimport ManifestationQuotationListItem from \"./ManifestationQuotationListItem\"\nvar actions = require('../actions/actions');\n\nclass ManifestationQuotationList extends React.Component{\n\trender(){\n    var {manifestationQuotations} = this.props;\n    var renderQuotations = () => {\n      if (manifestationQuotations.length === 0){\n        return(\n            <p className=\"container__message\">No Quotations</p>\n        );\n      }\n\n      return manifestationQuotations.map( (quotation) => {\n\t\t\t\tvar quotationClass = quotation.focused ? \"quotation focused\" : \"quotation\"\n\t\t\t\t//var quotationClass = \"quotation\"\n        return (\n\n          <ManifestationQuotationListItem className={quotationClass} key={quotation.id} {...quotation}/>\n        );\n      });\n    };\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<p>List of Manifestation Quotations</p>\n        <p>Count {manifestationQuotations.length}</p>\n        {renderQuotations()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(ManifestationQuotationList);\n","import React from 'react';\nimport cetei from \"../vendor/CETEI\"\nimport Surface3Wrapper from '@bit/jeffreycwitt.lbp.surface3wrapper';\nimport Citation from '@bit/jeffreycwitt.lbp.citation';\n//import {FaExpand, FaCompress} from 'react-icons/fa';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n//import CETEI from '../../node_modules/CETEIcean/src/CETEI';\n\n\n\n\n\nclass Paragraph extends React.Component{\n  constructor(props){\n    super(props)\n    this.handleShowImages = this.handleShowImages.bind(this)\n    this.handleImageWrapperWraperClick = this.handleImageWrapperWraperClick.bind(this)\n    this.handleShowFullText = this.handleShowFullText.bind(this)\n    this.runQueryForSource = this.runQueryForSource.bind(this)\n    this.addTEICustom = this.addTEICustom.bind(this)\n    this.handleClearFilters = this.handleClearFilters\n    this.state = {\n      imageSize: \"200\",\n      imageFocus: false\n    }\n  }\n  handleImageWrapperWraperClick(){\n    this.setState((prevState) => {\n      const imageSize = prevState.imageSize === \"200\" ? \"725\" : \"200\"\n      const imageFocus = prevState.imageFocus ? false : true\n      return{\n        imageSize,\n        imageFocus\n      }\n    })\n\n\n  }\n  handleShowImages(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n    dispatch(actions.fetchImages());\n    dispatch(actions.toggleImagesDisplay(this.props.images.visible));\n  }\n  handleShowFullText(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n    if (this.props.type === \"source\"){\n      dispatch(actions.fetchFullText(true));\n    }\n    else{\n      dispatch(actions.fetchFullText(false));\n    }\n    dispatch(actions.toggleImagesDisplay(true));\n    dispatch(actions.toggleFullTextDisplay(this.props.fullText.visible));\n  }\n  componentDidMount(e){\n    var _this = this;\n    this.addTEICustom()\n  }\n  componentDidUpdate(e){\n    var _this = this;\n    this.addTEICustom()\n  }\n  addTEICustom(){\n    var _this = this;\n    const htmlText = new cetei()\n    let paragraph = {}\n    if (this.props.type === \"source\"){\n      paragraph = this.props.sourceParagraph;\n    }\n    else{\n      paragraph = this.props.paragraph;\n    }\n    if (paragraph.paragraph_text){\n      htmlText.makeHTML5(paragraph.paragraph_text, function(data){\n        // get id of quote\n        if (_this.props.focusedQuotation.id){\n          const quoteid = _this.props.focusedQuotation.id.split(\"/\").pop();\n          // find quote in text if there and change class to highlighted\n          if (data.querySelector(\"#\" + quoteid)){\n            data.querySelector(\"#\" + quoteid).setAttribute(\"class\", \"highlighted\");\n          }\n          //load text in div\n          _this.refs.text.replaceChild(data, _this.refs.text.childNodes[0]);\n        }\n\n      });\n    }\n    else{\n      const emptyTextNode = document.createTextNode(\"\");\n      _this.refs.text.replaceChild(emptyTextNode, _this.refs.text.childNodes[0]);\n    }\n  }\n  runQueryForSource(sourceId){\n\n    var {dispatch, search} = this.props;\n\n    var quotationWorkPart = sourceId\n\n\n\n    var searchParameters = {\n      quotationWorkPart\n    }\n    // clear search parameters\n    this.handleClearFilters()\n\t\t// set new search parameters\n    dispatch(actions.setSearchParameters(searchParameters));\n\t\t// (ideally after the handleClearFilters has finished) set search parameters to include quotationWorkPart\n\t\tdispatch(actions.fetchQuotationWorkParts());\n\t\t// fetch quotations based on the source part id\n\t\tdispatch(actions.fetchQuotations());\n\t\t//fetch chart to match new query\n\t\t// TODO: seems like it would be better for chart fetch only when view is requested\n    dispatch(actions.fetchChart());\n\n  }\n\t//TODO: this function is mostly a repeat of the clearFilters function in the Search component\n\t//this seems like an unnecessary redundancy; perhaps this can become a generic action or common utility function\n  handleClearFilters(e){\n\n    var {dispatch, search} = this.props;\n    dispatch(actions.clearSearchParameters());\n    dispatch(actions.clearCanonicalQuotations());\n    dispatch(actions.clearQuotations());\n\t\tdispatch(actions.fetchQuotationWorkParts());\n    dispatch(actions.fetchExpressionParts());\n    //dispatch(actions.fetchCanonicalQuotations());\n    dispatch(actions.fetchQuotationAuthors());\n    dispatch(actions.fetchExpressionAuthors());\n    dispatch(actions.fetchSearchWorksList());\n    //store.dispatch(actions.fetchExpressionTypes());\n    dispatch(actions.fetchQuotationWorksList());\n    dispatch(actions.fetchWorkGroups());\n    dispatch(actions.fetchAuthorTypes());\n    //dispatch(actions.fetchManifestationQuotations(searchText, quotationType, expressionId));\n    dispatch(actions.clearManifestationQuotations());\n\n    // date refs won't clear until place for them in the store has been created\n\t    // this.refs.quotationAuthorDateAfter.value = \"\";\n\t    // this.refs.quotationAuthorDateBefore.value = \"\";\n\t    // this.refs.expressionAuthorDateAfter.value = \"\";\n\t    // this.refs.expressionAuthorDateBefore.value = \"\";\n\t\t\t//this.refs.searchText.value = \"\";\n\n\n\n  }\n  render(){\n    var _this = this;\n    let paragraph = {}\n    if (this.props.type === \"source\"){\n      paragraph = this.props.sourceParagraph;\n    }\n    else{\n      paragraph = this.props.paragraph;\n    }\n    //var {paragraph} = this.props;\n    var {expression_id, manifestation_id, transcription_id, manifestations, paragraph_text, review} = paragraph\n    // var domParser = new DOMParser();\n    // var xsltProcessor = new XSLTProcessor();\n    //\n    // var xsltText = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"  exclude-result-prefixes=\"xs\"  version=\"1.0\" xmlns:tei=\"http://www.tei-c.org/ns/1.0\">  <xsl:output method=\"html\"/>  <xsl:template match=\"/\">    <xsl:apply-templates select=\"//tei:body\"/>  </xsl:template>  <xsl:template match=\"tei:p\">      <xsl:apply-templates/>    </xsl:template>  <xsl:template match=\"tei:quote\">    \"<xsl:apply-templates/>\"  </xsl:template>  <xsl:template match=\"tei:rdg\">      </xsl:template>  <xsl:template match=\"tei:note\">      </xsl:template>  <xsl:template match=\"tei:bibl\">      </xsl:template>  <xsl:template match=\"tei:reg\">      </xsl:template>  <xsl:template match=\"tei:corr\">      </xsl:template>  </xsl:stylesheet>';\n    // var xsltDoc = domParser.parseFromString(xsltText, \"text/xml\");\n    // xsltProcessor.importStylesheet(xsltDoc);\n    //\n    // var xmlText = paragraph_text;\n    // var xmlDoc = domParser.parseFromString(xmlText, \"text/xml\");\n    // var fragment = xsltProcessor.transformToFragment(xmlDoc, document);\n    //\n    // var parent = document.createElement(\"div\");\n    // parent.appendChild(fragment);\n    // var text =  parent.innerHTML;\n\n    function showImageToggle(){\n\n      if (paragraph.expression_id){\n        return(\n          <p>\n            <a onClick={_this.handleShowImages}>Toggle Image</a>\n          </p>\n        )\n      }\n\n    }\n    function showFullTextToggle(){\n\n      if (paragraph.expression_id){\n        return(\n          <p>\n            <a onClick={_this.handleShowFullText}>Show Full Text</a>\n          </p>\n        )\n      }\n\n    }\n\n    function showReview(){\n      if (review){\n        var reviewLink  = \"http://dll-review-registry.scta.info/reviews/\" + review[\"id\"] + \".html\";\n        var ipfsGatewayLink  = \"http://gateway.scta.info/ipfs/\" + review[\"ipfs-hash\"];\n        return(\n          <p>\n            <a href={reviewLink} target=\"_blank\"><img src={review[\"badge-url\"]}/></a> Content extracted from reviewed data source <a href={ipfsGatewayLink} target=\"_blank\">{review[\"ipfs-hash\"]}</a>\n          </p>\n        )\n      }\n    }\n    function showLbpLink(){\n\n    }\n    let newManifestations = []\n    if (manifestations && manifestations.constructor === Array) {\n      newManifestations = manifestations.map((m) => {\n        return {\n          manifestation: m,\n          manifestationTitle: m.split(\"/resource/\")[1],\n          transcription:\"\"\n        }\n      })\n    }\n    else if (typeof manifestations === \"string\")\n    {\n      newManifestations = [{\n        manifestation: manifestations,\n        manifestationTitle: manifestations.split(\"/resource/\")[1],\n        transcription:\"\"\n      }]\n    }\n    return(\n\n\n      <div>\n        <p>Context Paragraph</p>\n        <div id=\"text\" ref=\"text\"><div/></div>\n        {manifestation_id &&\n          <div id=\"imageWrapperWrapper\" className={this.state.imageFocus ? \"iww-big\" : \"iww-small\"}>\n          {this.state.imageFocus ? <hr className=\"toggleBar\" title=\"click to minimize\" onClick={this.handleImageWrapperWraperClick}/> : <hr className=\"toggleBar\" title=\"click to maximize\" onClick={this.handleImageWrapperWraperClick}/>}\n          <Surface3Wrapper\n           manifestations={newManifestations}\n           focusedManifestation={manifestation_id}\n           width={this.state.imageSize}\n         />\n         </div>\n          //showImageToggle()\n        }\n        {showFullTextToggle()}\n        {manifestation_id && <p><a href={\"http://sctalab.lombardpress.org/#/text?resourceid=\" + manifestation_id} target=\"_blank\">View in LbpWeb</a></p>}\n        {\n        //  showReview()\n        }\n        {(this.props.type === \"source\" && this.props.focusedQuotation.id) && <p className=\"link\" onClick={() => {this.runQueryForSource(this.props.sourceParagraph.expression_id.split(\"/resource/\")[1])}}>Search Quotations of this Passage Only</p>}\n        {\n          // no longer needed since citation component is in place\n          //manifestation_id && <p><a href={manifestation_id}>{manifestation_id}</a></p>\n        }\n        {manifestation_id && <Citation tresourceid={transcription_id}/>}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => {\n    return state\n  }\n)(Paragraph);\n","import React, { Component } from 'react'\nvar {connect} = require('react-redux');\n// import { scaleLinear } from 'd3-scale';\n// import { max } from 'd3-array';\n// import { select } from 'd3-selection';\nvar d3 = require(\"d3\");\nvar actions = require('../actions/actions');\n\n\n\n\n\nclass BarChart extends React.Component {\n   constructor(props){\n      super(props)\n      this.createBarChart = this.createBarChart.bind(this)\n  }\n   componentDidMount() {\n     var count = this.props.chart.count;\n     if (count){\n      this.createBarChart(count)\n      }\n   }\n   componentDidUpdate(prevProps, prevState) {\n     var count = this.props.chart.count;\n     if (count != prevProps.chart.count){\n       this.createBarChart(count)\n     }\n   }\n   componentWillUnmount(){\n     d3.selectAll(\".tooltip\").remove();\n   }\n   createBarChart(count) {\n     var svg = d3.select(\"svg\");\n     svg.selectAll(\"*\").remove();\n     d3.selectAll(\".tooltip\").remove();\n\n\n  //    console.log(\"value in createBarChart\", count)\n  //     const node = this.node\n  //     //const dataMax = max(this.props.data)\n  //     const dataMax = max(count)\n  //     const yScale = scaleLinear()\n  //        .domain([0, dataMax])\n  //        .range([0, this.props.size[1]])\n  //  select(node)\n  //     .selectAll('rect')\n  //     //.data(this.props.data)\n  //     .data(count)\n  //     .enter()\n  //     .append('rect')\n   //\n  //  select(node)\n  //     .selectAll('rect')\n  //     //.data(this.props.data)\n  //     .data(count)\n  //     .exit()\n  //     .remove()\n   //\n  //  select(node)\n  //     .selectAll('rect')\n  //     //.data(this.props.data)\n  //     .data(count)\n  //     .style('fill', '#fe9922')\n  //     .attr('x', (d,i) => i * 25)\n  //     .attr('y', d => this.props.size[1] - yScale(d))\n  //     .attr('height', d => yScale(d))\n  //     .attr('width', 25)\n  //  }\n  var data = count\n\n  //above is working chart\n\n  // below is new attempted chart\n  //data.sort(sort)\n\t\t//this filter is required to make sure count is recognized as integers not strings\n\t\t// see: http://stackoverflow.com/questions/10709950/get-the-real-max-of-an-array-in-d3\n\n\tdata.filter(function(d,i) {\n\t  d.count = +d.count;\n\t});\n\n\tvar countArray = [];\n\tvar titleArray = [];\n\n  countArray = data.map(function(d){\n    return d.count\n  });\n  // for (x in data){\n\t// \tcountArray.push(data[x].count);\n  //\n\t// };\n  titleArray = data.map(function(d){\n    return d.title\n  });\n\t// for (x in data){\n\t// \ttitleArray.push(data[x].title);\n\t// };\n\n\tvar margin = {top: 30, right: 30, bottom: 40, left: 50}\n\tvar height = 500 - margin.top - margin.bottom,\n\twidth = 1200 - margin.left - margin.right;\n\t//barWidth = 50,\n\t//barOffset = 5;\n\n\tvar colors = d3.scale.linear()\n\t\t.domain([0, data.length*.80,  data.length])\n\t\t.range(['#FFB832', '#C61C6F']);\n\n\n\t//var xScale = d3.scale.linear()\n\t\t//.domain([0, d3.max(countArray)])\n\t\t//.range([0, height]);\n\n\t//var yScale = d3.scale.ordinal()\n\t\t//.domain(d3.range(0, data.length))\n\t\t//.rangeBands([0, height])\n\n\tvar yScale = d3.scale.linear()\n\t\t.domain([0, d3.max(countArray)])\n\t\t.range([0, height]);\n\n\tvar xScale = d3.scale.ordinal()\n\t\t.domain(d3.range(0, data.length))\n\t\t.rangeBands([0, width], .5)\n\n\n\n\n\tvar tooltip = d3.select('body').append('div')\n\t\t.attr('class', 'tooltip')\n\t\t.style('position', 'absolute')\n\t\t.style('padding', '0 10px')\n\t\t.style('background', 'white')\n\t\t.style('opacity', 0)\n\n    const node = this.node\n    //var canvas = d3.select(\"div#\" + chart).append(\"svg\")\n    var canvas = d3.select(node)\n      //.attr(\"id\", chart)\n\t\t//.style('background', '#E7E0CB')\n\t\t.attr('width', width + margin.left + margin.right)\n\t\t.attr('height', height + margin.top + margin.bottom)\n\t\t.append(\"g\")\n\t\t.attr('transform', 'translate(' + margin.left + ', ' + margin.top +')')\n\t\t.selectAll(\"rect\")\n\t\t\t.data(data)\n\t\t\t.enter()\n\t\t\t.append(\"g\")\n\t\t\t\t.append(\"rect\")\n\t\t\t\t\t.style('fill', function(d,i){\n\t\t\t\t\t\treturn colors(i);\n\t\t\t\t\t})\n\t\t\t\t\t.attr('height', 0)\n\t\t\t\t\t.attr('y', height)\n\t\t\t\t\t.attr(\"width\", xScale.rangeBand())\n\t\t\t\t\t.attr(\"x\", function (d,i) {return xScale(i);})\n\n\n\t\t\t\t\t.on('mouseover', function(d) {\n\t\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.style('opacity', .9)\n\n\t\t\t\t\t\ttooltip.html(\"<a href='\" + d.item + \"'>\" + d.title + \"</a>. Quoted \" + d.count + \" times\")\n\t\t\t\t\t\t\t.style('left', (d3.event.pageX + 0) + 'px')\n\t\t\t\t\t\t\t.style('top', (d3.event.pageY + 0) + 'px')\n\t\t\t\t\t\t\t.style('left', d3.select(node).left + 150 + 'px')\n\t\t\t\t\t\t\t.style('top', d3.select(node).top + 125 + 'px')\n\n\t\t\t\t\t\t\td3.select(this)\n\t\t\t\t\t\t\t\t.style('opacity', .5);\n\t\t\t\t\t})\n\t\t\t\t\t.on('mouseout', function(d) {\n\t\t\t\t\t\t//tooltip.transition().style('opacity', 0)\n\t\t\t\t\t\td3.select(this)\n\t\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t\t.style('opacity', 1);\n\t\t\t\t\t})\n\n\n\t\t//canvas.transition()\n    canvas.transition()\n\t\t\t.attr(\"height\", function (d) {return yScale(d.count)})\n\t\t\t.attr(\"y\", function(d) { return height - yScale(d.count) })\n\t\t\t.delay(function(d,i){return i * 10})\n\t\t\t.duration(1000)\n\t\t\t.ease('elastic')\n\n\t\t\tvar vGuideScale = d3.scale.linear()\n\t\t\t\t.domain([0, d3.max(countArray)])\n\t\t\t\t.range([height, 0])\n\n\t\t\tvar vAxis = d3.svg.axis()\n\t\t\t\t.scale(vGuideScale)\n\t\t\t\t.orient('left')\n\t\t\t\t.ticks(10)\n\t\t\tvar vGuide = d3.select(node).append('g')\n\t\t\t\tvAxis(vGuide)\n\t\t\t\tvGuide.attr('transform', 'translate('+ margin.left+', '+margin.top + ')')\n\t\t\t\tvGuide.selectAll('path')\n\t\t\t\t\t.style({fill: 'none', stroke: \"#000\"})\n\t\t\t\tvGuide.selectAll('line')\n\t\t\t\t\t.style({ stroke: \"#000\"})\n\n\t\t\t//var horizontalGuideScale = d3.scale.ordinal()\n\t\t\t\t//.domain([0, d3.max(countArray)])\n\t\t\t\t//.range([height, 0])\n\n\t\t\tvar hAxis = d3.svg.axis()\n\t\t\t\t.scale(xScale)\n\t\t\t\t.orient('bottom')\n\t\t\t\t.tickValues(xScale.domain().filter(function(d, i){\n\t\t\t\t\treturn i % 50 === 0\n\t\t\t\t}\n\t\t\t\t));\n\n        var hGuide = d3.select(node).append('g')\n\t\t\t\thAxis(hGuide)\n\t\t\t\thGuide.attr('transform', 'translate('+ margin.left+', '+ (height + margin.top) + ')')\n\t\t\t\thGuide.selectAll('path')\n\t\t\t\t\t.style({fill: 'none', stroke: \"#000\"})\n\t\t\t\thGuide.selectAll('line')\n\t\t\t\t\t.style({ stroke: \"#000\"})\n\t\t}\nrender() {\n      return(\n          <svg ref={node => this.node = node}\n          width={500} height={500}>\n          </svg>\n\n\n    )\n   }\n}\n//module.exports = BarChart;\n\n// export default connect(\n// \t(state) => {\n// \t\treturn state\n// \t}\n// )(BarChart);\n\nconst mapStateToProps = state => (\n  {\n    chart: state.chart,\n  }\n);\n\nconst mapDispatchToProps = dispatch => ({\n\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BarChart);\n","import React, { Component } from 'react'\nimport Surface3Wrapper from '@bit/jeffreycwitt.lbp.surface3wrapper';\nimport CitationExplanation from '@bit/jeffreycwitt.lbp.citation-explanation'\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\nvar cetei = require(\"../vendor/CETEI\");\n\n\n\n\n\nclass Images extends React.Component {\n   constructor(props){\n      super(props)\n      this.handleToggleImage = this.handleToggleImage.bind(this)\n\n  }\n   componentDidMount() {\n\n   }\n   componentDidUpdate(count) {\n\n   }\n   handleToggleImage(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n \t\tdispatch(actions.toggleImagesDisplay(this.props.images.visible));\n\n   }\n   render(){\n     var _this = this;\n     function showImages(){\n       var images = _this.props.images;\n       if (images.visible && images.images.length > 0){\n         return images.images.map(function(image){\n           var imageUrl = image.url;\n           return(\n             <img src={imageUrl + \"/full/1000,/0/default.jpg\"}/>\n           )\n           }\n         )\n\n       }\n     }\n     const manifestations = [{\n         manifestation: \"http://scta.info/resource/l1-cpspfs/reims\",\n         manifestationTitle: \"reims\",\n         transcription: \"\"\n       },\n       {\n         manifestation: \"http://scta.info/resource/l1-cpspfs/svict\",\n         manifestationTitle: \"svict\",\n         transcription: \"\"\n       },\n     ]\n     return(\n       <div className=\"images\">\n       <Surface3Wrapper\n        manifestations={manifestations}\n        focusedManifestation={\"http://scta.info/l1-cpspfs/reims\"}\n      />\n         {showImages()}\n       </div>\n     )\n   }\n }\n//module.exports = BarChart;\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(Images);\n","import React, { Component } from 'react'\nimport $ from 'jquery';\nimport cetei from \"../vendor/CETEI\"\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n//var cetei = require(\"../vendor/CETEI\");\n\n\nclass FullText extends React.Component {\n   constructor(props){\n      super(props)\n      this.handleToggleFullText = this.handleToggleFullText.bind(this)\n\n  }\n  componentDidUpdate() {\n    var _this = this;\n\t\tconst htmlText = new cetei()\n\t\tif (this.props.fullText.textInfo.text){\n\t\t\thtmlText.makeHTML5(this.props.fullText.textInfo.text, function(data){\n\t\t\t\t// get id of quote\n\t\t\t\tconst quoteid = _this.props.focusedQuotation.id.split(\"/\").pop();\n        const sourceid = _this.props.focusedQuotation.source.split(\"/\").pop();\n\n\t\t\t\t//load text in div\n\t\t\t\t_this.refs.text.replaceChild(data, _this.refs.text.childNodes[0]);\n        let selfTopPos = \"\"\n        try{\n          // find quote in text if there and change class to highlighted\n  \t\t\t\tif (data.querySelector(\"#\" + quoteid)){\n  \t\t\t\t\tdata.querySelector(\"#\" + quoteid).setAttribute(\"class\", \"highlighted\");\n  \t\t\t\t}\n          selfTopPos = document.getElementById(quoteid).offsetTop;\n        }\n        catch(e){\n          // find quote in text if there and change class to highlighted\n  \t\t\t\tif (data.querySelector(\"#\" + sourceid)){\n  \t\t\t\t\tdata.querySelector(\"#\" + sourceid).setAttribute(\"class\", \"highlighted\");\n  \t\t\t\t}\n          selfTopPos = document.getElementById(sourceid).offsetTop;\n        }\n\n        console.log(\"scroll\", selfTopPos);\n        $(\".full-text-wrapper\").animate({ scrollTop: selfTopPos-100 }, 400);\n\n\t\t\t});\n\t\t}\n\n\n  }\n  handleToggleFullText(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n \t\tdispatch(actions.toggleFullTextDisplay(this.props.fullText.visible));\n\n  }\n  render(){\n     var _this = this;\n\n     return(\n       <div className=\"full-text-wrapper\">\n         <div id=\"text-tool-bar\">\n           <button id=\"hide-full-text\" onClick={this.handleToggleFullText}>Hide Text</button>\n         </div>\n         <div id=\"text\" ref=\"text\"><div/>\n       </div>\n\n       </div>\n     )\n   }\n }\n\n//module.exports = BarChart;\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(FullText);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\n\n\n\n\n//var actions = require('actions');\nimport Search from \"./Search\";\nimport QuotationList from \"./QuotationList\";\nimport FocusedQuotation from \"./FocusedQuotation\";\nimport CanonicalQuotation from \"./CanonicalQuotation\";\nimport CanonicalQuotationList from \"./CanonicalQuotationList\";\nimport ManifestationQuotationList from \"./ManifestationQuotationList\";\nimport Paragraph from \"./Paragraph\";\nimport BarChart from \"./BarChart\";\nimport Images from \"./Images\";\nimport FullText from \"./FullText\";\n\nclass TodoApp extends React.Component{\n\trender(){\n\t\tvar _this = this;\n\t\tfunction barGraphDisplay(){\n\t\t\tif (_this.props.chart.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"chart\">\n\t\t\t\t\t\t<BarChart size={[500,500]}/>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\tfunction imagesDisplay(){\n\t\t\tif (_this.props.images.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t<Images/>\n\t\t\t\t\t\t<div className=\"column5\">\n\t\t\t\t\t\t\t<Paragraph/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\tfunction fullTextDisplay(){\n\t\t\tif (_this.props.fullText.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<FullText/>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\tfunction quotationDisplay(){\n\t\t\tif (!_this.props.chart.visible && !_this.props.images.visible && !_this.props.fullText.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t<div id=\"quotationsList\" className=\"column2\">\n\t\t\t\t\t\t<QuotationList/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"ManifestationQuotationsList\" className=\"column3\">\n\t\t\t\t\t\t<ManifestationQuotationList/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column4\">\n\t\t\t\t\t\t<Paragraph/>\n\t\t\t\t\t\t{/* <FocusedQuotation/>\n\t\t\t\t\t\t<CanonicalQuotation/> */}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column5\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//<CanonicalQuotationList/>\n\t\t\t\t\t\t\t<Paragraph type=\"source\"/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<div className='search column1'>\n\t\t\t\t\t\t<Search/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{quotationDisplay()}\n\t\t\t\t\t{barGraphDisplay()}\n\t\t\t\t\t{imagesDisplay()}\n\t\t\t\t\t{fullTextDisplay()}\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n//module.exports = ;\nexport default connect(\n  (state) => {\n\t\treturn state\n\t}\n)(TodoApp);\n","import React from \"react\";\nimport TodoApp from \"./TodoApp\";\n\nvar Main = (props) => {\n\treturn(\n\t\t\t<div>\n        <h3 className='page-title'><em>Ad fontes</em>: A Scholastic Quotation Explorer</h3>\n\t\t\t\t<div className='page-header'>\n\t\t\t\t\t<p>A <a href=\"http://lombardpress.org\">LombardPress</a> Publication</p>\n\t\t\t\t\t<p>Powerd by Data from the <a href=\"https://scta.info\">Scholastic Commentaries and Text Archive</a></p>\n\t\t\t\t\t<p>Designed by <a href=\"http://jeffreycwitt.com\">Jeffrey C. Witt</a></p>\n        </div>\n        <TodoApp/>\n\t\t\t</div>\n\t\t);\n}\n\nexport default Main;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {Provider} from \"react-redux\"\n//import {Route, Router, IndexRoute, hashHistory} from \"react-router\"\n\nimport TodoApp from \"./components/TodoApp\"\n//var BarChart = require(\"BarChart\");\nimport BarChart from './components/BarChart'\nimport Main from './components/Main'\n\nimport {setSearchParameters, fetchQuotationAuthors, fetchExpressionAuthors, fetchSearchWorksList, fetchExpressionTypes, fetchQuotationExpressionTypes, fetchQuotationWorksList, fetchWorkGroups, fetchAuthorTypes, fetchChart} from './actions/actions'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './styles/app.scss';\nvar store = require(\"./store/configureStore\").configure();\n\n\n\nstore.subscribe(() => {\n\tvar state = store.getState();\n\n});\n\n//var state = store.getState();\n\nstore.dispatch(setSearchParameters({}));\n//store.dispatch(actions.fetchCanonicalQuotations());\nstore.dispatch(fetchQuotationAuthors());\nstore.dispatch(fetchExpressionAuthors());\nstore.dispatch(fetchSearchWorksList());\nstore.dispatch(fetchExpressionTypes());\nstore.dispatch(fetchQuotationExpressionTypes());\nstore.dispatch(fetchQuotationWorksList());\nstore.dispatch(fetchWorkGroups());\nstore.dispatch(fetchAuthorTypes());\nstore.dispatch(fetchChart());\n\n\n\n\n// load foundation\n//$(document).foundation();\n\n// App css\n\n//require('style!css!sass!applicationStyles')\n//$(document).foundation();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Main/>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n","export var searchReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'CLEAR_SEARCH_PARAMETERS':\n      return {\n        ...state,\n        searchParameters: []\n        }\n    case 'SET_SEARCH_PARAMETERS':\n      return {\n        ...state,\n        searchParameters: action.searchParameters\n        }\n    case 'START_SEARCH_WORKS_FETCH':\n        return {\n          ...state,\n          searchWorks: []\n        }\n    case 'COMPLETE_SEARCH_WORKS_FETCH':\n      return {\n        ...state,\n        searchWorks: action.listOfWorks\n      }\n    case 'START_QUOTATION_AUTHORS_FETCH':\n        return {\n          ...state,\n          quotationAuthors: []\n        }\n    case 'COMPLETE_QUOTATION_AUTHORS_FETCH':\n      return {\n        ...state,\n        quotationAuthors: action.authors\n      }\n    case 'START_EXPRESSION_AUTHORS_FETCH':\n        return {\n          ...state,\n          expressionAuthors: []\n        }\n    case 'COMPLETE_EXPRESSION_AUTHORS_FETCH':\n      return {\n        ...state,\n        expressionAuthors: action.authors\n      }\n    case 'START_QUOTATION_WORKS_LIST_FETCH':\n        return {\n          ...state,\n          quotationWorksList: []\n        }\n    case 'COMPLETE_QUOTATION_WORKS_LIST_FETCH':\n      return {\n        ...state,\n        quotationWorksList: action.quotationWorksList\n      }\n    case 'START_QUOTATION_WORK_PARTS_FETCH':\n      return {\n        ...state,\n        quotationWorkParts: []\n      }\n    case 'COMPLETE_QUOTATION_WORK_PARTS_FETCH':\n      return {\n        ...state,\n        quotationWorkParts: action.parts\n      }\n    case 'START_EXPRESSION_PARTS_FETCH':\n      return {\n        ...state,\n        expressionParts: []\n      }\n    case 'COMPLETE_EXPRESSION_PARTS_FETCH':\n      return {\n        ...state,\n        expressionParts: action.parts\n      }\n    case 'START_EXPRESSION_TYPE_FETCH':\n        return {\n          ...state,\n          expressionTypes: []\n        }\n    case 'COMPLETE_EXPRESSION_TYPE_FETCH':\n      return {\n        ...state,\n        expressionTypes: action.expressionTypes\n      }\n    case 'START_QUOTATION_EXPRESSION_TYPE_FETCH':\n        return {\n          ...state,\n          quotationExpressionTypes: []\n        }\n    case 'COMPLETE_QUOTATION_EXPRESSION_TYPE_FETCH':\n      return {\n        ...state,\n        quotationExpressionTypes: action.quotationExpressionTypes\n      }\n    case 'START_WORK_GROUPS_FETCH':\n        return {\n          ...state,\n          workGroups: []\n        }\n    case 'COMPLETE_WORK_GROUPS_FETCH':\n      return {\n        ...state,\n        workGroups: action.workGroups\n      }\n    case 'START_AUTHOR_TYPES_FETCH':\n        return {\n          ...state,\n          authorTypes: []\n        }\n    case 'COMPLETE_AUTHOR_TYPES_FETCH':\n      return {\n        ...state,\n        authorTypes: action.authorTypes\n      }\n    default:\n      return state\n  };\n};\n","export var chartReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'TOGGLE_GRAPH_DISPLAY':\n        return {\n          ...state,\n          visible: !action.current\n        }\n    case 'START_CHART_FETCH':\n        return {\n          ...state,\n          count: []\n        }\n    case 'COMPLETE_CHART_FETCH':\n      return {\n        ...state,\n        count: action.count\n      }\n    default:\n      return state\n  };\n};\n","export var imagesReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'TOGGLE_IMAGES_DISPLAY':\n        return {\n          ...state,\n          visible: !action.current\n        }\n    // case 'TOGGLE_GRAPH_DISPLAY':\n    //   return {\n    //     ...state,\n    //     visible: false\n    //   }\n    case 'START_IMAGES_FETCH':\n        return {\n          ...state,\n          images: []\n        }\n    case 'COMPLETE_IMAGES_FETCH':\n      return {\n        ...state,\n        images: action.images\n      }\n    default:\n      return state\n  };\n};\n","export var quotationsReducer = (state = [], action) => {\n  switch (action.type){\n    case 'ADD_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'ADD_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'CLEAR_QUOTATIONS':\n      return [];\n    case 'START_QUOTATIONS_FETCH':\n      //return [];\n      return \"fetching\";\n    case 'COMPLETE_QUOTATIONS_FETCH':\n      return action.quotations.map((quotation)=>{\n        return {\n          id: quotation.quotation.value,\n          quotation: quotation.quotation_text.value,\n          title: quotation.toplevel_expression_title.value,\n          author: quotation.author_title.value,\n          focused: false,\n          isInstanceOf: quotation.isInstanceOf ? quotation.isInstanceOf.value : null,\n          source: quotation.source ? quotation.source.value : null,\n          citation: quotation.citation ? quotation.citation.value : null,\n          refText: quotation.refText ? quotation.refText.value : null,\n          refType: quotation.refType ? quotation.refType.value.split(\"/resource/\").reverse()[0] : null,\n        }\n      });\n    case 'CHANGE_QUOTATIONS_FOCUS':\n      var updatedState = state.map((quotation) =>{\n        if (quotation.id === action.id){\n          return{\n            ...quotation,\n            focused: true\n          }\n        }\n        else{\n          return{\n            ...quotation,\n            focused: false\n          }\n        }\n      });\n      return [\n        ...updatedState,\n      ];\n    default:\n      return state;\n  };\n};\n","export var focusedQuotationReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'CREATE_FOCUSED_QUOTATION':\n      return action.quotation;\n    case 'CLEAR_FOCUSED_QUOTATION':\n      return {}\n    default:\n      return state;\n  };\n};\n","export var canonicalQuotationReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'CREATE_CANONICAL_QUOTATION':\n      return action.quotation;\n    case 'CLEAR_CANONICAL_QUOTATION':\n      return null;\n    default:\n      return state;\n  };\n};\n","export var canonicalQuotationsReducer = (state = [], action) => {\n  switch (action.type){\n    case 'ADD_CANONICAL_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'CLEAR_CANONICAL_QUOTATIONS':\n      return []\n    case 'START_CANONICAL_QUOTATIONS_FETCH':\n      return []\n    case 'COMPLETE_CANONICAL_QUOTATIONS_FETCH':\n\n      return action.canonicalQuotations.map((quotation) => {\n        return {\n          id: quotation.quotation.value,\n          quotation: quotation.quotation_text.value,\n          citation: quotation.citation ? quotation.citation.value : \"citation not yet recorded\",\n          focused: false,\n        }\n      });\n    case 'CLEAR_CANONICAL_QUOTATIONS_FOCUS':\n      return state.map((quotation) => {\n        return{\n          ...quotation,\n          focused: false\n        }\n      });\n    case 'CHANGE_CANONICAL_QUOTATIONS_FOCUS':\n      var updatedState = state.map((quotation) =>{\n        if (quotation.id === action.id){\n          return{\n            ...quotation,\n            focused: true\n          }\n        }\n        else{\n          return{\n            ...quotation,\n            focused: false\n          }\n        }\n      });\n      return [\n        ...updatedState,\n      ];\n    default:\n      return state;\n  };\n};\n","/// manifestation quotations reducer\nexport var manifestationQuotationsReducer = (state = [], action) => {\n  switch (action.type){\n    case 'ADD_MANIFESTATION_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'CLEAR_MANIFESTATION_QUOTATIONS':\n      return []\n    case 'START_MANIFESTATION_QUOTATIONS_FETCH':\n      return []\n    case 'COMPLETE_MANIFESTATION_QUOTATIONS_FETCH':\n\n      return action.manifestationQuotations.map((quotation) => {\n        return {\n          id: quotation.quotation.value,\n          quotation: quotation.quotation_text.value,\n          focused: false,\n          isManifestationOf: quotation.isManifestationOf ? quotation.isManifestationOf.value : null\n        }\n      });\n    case 'CLEAR_MANIFESTATION_QUOTATIONS_FOCUS':\n      return state.map((quotation) => {\n        return{\n          ...quotation,\n          focused: false\n        }\n      });\n    case 'CHANGE_MANIFESTATION_QUOTATIONS_FOCUS':\n      var updatedState = state.map((quotation) =>{\n        if (quotation.id === action.id){\n          return{\n            ...quotation,\n            focused: true\n          }\n        }\n        else{\n          return{\n            ...quotation,\n            focused: false\n          }\n        }\n      });\n      return [\n        ...updatedState,\n      ];\n    default:\n      return state;\n  };\n};\n","export var paragraphReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'ADD_PARAGRAPH':\n      return action.paragraph;\n    case 'CLEAR_PARAGRAPH':\n      return {}\n    case 'START_PARAGRAPH_FETCH':\n      return {}\n    case 'COMPLETE_PARAGRAPH_FETCH':\n      return action.paragraph\n    case 'START_REVIEW_FETCH':\n      return state\n    case 'COMPLETE_REVIEW_FETCH':\n      return {\n        ...state,\n        review: action.review\n      }\n    default:\n      return state;\n  }\n};\n","export var sourceParagraphReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'ADD_SOURCE_PARAGRAPH':\n      return action.sourceParagraph;\n    case 'CLEAR_SOURCE_PARAGRAPH':\n      return {}\n    case 'START_SOURCE_PARAGRAPH_FETCH':\n      return {}\n    case 'COMPLETE_SOURCE_PARAGRAPH_FETCH':\n      return action.sourceParagraph\n    case 'START_SOURCE_PARAGRAPH_REVIEW_FETCH':\n      return state\n    case 'COMPLETE_SOURCE_PARAGRAPH_REVIEW_FETCH':\n      return {\n        ...state,\n        review: action.review\n      }\n    default:\n      return state;\n  }\n};\n","// paragraphReducer\nexport var fullTextReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'TOGGLE_FULL_TEXT_DISPLAY':\n      return {\n        ...state,\n        visible: !action.current\n      }\n    case 'ADD_FULL_TEXT':\n      return {\n        ...state,\n        textInfo: action.text\n      }\n    case 'CLEAR_FULL_TEXT':\n      return {\n        ...state,\n        textInfo: {}\n      }\n    case 'START_FULL_TEXT_FETCH':\n      return {\n        ...state,\n        textInfo: {}\n      }\n    case 'COMPLETE_FULL_TEXT_FETCH':\n      return {\n        ...state,\n        textInfo: action.text\n      }\n    default:\n      return state;\n  }\n};\n","\n\n\nimport {searchReducer} from '../reducers/searchReducer';\nimport {chartReducer} from \"../reducers/chartReducer\";\nimport {imagesReducer} from \"../reducers/imagesReducer\";\nimport {quotationsReducer} from \"../reducers/quotationsReducer\";\nimport {focusedQuotationReducer} from \"../reducers/focusedQuotationReducer\";\nimport {canonicalQuotationReducer} from \"../reducers/canonicalQuotationReducer\";\nimport {canonicalQuotationsReducer} from \"../reducers/canonicalQuotationsReducer\";\nimport {manifestationQuotationsReducer} from \"../reducers/manifestationQuotationsReducer\";\nimport {paragraphReducer} from \"../reducers/paragraphReducer\";\nimport {sourceParagraphReducer} from \"../reducers/sourceParagraphReducer\";\nimport {fullTextReducer} from \"../reducers/fullTextReducer\";\n\nvar redux = require('redux')\nvar thunk = require('redux-thunk').default;\n\nexport var configure = (initialState = {}) => {\n  var reducer = redux.combineReducers({\n    search: searchReducer,\n    quotations: quotationsReducer,\n    focusedQuotation: focusedQuotationReducer,\n    canonicalQuotation: canonicalQuotationReducer,\n    canonicalQuotations: canonicalQuotationsReducer,\n    manifestationQuotations: manifestationQuotationsReducer,\n    paragraph: paragraphReducer,\n    sourceParagraph: sourceParagraphReducer,\n    chart: chartReducer,\n    images: imagesReducer,\n    fullText: fullTextReducer,\n\n  })\n\n  var store = redux.createStore(reducer, initialState, redux.compose(\n    redux.applyMiddleware(thunk),\n    window.devToolsExtension ?window.devToolsExtension() : f => f\n  ));\n  return store;\n}\n","var behaviors = require('./behaviors');\nclass CETEI {\n\n    constructor(base){\n        this.els = [];\n        this.behaviors = [];\n        this.hasStyle = false;\n        this.prefixes = [];\n        if (base) {\n          this.base = base;\n        } else {\n          try {\n            if (window) {\n              this.base = window.location.href.replace(/\\/[^\\/]*$/, \"/\");\n            }\n          } catch (e) {\n            this.base = \"\";\n          }\n        }\n        this.behaviors.push(behaviors);\n        //this.shadowCSS;\n        this.supportsShadowDom = document.head.createShadowRoot || document.head.attachShadow;\n    }\n\n    // public method\n    /* Returns a Promise that fetches a TEI source document from the URL\n       provided in the first parameter and then calls the makeHTML5 method\n       on the returned document.\n     */\n    getHTML5(TEI_url, callback, perElementFn){\n        if (window.location.href.startsWith(this.base) && (TEI_url.indexOf(\"/\") >= 0)) {\n          this.base = TEI_url.replace(/\\/[^\\/]*$/, \"/\");\n        }\n        // Get TEI from TEI_url and create a promise\n        let promise = new Promise( function (resolve, reject) {\n            let client = new XMLHttpRequest();\n\n            client.open('GET', TEI_url);\n            client.send();\n\n            client.onload = function () {\n              if (this.status >= 200 && this.status < 300) {\n                resolve(this.response);\n              } else {\n                reject(this.statusText);\n              }\n            };\n            client.onerror = function () {\n              reject(this.statusText);\n            };\n        })\n        .catch( function(reason) {\n            // TODO: better error handling?\n            console.log(reason);\n        });\n\n        return promise.then((TEI) => {\n            return this.makeHTML5(TEI, callback, perElementFn);\n        });\n\n    }\n\n    /* Converts the supplied TEI string into HTML5 Custom Elements. If a callback\n       function is supplied, calls it on the result.\n     */\n    makeHTML5(TEI, callback, perElementFn){\n      // TEI is assumed to be a string\n      let TEI_dom = ( new DOMParser() ).parseFromString(TEI, \"text/xml\");\n      var doc = this.domToHTML5(TEI_dom, callback, perElementFn);\n      return this.registerTEIElements(doc, callback);\n\n    }\n\n    /* Converts the supplied TEI DOM into HTML5 Custom Elements. If a callback\n       function is supplied, calls it on the result.\n    */\n    domToHTML5(TEI_dom, callback, perElementFn){\n\n      this._fromTEI(TEI_dom);\n\n      let convertEl = (el) => {\n          // Create new element. TEI elements get prefixed with 'tei-',\n          // TEI example elements with 'teieg-'. All others keep\n          // their namespaces and are copied as-is.\n          let newElement;\n          let copy = false;\n          switch (el.namespaceURI) {\n            case \"http://www.tei-c.org/ns/1.0\":\n              newElement = document.createElement(\"tei-\" + el.tagName);\n              break;\n            case \"http://www.tei-c.org/ns/Examples\":\n              if (el.tagName == \"egXML\") {\n                newElement = document.createElement(\"teieg-\" + el.tagName);\n                break;\n              }\n            case \"http://relaxng.org/ns/structure/1.0\":\n              newElement = document.createElement(\"rng-\" + el.tagName);\n              break;\n            default:\n              newElement = document.importNode(el, false);\n              copy = true;\n          }\n          // Copy attributes; @xmlns, @xml:id, @xml:lang, and\n          // @rendition get special handling.\n          for (let att of Array.from(el.attributes)) {\n              if (!att.name.startsWith(\"xmlns\") || copy) {\n                newElement.setAttribute(att.name, att.value);\n              } else {\n                if (att.name == \"xmlns\")\n                newElement.setAttribute(\"data-xmlns\", att.value); //Strip default namespaces, but hang on to the values\n              }\n              if (att.name == \"xml:id\" && !copy) {\n                newElement.setAttribute(\"id\", att.value);\n              }\n              if (att.name == \"xml:lang\" && !copy) {\n                newElement.setAttribute(\"lang\", att.value);\n              }\n              if (att.name == \"rendition\") {\n                newElement.setAttribute(\"class\", att.value.replace(/#/g, \"\"));\n              }\n          }\n          // Preserve element name so we can use it later\n          newElement.setAttribute(\"data-teiname\", el.localName);\n          // If element is empty, flag it\n          if (el.childNodes.length == 0) {\n            newElement.setAttribute(\"data-empty\", \"\");\n          }\n          // Turn <rendition scheme=\"css\"> elements into HTML styles\n          if (el.localName == \"tagsDecl\") {\n            let style = document.createElement(\"style\");\n            for (let node of Array.from(el.childNodes)){\n              if (node.nodeType == Node.ELEMENT_NODE && node.localName == \"rendition\" && node.getAttribute(\"scheme\") == \"css\") {\n                let rule = \"\";\n                if (node.hasAttribute(\"selector\")) {\n                  //rewrite element names in selectors\n                  rule += node.getAttribute(\"selector\").replace(/([^#, >]+\\w*)/g, \"tei-$1\").replace(/#tei-/g, \"#\") + \"{\\n\";\n                  rule += node.textContent;\n                } else {\n                  rule += \".\" + node.getAttribute(\"xml:id\") + \"{\\n\";\n                  rule += node.textContent;\n                }\n                rule += \"\\n}\\n\";\n                style.appendChild(document.createTextNode(rule));\n              }\n            }\n            if (style.childNodes.length > 0) {\n              newElement.appendChild(style);\n              this.hasStyle = true;\n            }\n          }\n          // Get prefix definitions\n          if (el.localName == \"prefixDef\") {\n            this.prefixes.push(el.getAttribute(\"ident\"));\n            this.prefixes[el.getAttribute(\"ident\")] =\n              {\"matchPattern\": el.getAttribute(\"matchPattern\"),\n              \"replacementPattern\": el.getAttribute(\"replacementPattern\")};\n          }\n          for (let node of Array.from(el.childNodes)){\n              if (node.nodeType == Node.ELEMENT_NODE) {\n                  newElement.appendChild(  convertEl(node)  );\n              }\n              else {\n                  newElement.appendChild(node.cloneNode());\n              }\n          }\n          if (perElementFn) {\n            perElementFn(newElement);\n          }\n          return newElement;\n      }\n\n      return this.dom = convertEl(TEI_dom.documentElement);\n\n\n    }\n\n    registerTEIElements(doc, callback){\n\n      if (doc.registerElement) {\n        this.registerAll(this.els);\n      } else {\n        this.fallback(this.els);\n      }\n      this.done = true;\n      if (callback) {\n          callback(this.dom, this);\n      }\n      else {\n          return this.dom;\n      }\n\n    }\n\n    /* If the TEI document defines CSS styles in its tagsDecl, this method\n       copies them into the wrapper HTML document's head.\n     */\n    addStyle(doc, data) {\n      if (this.hasStyle) {\n        doc.getElementsByTagName(\"head\").item(0).appendChild(data.getElementsByTagName(\"style\").item(0).cloneNode(true));\n      }\n    }\n\n    /* If a URL where CSS for styling Shadow DOM elements lives has been defined,\n       insert it into the Shadow DOM.\n     */\n    addShadowStyle(shadow) {\n      if (this.shadowCSS) {\n        shadow.innerHTML = \"<style>\" + \"@import url(\\\"\" + this.shadowCSS + \"\\\");</style>\" + shadow.innerHTML;\n      }\n    }\n\n    /* Add a user-defined set of behaviors to CETEIcean's processing\n       workflow. Added behaviors will override predefined behaviors with the\n       same name.\n    */\n    addBehaviors(bhvs){\n      if (bhvs[\"handlers\"] || bhvs [\"fallbacks\"]) {\n        this.behaviors.push(bhvs);\n      } else {\n        console.log(\"No handlers or fallback methods found.\");\n      }\n    }\n\n    /* Sets the base URL for the document. Used to rewrite relative links in the\n       XML source (which may be in a completely different location from the HTML\n       wrapper).\n     */\n    setBaseUrl(base) {\n      this.base = base;\n    }\n\n    // \"private\" method\n    _fromTEI(TEI_dom) {\n        let root_el = TEI_dom.documentElement;\n        this.els = new Set( Array.from(root_el.getElementsByTagNameNS(\"http://www.tei-c.org/ns/1.0\", \"*\"), x => x.tagName) );\n        this.els.add(\"egXML\"); // Special case—not in TEI namespace, but needs to be handled\n        this.els.add(root_el.tagName); // Add the root element to the array\n    }\n\n    // private method\n    _insert(elt, strings) {\n      let span = document.createElement(\"span\");\n      if (strings.length > 1) {\n        if (strings[0].includes(\"<\") && strings[1].includes(\"</\")) {\n          span.innerHTML = strings[0] + elt.innerHTML + strings[1];\n        } else {\n          span.innerHTML = \"<span>\" + strings[0] + \"</span>\" + elt.innerHTML + \"<span>\" + strings[1] + \"</span>\";\n        }\n      } else {\n        if (strings[0].includes(\"<\")) {\n          span.innerHTML = strings[0] + elt.innerHTML;\n        } else {\n          span.innerHTML = \"<span>\" + strings[0] + \"</span>\" + elt.innerHTML;\n        }\n      }\n      if (span.children.length > 1) {\n        return span;\n      } else {\n        return span.children[0];\n      }\n    }\n\n    // private method\n    _template(str, elt) {\n      let result = str;\n      if (str.search(/$(\\w*)@(\\w+)/)) {\n        let re = /\\$(\\w*)@(\\w+)/g;\n        let replacements;\n        while (replacements = re.exec(str)) {\n          if (elt.hasAttribute(replacements[2])) {\n            if (replacements[1] && this[replacements[1]]) {\n              result = result.replace(replacements[0], this[replacements[1]].call(this, elt.getAttribute(replacements[2])));\n            } else {\n              result = result.replace(replacements[0], elt.getAttribute(replacements[2]));\n            }\n          }\n        }\n      }\n      return result;\n    }\n\n    tagName(name) {\n      if (name == \"egXML\") {\n        return \"teieg-\" + name;\n      } else {\n        return \"tei-\" + name;\n      }\n    }\n\n    /* Takes a template in the form of an array of 1 or 2 strings and\n       returns a closure around a function that can be called as\n       a createdCallback or applied to an individual element.\n       Called by the getHandler() and getFallback() methods\n    */\n    decorator(strings) {\n      let ceteicean = this;\n      return function (elt) {\n        let copy = [];\n        for (let i = 0; i < strings.length; i++) {\n          copy.push(ceteicean._template(strings[i], elt));\n        }\n        return ceteicean._insert(elt, copy);\n      }\n    }\n\n    /* Returns the handler function for the given element name\n       Called by registerAll().\n     */\n    getHandler(fn) {\n      for (let i = this.behaviors.length - 1; i >= 0; i--) {\n        if (this.behaviors[i][\"handlers\"][fn]) {\n          if (Array.isArray(this.behaviors[i][\"handlers\"][fn])) {\n            return this.append(this.decorator(this.behaviors[i][\"handlers\"][fn]));\n          } else {\n            return this.append(this.behaviors[i][\"handlers\"][fn]);\n          }\n        }\n      }\n    }\n\n    /* Returns the fallback function for the given element name.\n       Called by fallback().\n     */\n    getFallback(fn) {\n      for (let i = this.behaviors.length - 1; i >= 0; i--) {\n        if (this.behaviors[i][\"handlers\"][fn]) {\n          if (Array.isArray(this.behaviors[i][\"handlers\"][fn])) {\n            return this.decorator(this.behaviors[i][\"handlers\"][fn]);\n          } else {\n            return this.behaviors[i][\"handlers\"][fn];\n          }\n        }\n      }\n    }\n\n    /* Appends any element returned by the function passed in the first\n     * parameter to the element in the second parameter. If the function\n     * returns nothing, this is a no-op aside from any side effects caused\n     * by the provided function.\n     * called by getHandler() and fallback()\n     */\n    append(fn, elt) {\n      if (elt) {\n        let content = fn.call(this, elt);\n        if (content && !(elt.querySelector(\":scope > \" + content.nodeName))) {\n          if (this.supportsShadowDom) {\n            this._appendShadow(elt, content);\n          } else {\n            this._appendBasic(elt, content);\n          }\n        }\n      } else {\n        let self = this;\n        if (this.supportsShadowDom) {\n          return function() {\n            let content = fn.call(self, this);\n            if (content) {\n              self._appendShadow(this, content);\n            }\n          }\n        } else {\n          return function() {\n            let content = fn.call(self, this);\n            if (content && !(this.querySelector(\":scope > \" + content.nodeName))) {\n              self._appendBasic(this, content);\n            }\n          }\n        }\n      }\n    }\n\n    /* Private method called by append() if the browser supports Shadow DOM\n     */\n    _appendShadow(elt, content) {\n      var shadow = elt.attachShadow({mode:'open'});\n      this.addShadowStyle(shadow);\n      shadow.appendChild(content);\n    }\n\n    /* Private method called by append() if the browser does not support\n     * Shadow DOM\n     */\n    _appendBasic(elt, content) {\n      this.hideContent(elt);\n      elt.appendChild(content);\n    }\n\n    /* Registers the list of elements provided with the browser.\n       Called by makeHTML5(), but can be called independently if, for example,\n       you've created Custom Elements via an XSLT transformation instead.\n     */\n    registerAll(names) {\n      for (let name of names) {\n        let proto = Object.create(HTMLElement.prototype);\n        let fn = this.getHandler(name);\n        if (fn) {\n          proto.createdCallback = fn;\n        }\n        let prefixedName = this.tagName(name);\n        try {\n          document.registerElement(prefixedName, {prototype: proto});\n        } catch (error) {\n          console.log(prefixedName + \" couldn't be registered or is already registered.\");\n          console.log(error);\n        }\n\n      }\n    }\n\n    /* Provides fallback functionality for browsers where Custom Elements\n       are not supported.\n       Like registerAll(), this is called by makeHTML5(), but can be called\n       independently.\n    */\n    fallback(names) {\n      for (let name of names) {\n        let fn = this.getFallback(name);\n        if (fn) {\n          for (let elt of Array.from(this.dom.getElementsByTagName(this.tagName(name)))) {\n            this.append(fn, elt);\n          }\n        }\n      }\n    }\n\n    /**********************\n     * Utility functions  *\n     **********************/\n\n    /* Takes a relative URL and rewrites it based on the base URL of the\n       HTML document */\n    rw(url) {\n      if (!url.match(/^(?:http|mailto|file|\\/|#).*$/)) {\n        return this.base + url;\n      } else {\n        return url;\n      }\n    }\n\n    /* Given a space-separated list of URLs (e.g. in a ref with multiple\n       targets), returns just the first one.\n     */\n    first(urls) {\n      return urls.replace(/ .*$/, \"\");\n    }\n\n    /* Takes an element and serializes it to a string or, if the stripElt\n       parameter is set, serializes the element's content.\n     */\n    serialize(el, stripElt) {\n      let str = \"\";\n      if (!stripElt) {\n        str += \"&lt;\" + el.getAttribute(\"data-teiname\");\n        for (let attr of Array.from(el.attributes)) {\n          if (!attr.name.startsWith(\"data-\") && !([\"id\", \"lang\", \"class\"].includes(attr.name))) {\n            str += \" \" + attr.name + \"=\\\"\" + attr.value + \"\\\"\";\n          }\n          if (attr.name == \"data-xmlns\") {\n            str += \" xmlns=\\\"\" + attr.value +\"\\\"\";\n          }\n        }\n        if (el.childNodes.length > 0) {\n          str += \">\";\n        } else {\n          str += \"/>\";\n        }\n      }\n      for (let node of Array.from(el.childNodes)) {\n        switch (node.nodeType) {\n          case Node.ELEMENT_NODE:\n            str += this.serialize(node);\n            break;\n          case Node.PROCESSING_INSTRUCTION_NODE:\n            str += \"&lt;?\" + node.nodeValue + \"?>\";\n            break;\n          case Node.COMMENT_NODE:\n            str += \"&lt;!--\" + node.nodeValue + \"-->\";\n            break;\n          default:\n            str += node.nodeValue.replace(/</g, \"&lt;\");\n        }\n      }\n      if (!stripElt && el.childNodes.length > 0) {\n        str += \"&lt;/\" + el.getAttribute(\"data-teiname\") + \">\";\n      }\n      return str;\n    }\n\n    /* Wraps the content of the element parameter in a <span class=\"hide\">\n     * with display set to \"none\".\n     */\n    hideContent(elt) {\n      if (elt.childNodes.length > 0) {\n        let content = elt.innerHTML;\n        elt.innerHTML = \"\";\n        let hidden = document.createElement(\"span\");\n        hidden.setAttribute(\"style\", \"display:none;\");\n        hidden.setAttribute(\"class\", \"hide\");\n        hidden.innerHTML = content;\n        elt.appendChild(hidden);\n      }\n    }\n\n    unEscapeEntities(str) {\n      return str.replace(/&gt;/, \">\")\n                .replace(/&quot;/, \"\\\"\")\n                .replace(/&apos;/, \"'\")\n                .replace(/&amp;/, \"&\");\n    }\n\n    savePosition() {\n      localStorage.setItem(\"scroll\",window.scrollY);\n    }\n\n    restorePosition() {\n      if (localStorage.getItem(\"scroll\")) {\n        window.scrollTo(0, localStorage.getItem(\"scroll\"));\n      }\n    }\n\n    // public method\n    fromODD(){\n        // Place holder for ODD-driven setup.\n        // For example:\n        // Create table of elements from ODD\n        //    * default HTML behaviour mapping on/off (eg tei:div to html:div)\n        //    ** phrase level elements behave like span (can I tell this from ODD classes?)\n        //    * optional custom behaviour mapping\n    }\n\n\n\n}\n\n// Make main class available to pre-ES6 browser environments\ntry {\n  if (window) {\n      window.CETEI = CETEI;\n      window.unload = CETEI.savePosition;\n      window.load = CETEI.restorePosition;\n  }\n} catch (e) {\n  // window not defined;\n}\n\n\nexport default CETEI;\n"],"sourceRoot":""}