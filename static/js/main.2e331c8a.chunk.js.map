{"version":3,"sources":["vendor/behaviors.js","components/Search.jsx","components/Quotation.jsx","components/QuotationList.jsx","components/FocusedQuotation.jsx","components/CanonicalQuotation.jsx","components/CanonicalQuotationListItem.jsx","components/CanonicalQuotationList.jsx","components/ManifestationQuotationListItem.jsx","components/ManifestationQuotationList.jsx","components/Paragraph.jsx","components/BarChart.jsx","components/Images.jsx","components/FullText.jsx","components/TodoApp.js","components/Main.jsx","index.js","reducers/searchReducer.jsx","reducers/chartReducer.jsx","reducers/imagesReducer.jsx","reducers/quotationsReducer.jsx","reducers/focusedQuotationReducer.jsx","reducers/canonicalQuotationReducer.jsx","reducers/canonicalQuotationsReducer.jsx","reducers/manifestationQuotationsReducer.jsx","reducers/paragraphReducer.jsx","reducers/sourceParagraphReducer.jsx","reducers/fullTextReducer.jsx","store/configureStore.jsx","vendor/CETEI.js","actions/actions.jsx"],"names":["test","elt","content","Image","src","this","rw","getAttribute","hasAttribute","width","replace","height","dl","document","createElement","Array","from","children","child","nodeType","Node","ELEMENT_NODE","localName","dt","innerHTML","appendChild","dd","table","firstElementChild","head","remove","caption","querySelectorAll","row","tr","attributes","attr","setAttribute","name","value","parentElement","replaceChild","cell","td","pre","serialize","module","exports","connect","require","actions","Search","props","handleSetSearchText","bind","handleOnShowQuotationsWithoutAssociation","handleRunQuery","handleGraph","handleClearFilters","e","dispatch","searchText","search","refs","searchParameters","setSearchParameters","preventDefault","quotationWorkGroup","quotationExpressionType","quotationWork","quotationWorkPart","expressionId","expressionPart","split","expressionLevel","expressionAuthor","expressionAuthorType","quotationAuthor","quotationAuthorType","expressionType","workGroup","quotationAuthorDateAfter","quotationAuthorDateBefore","expressionAuthorDateAfter","expressionAuthorDateBefore","structureElementType","fetchQuotationWorkParts","fetchExpressionParts","fetchSearchWorksList","fetchQuotationWorksList","fetchQuotationAuthors","fetchExpressionAuthors","clearCanonicalQuotation","clearFocusedQuotation","clearManifestationQuotations","clearParagraph","clearSourceParagraph","fetchCanonicalQuotations","fetchQuotations","fetchChart","clearSearchParameters","clearCanonicalQuotations","clearQuotations","fetchWorkGroups","fetchAuthorTypes","toggleGraphDisplay","chart","visible","_this","displayWorkGroupsList","workGroups","map","workGroupShortId","workGroupTitle","onSubmit","id","onClick","Group","Label","Control","as","ref","onChange","type","placeholder","authorTypes","authorType","authorTypeShortId","authorTypeTitle","onBlur","quotationAuthors","author","authorShortId","authorTitle","quotationExpressionTypes","quotationExpressionTypeShortId","quotationExpressionTypeTitle","quotationWorksList","work","expressionShortId","expression","expressionTitle","quotationWorkParts","part","grandparentid","grandparent","undefined","grandparent_title","displayQuotationWorkPartsGrandparent","parentid","parent","parent_title","displayQuotationWorkPartsParent","childShortId","child_title","displayQuotationWorkParts","expressionAuthors","expressionTypes","expressionTypeShortId","expressionTypeTitle","searchWorks","expressionParts","grandparent_level","displayExpressionPartsGrandparent","parent_level","displayExpressionPartsParent","child_level","displayExpressionParts","href","React","Component","state","Quotation","handleOnClick","isInstanceOf","quotation","source","changeQuotationsFocus","newFocusedQuotationObject","createFocusedQuotation","fetchParagraph","fetchSourceParagraph","fetchManifestationQuotations","canonicalQuotationObject","canonicalQuotations","find","createCanonicalQuotation","changeCanonicalQuotationsFocus","topPos","getElementById","offsetTop","$","animate","scrollTop","selfTopPos","alert","clearCanonicalQuotationsFocus","className","title","refText","citation","target","QuotationList","quotations","focusedQuotation","length","quotationClass","includes","refType","classes","key","FocusedQuotation","CanonicalQuotation","canonicalQuotation","displayQuotation","displayQuotationId","CanonicalQuotationListItem","quotationObject","clearQuotationsFocus","CanonicalQuotationList","focused","ManifestationQuotationListItem","isManifestationOf","changeManifestationQuotationsFocus","isManifestationOfObject","ManifestationQuotationList","manifestationQuotations","Paragraph","handleShowImages","handleImageWrapperWraperClick","handleShowFullText","runQueryForSource","addTEICustom","imageSize","imageFocus","setState","prevState","fetchImages","toggleImagesDisplay","images","fetchFullText","toggleFullTextDisplay","fullText","htmlText","cetei","paragraph","sourceParagraph","paragraph_text","makeHTML5","data","quoteid","pop","querySelector","text","childNodes","emptyTextNode","createTextNode","sourceId","manifestation_id","expression_id","transcription_id","manifestations","review","newManifestations","constructor","m","manifestation","manifestationTitle","transcription","focusedManifestation","showFullTextToggle","tresourceid","d3","BarChart","createBarChart","count","prevProps","selectAll","select","filter","d","i","countArray","margin","colors","scale","linear","domain","range","yScale","max","xScale","ordinal","rangeBands","tooltip","append","style","node","enter","rangeBand","on","transition","html","item","event","pageX","pageY","left","top","delay","duration","ease","vGuideScale","vAxis","svg","axis","orient","ticks","vGuide","fill","stroke","hAxis","tickValues","hGuide","Images","handleToggleImage","image","imageUrl","url","showImages","FullText","handleToggleFullText","textInfo","sourceid","console","log","TodoApp","quotationDisplay","size","barGraphDisplay","imagesDisplay","fullTextDisplay","Main","store","configure","subscribe","getState","fetchExpressionTypes","fetchQuotationExpressionTypes","ReactDOM","render","searchReducer","action","listOfWorks","authors","parts","chartReducer","current","imagesReducer","quotationsReducer","quotation_text","toplevel_expression_title","author_title","reverse","updatedState","focusedQuotationReducer","canonicalQuotationReducer","canonicalQuotationsReducer","manifestationQuotationsReducer","paragraphReducer","sourceParagraphReducer","fullTextReducer","redux","thunk","default","initialState","reducer","combineReducers","createStore","compose","applyMiddleware","window","devToolsExtension","f","behaviors","CETEI","base","els","hasStyle","prefixes","location","push","supportsShadowDom","createShadowRoot","attachShadow","TEI_url","callback","perElementFn","startsWith","indexOf","Promise","resolve","reject","client","XMLHttpRequest","open","send","onload","status","response","statusText","onerror","catch","reason","then","TEI","TEI_dom","DOMParser","parseFromString","doc","domToHTML5","registerTEIElements","_fromTEI","dom","convertEl","el","newElement","copy","namespaceURI","tagName","importNode","att","rule","textContent","cloneNode","documentElement","registerElement","registerAll","fallback","done","getElementsByTagName","shadow","shadowCSS","bhvs","root_el","Set","getElementsByTagNameNS","x","add","strings","span","str","result","replacements","re","exec","call","ceteicean","_template","_insert","fn","isArray","decorator","self","_appendShadow","nodeName","_appendBasic","mode","addShadowStyle","hideContent","names","proto","Object","create","HTMLElement","prototype","getHandler","createdCallback","prefixedName","error","getFallback","match","urls","stripElt","PROCESSING_INSTRUCTION_NODE","nodeValue","COMMENT_NODE","hidden","localStorage","setItem","scrollY","getItem","scrollTo","unload","savePosition","load","restorePosition","sparqlEndpoint","startSearchWorksFetch","completeSearchWorksFetch","workGroupSparql","join","expressionAuthorTypeSparql","authorSparql","query","axios","get","params","res","results","bindings","startQuotationAuthorsFetch","completeQuotationAuthorsFetch","quotationAuthorTypeSparql","quotationAuthorDateSparql","quotationAuthorDateAfterSparqlFilter","quotationAuthorDateBeforeSparqlFilter","startExpressionAuthorsFetch","completeExpressionAuthorsFetch","expressionAuthorDateSparql","expressionAuthorDateAfterSparqlFilter","expressionAuthorDateBeforeSparqlFilter","startQuotationWorksListFetch","completeQuotationWorksListFetch","quotationWorkGroupSparql","quotationAuthorSparql","startQuotationWorkPartsFetch","completeQuotationWorkPartsFetch","startExpressionPartsFetch","completeExpressionPartsFetch","currentNode","startQuotationExpressionTypeFetch","completeQuotationExpressionTypeFetch","startExpressionTypeFetch","completeExpressionTypeFetch","startWorkGroupsFetch","completeWorkGroupsFetch","startAuthorTypesFetch","completeAuthorTypesFetch","startChartFetch","completeChartFetch","level","parseInt","expressionWorkGroupSparql","expressionAuthorSparql","expressionAuthorCoreSparql","searchShortId","quotationAuthorCoreSparql","quotationWorkSparql","structureElementTypeSparql","reftitle","startImagesFetch","completeImagesFetch","addQuotations","startQuotationsFetch","completeQuotationsFetch","expressionIdSparql","quotationExpressionTypeSparql","expressionTypeSparql","startCanonicalQuotationsFetch","completeCanonicalQuotationsFetch","quotationInstanceSparql","topLevelExpressionSparql","clearManifestationQuotationsFocus","startManifestationQuotationsFetch","completeManifestationQuotationsFetch","startParagraphFetch","completeParagraphFetch","quotationId","idType","hasXML","res2","hasManifestations","hasDefaultManifestation","hasDefaultTranscription","transcription_item_file","hasDocument","fetchReview","err","startReviewFetch","completeReviewFetch","reviewUrl","startSourceParagraphFetch","completeSourceParagraphFetch","startSourceParagraphReviewFetch","completeSourceParagraphReviewFetch","fetchSourceParagraphReview","clearFullText","startFullTextFetch","completeFullTextFetch","xml_url","expression_item","manifestation_item","transcription_item"],"mappings":"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","file":"static/js/main.2e331c8a.chunk.js","sourcesContent":["var test =  {\n  \"handlers\": {\n    \"eg\": [\"<pre>\",\"</pre>\"],\n    // inserts a link inside <ptr> using the @target; the link in the\n    // @href is piped through the rw (rewrite) function before insertion\n    \"ptr\": [\"<a href=\\\"$rw@target\\\">$@target</a>\"],\n    // wraps the content of the <ref> in an HTML link\n    //\"ref\": [\"<a href=\\\"$rw@target\\\">\",\"</a>\"],\n    \"graphic\": function(elt) {\n      let content = new Image();\n      content.src = this.rw(elt.getAttribute(\"url\"));\n      if (elt.hasAttribute(\"width\")) {\n        content.width = elt.getAttribute(\"width\").replace(/[^.0-9]/g, \"\");\n      }\n      if (elt.hasAttribute(\"height\")) {\n        content.height = elt.getAttribute(\"height\").replace(/[^.0-9]/g, \"\");\n      }\n      return content;\n    },\n    \"list\": function(elt) {\n      if (elt.hasAttribute(\"type\") && elt.getAttribute(\"type\") == \"gloss\") {\n        let dl = document.createElement(\"dl\");\n        for (let child of Array.from(elt.children)) {\n          if (child.nodeType == Node.ELEMENT_NODE) {\n            if (child.localName == \"tei-label\") {\n              let dt = document.createElement(\"dt\");\n              dt.innerHTML = child.innerHTML;\n              dl.appendChild(dt);\n            }\n            if (child.localName == \"tei-item\") {\n              let dd = document.createElement(\"dd\");\n              dd.innerHTML = child.innerHTML;\n              dl.appendChild(dd);\n            }\n          }\n        }\n        return dl;\n      } else {\n        return null;\n      }\n    },\n    \"table\": function(elt) {\n      let table = document.createElement(\"table\");\n      table.innerHTML = elt.innerHTML;\n      if (table.firstElementChild.localName == \"tei-head\") {\n        let head = table.firstElementChild;\n        head.remove();\n        let caption = document.createElement(\"caption\");\n        caption.innerHTML = head.innerHTML;\n        table.appendChild(caption);\n      }\n      for (let row of Array.from(table.querySelectorAll(\"tei-row\"))) {\n        let tr = document.createElement(\"tr\");\n        tr.innerHTML = row.innerHTML;\n        for (let attr of Array.from(row.attributes)) {\n          tr.setAttribute(attr.name, attr.value);\n        }\n        row.parentElement.replaceChild(tr, row);\n      }\n      for (let cell of Array.from(table.querySelectorAll(\"tei-cell\"))) {\n        let td = document.createElement(\"td\");\n        if (cell.hasAttribute(\"cols\")) {\n          td.setAttribute(\"colspan\", cell.getAttribute(\"cols\"));\n        }\n        td.innerHTML = cell.innerHTML;\n        for (let attr of Array.from(cell.attributes)) {\n          td.setAttribute(attr.name, attr.value);\n        }\n        cell.parentElement.replaceChild(td, cell);\n      }\n      return table;\n    },\n    \"egXML\": function(elt) {\n      let pre = document.createElement(\"pre\");\n      pre.innerHTML = this.serialize(elt, true);\n      return pre;\n    }\n  }\n}\nmodule.exports = test;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\nclass Search extends React.Component{\n  constructor(props){\n    super(props)\n    this.handleSetSearchText = this.handleSetSearchText.bind(this)\n    this.handleOnShowQuotationsWithoutAssociation = this.handleOnShowQuotationsWithoutAssociation.bind(this)\n    this.handleRunQuery = this.handleRunQuery.bind(this)\n    this.handleGraph = this.handleGraph.bind(this)\n    this.handleClearFilters = this.handleClearFilters.bind(this)\n  }\n  handleSetSearchText(e){\n    var {dispatch, search} = this.props;\n    var searchText = this.refs.searchText.value;\n    var searchParameters = {\n      ...this.props.search.searchParameters,\n      searchText\n    }\n    dispatch(actions.setSearchParameters(searchParameters));\n  }\n  handleOnShowQuotationsWithoutAssociation(e){\n\t\te.preventDefault();\n\t\tvar {dispatch, search} = this.props;\n    //var searchText = this.refs.searchText.value;\n    var quotationWorkGroup = this.refs.quotationWorkGroup.value;\n    var quotationExpressionType = this.refs.quotationExpressionType.value;\n    var quotationWork = this.refs.quotationWork.value;\n    var quotationWorkPart = this.refs.quotationWorkPart.value\n    var expressionId = this.refs.expressionId.value;\n    var expressionPart = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[0] : this.refs.expressionPart.value\n    var expressionLevel = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[1] : 1 ;\n    var expressionAuthor = this.refs.expressionAuthor.value;\n    var expressionAuthorType = this.refs.expressionAuthorType.value;\n    var quotationAuthor = this.refs.quotationAuthor.value;\n    var quotationAuthorType = this.refs.quotationAuthorType.value;\n    var expressionType = this.refs.expressionType.value;\n    var workGroup = this.refs.workGroup.value;\n    var quotationAuthorDateAfter = this.refs.quotationAuthorDateAfter.value;\n    var quotationAuthorDateBefore = this.refs.quotationAuthorDateBefore.value;\n    var expressionAuthorDateAfter = this.refs.expressionAuthorDateAfter.value;\n    var expressionAuthorDateBefore = this.refs.expressionAuthorDateBefore.value;\n    var structureElementType = this.refs.structureElementType.value;\n\n    //var retainCanonical = this.refs.retainCanonical.checked;\n    var searchParameters = {\n      //searchText,\n      expressionId,\n      expressionPart,\n      expressionLevel,\n      expressionAuthor,\n      quotationAuthor,\n      quotationExpressionType,\n      quotationWork,\n      quotationWorkPart,\n      quotationWorkGroup,\n      quotationAuthorType,\n      expressionAuthorType,\n      expressionType,\n      workGroup,\n      quotationAuthorDateAfter,\n      quotationAuthorDateBefore,\n      expressionAuthorDateAfter,\n      expressionAuthorDateBefore,\n      structureElementType\n\n    }\n\n    dispatch(actions.setSearchParameters(searchParameters));\n    //search filters options update\n    dispatch(actions.fetchQuotationWorkParts());\n    dispatch(actions.fetchExpressionParts());\n    dispatch(actions.fetchSearchWorksList());\n    dispatch(actions.fetchQuotationWorksList());\n    dispatch(actions.fetchQuotationAuthors());\n    dispatch(actions.fetchExpressionAuthors());\n    //fetch expression types, should adjust based on types that would apply for a select work group author or expression\n    // there are no filters for this yet\n    //dispatch(actions.fetchExpressionTypes());\n\n    // actually quotation query Actions\n    // comment these out, if you want to add search button and turn off automatic\n    // on change search <button id=\"runQuery\" onClick={this.handleRunQuery}>Search</button>\n\n      // if (!retainCanonical) dispatch(actions.clearCanonicalQuotation());\n  \t\t// dispatch(actions.clearFocusedQuotation());\n  \t\t// dispatch(actions.clearParagraph());\n  \t\t// if (!retainCanonical) dispatch(actions.fetchCanonicalQuotations());\n  \t\t// dispatch(actions.fetchQuotations());\n  \t\t// dispatch(actions.clearManifestationQuotations());\n      // dispatch(actions.fetchChart());\n    }\n  handleRunQuery(e){\n\t\te.preventDefault();\n    var {dispatch, search} = this.props;\n\t\t// var searchText = this.refs.searchText.value;\n    // var quotationWorkGroup = this.refs.quotationWorkGroup.value;\n    // var quotationWork = this.refs.quotationWork.value;\n    // var quotationWorkPart = this.refs.quotationWorkPart.value\n    // var expressionId = this.refs.expressionId.value;\n    // var expressionPart = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[0] : this.refs.expressionPart.value\n    // var expressionLevel = this.refs.expressionPart.value ? this.refs.expressionPart.value.split(\"/\")[1] : 1 ;\n    // var expressionAuthor = this.refs.expressionAuthor.value;\n    // var expressionAuthorType = this.refs.expressionAuthorType.value;\n    // var quotationAuthor = this.refs.quotationAuthor.value;\n    // var quotationAuthorType = this.refs.quotationAuthorType.value;\n    // var expressionType = this.refs.expressionType.value;\n    // var quotationExpressionType = this.refs.quotationExpressionType.value;\n    // var workGroup = this.refs.workGroup.value;\n\n    //var retainCanonical = this.refs.retainCanonical.checked;\n    var retainCanonical = false;\n    // var searchParameters = {\n    //   searchText,\n    //   expressionId,\n    //   expressionPart,\n    //   expressionLevel,\n    //   expressionAuthor,\n    //   quotationAuthor,\n    //   quotationExpressionType,\n    //   quotationWork,\n    //   quotationWorkPart,\n    //   quotationWorkGroup,\n    //   quotationAuthorType,\n    //   expressionAuthorType,\n    //   expressionType,\n    //   workGroup\n    // }\n\n    if (!retainCanonical) dispatch(actions.clearCanonicalQuotation());\n\t\tdispatch(actions.clearFocusedQuotation());\n    dispatch(actions.clearManifestationQuotations());\n\t\tdispatch(actions.clearParagraph());\n    dispatch(actions.clearSourceParagraph());\n\t\tif (!retainCanonical) dispatch(actions.fetchCanonicalQuotations());\n\t\tdispatch(actions.fetchQuotations());\n\t\tdispatch(actions.fetchChart());\n\t}\n  handleClearFilters(e){\n    e.preventDefault();\n    var {dispatch, search} = this.props;\n    dispatch(actions.clearSearchParameters());\n    dispatch(actions.clearCanonicalQuotations());\n    dispatch(actions.clearQuotations());\n    dispatch(actions.fetchQuotationWorkParts());\n    dispatch(actions.fetchExpressionParts());\n    //dispatch(actions.fetchCanonicalQuotations());\n    dispatch(actions.fetchQuotationAuthors());\n    dispatch(actions.fetchExpressionAuthors());\n    dispatch(actions.fetchSearchWorksList());\n    //store.dispatch(actions.fetchExpressionTypes());\n    dispatch(actions.fetchQuotationWorksList());\n    dispatch(actions.fetchWorkGroups());\n    dispatch(actions.fetchAuthorTypes());\n    //dispatch(actions.fetchManifestationQuotations(searchText, quotationType, expressionId));\n    dispatch(actions.clearManifestationQuotations());\n    dispatch(actions.clearParagraph());\n    dispatch(actions.clearSourceParagraph());\n    this.refs.quotationAuthorDateAfter.value = \"\";\n    this.refs.quotationAuthorDateBefore.value = \"\";\n    this.refs.expressionAuthorDateAfter.value = \"\";\n    this.refs.expressionAuthorDateBefore.value = \"\";\n    this.refs.searchText.value = \"\";\n\n\n\n  }\n  handleGraph(e){\n\t\te.preventDefault();\n\t\tvar {dispatch} = this.props;\n\t\tdispatch(actions.toggleGraphDisplay(this.props.chart.visible));\n\t}\n\trender(){\n    var _this = this;\n    function displaySearchWorksList(){\n      var searchWorks = _this.props.search.searchWorks;\n      return searchWorks.map((work) => {\n        return(\n          <option value={work.expressionShortId}>{work.expressionTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationWorksList(){\n      var quotationWorksList = _this.props.search.quotationWorksList;\n      return quotationWorksList.map((work) => {\n        var id = work.expressionShortId ? work.expressionShortId : work.expression.split(\"http://scta.info/resource/\")[1];\n        return(\n          <option value={id}>{work.expressionTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationWorkPartsParent(){\n      var quotationWorkParts = _this.props.search.quotationWorkParts;\n      if (quotationWorkParts){\n        var part = quotationWorkParts[0];\n        if (part){\n          var parentid = part.parent.split(\"http://scta.info/resource/\")[1];\n          return(\n            <option value={parentid}>Current: {part.parent_title}</option>\n          )\n        }\n      }\n    }\n    function displayQuotationWorkPartsGrandparent(){\n      var quotationWorkParts = _this.props.search.quotationWorkParts;\n      if (quotationWorkParts){\n        var part = quotationWorkParts[0];\n        if (part){\n          var grandparentid = part.grandparent.split(\"http://scta.info/resource/\")[1];\n          if (grandparentid != undefined){\n            return(\n              <option value={grandparentid}>Up: {part.grandparent_title}</option>\n            )\n          }\n        }\n      }\n    }\n    function displayQuotationWorkParts(){\n      var quotationWorkParts = _this.props.search.quotationWorkParts;\n      if (quotationWorkParts){\n        return quotationWorkParts.map((part) => {\n          var id = part.childShortId ? part.childShortId : part.child.split(\"http://scta.info/resource/\")[1];\n          if (part.child){\n            return(\n              <option value={id}>{part.child_title}</option>\n              )\n            }\n          }\n        )\n      }\n    }\n    function displayExpressionPartsParent(){\n      var expressionParts = _this.props.search.expressionParts;\n      if (expressionParts){\n        var part = expressionParts[0];\n        if (part){\n          var parentid = part.parent.split(\"http://scta.info/resource/\")[1];\n          return(\n            <option value={parentid+ \"/\" + part.parent_level}>Current: {part.parent_title}</option>\n          )\n        }\n      }\n    }\n    function displayExpressionPartsGrandparent(){\n      var expressionParts = _this.props.search.expressionParts;\n      if (expressionParts){\n        var part = expressionParts[0];\n        if (part){\n          var grandparentid = part.grandparent.split(\"http://scta.info/resource/\")[1];\n          if (grandparentid != undefined){\n            return(\n              <option value={grandparentid + \"/\" + part.grandparent_level}>Up: {part.grandparent_title}</option>\n            )\n          }\n        }\n      }\n    }\n    function displayExpressionParts(){\n      var expressionParts = _this.props.search.expressionParts;\n      if (expressionParts){\n        return expressionParts.map((part) => {\n          var id = part.childShortId ? part.childShortId : part.child.split(\"http://scta.info/resource/\")[1];\n          if (part.child){\n            return(\n              <option value={id + \"/\" + part.child_level}>{part.child_title}</option>\n              )\n            }\n          }\n        )\n      }\n    }\n\n    function displayQuotationAuthorsList(){\n      var authors = _this.props.search.quotationAuthors;\n      return authors.map((author) => {\n        return(\n          <option value={author.authorShortId}>{author.authorTitle}</option>\n          )\n        }\n      )\n    }\n    function displayExpressionAuthorsList(){\n      var authors = _this.props.search.expressionAuthors;\n      return authors.map((author) => {\n        return(\n          <option value={author.authorShortId}>{author.authorTitle}</option>\n          )\n        }\n      )\n    }\n    function displayExpressionTypeList(){\n      var expressionTypes = _this.props.search.expressionTypes;\n      return expressionTypes.map((type) => {\n        return(\n          <option value={type.expressionTypeShortId}>{type.expressionTypeTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationExpressionTypeList(){\n      var quotationExpressionTypes = _this.props.search.quotationExpressionTypes;\n      return quotationExpressionTypes.map((type) => {\n        return(\n          <option value={type.quotationExpressionTypeShortId}>{type.quotationExpressionTypeTitle}</option>\n          )\n        }\n      )\n    }\n    function displayWorkGroupsList(){\n      var workGroups = _this.props.search.workGroups;\n      return workGroups.map((workGroup) => {\n        return(\n          <option value={workGroup.workGroupShortId}>{workGroup.workGroupTitle}</option>\n          )\n        }\n      )\n    }\n    function displayQuotationAuthorTypes(){\n      const authorTypes = _this.props.search.authorTypes;\n      return authorTypes.map((authorType) => {\n        return(\n          <option value={authorType.authorTypeShortId}>{authorType.authorTypeTitle}</option>\n          )\n        }\n      )\n    }\n    function displayExpressionAuthorTypes(){\n      const authorTypes = _this.props.search.authorTypes;\n      return authorTypes.map((authorType) => {\n        return(\n          <option value={authorType.authorTypeShortId}>{authorType.authorTypeTitle}</option>\n          )\n        }\n      )\n    }\n    return(\n      <div>\n        <Form onSubmit={this.handleOnShowQuotationsWithoutAssociation}>\n          <div>\n\n            <div>\n              {\n                // turn this on, if you want  add search button turn off automatic\n                // on change search\n                <Button id=\"runQuery\" onClick={this.handleRunQuery}>Run Search</Button>\n              }\n\n              <Button id=\"clearFilter\" onClick={this.handleClearFilters}>Clear Filters</Button>\n            </div>\n            {\n              /*<div>\n              <label><input id=\"checkbox1\" ref=\"retainCanonical\" type=\"checkbox\"/>Restrict to Can. Quotation</label>\n            </div>\n            */\n            }\n            <div>\n            <p>Search Parameters</p>\n            <Form.Group>\n              <Form.Label>Quotation/ReferenceType</Form.Label>\n              <Form.Control as=\"select\" ref=\"structureElementType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                <option value=\"structureElementQuote\">Quotations</option>\n                <option value=\"structureElementRef\">References</option>\n                <option value=\"structureElementRefDup\">References (With Quotation Overlap)</option>\n                <option value=\"\">All</option>\n                <option value=\"allDup\">All (with quotation overlap)</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                <Form.Control as=\"input\" type=\"text\" ref=\"searchText\" placeholder=\"search quotation text\" onChange={this.handleSetSearchText}/>\n              </Form.Label>\n            </Form.Group>\n            <hr/>\n            <p>Quotation Parameters</p>\n            <Form.Group>\n            <Form.Label>Quotation Author Type</Form.Label>\n              <Form.Control as=\"select\" ref=\"quotationAuthorType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                <option value=\"\">All</option>\n                {displayQuotationAuthorTypes()}\n              </Form.Control>\n\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Author Birth Date</Form.Label>\n              <br/>\n              After <Form.Control as=\"input\" ref=\"quotationAuthorDateAfter\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1200\"/>\n              <br/>\n              Before <Form.Control as=\"input\" ref=\"quotationAuthorDateBefore\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1400\"/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Author</Form.Label>\n              <Form.Control as=\"select\" ref=\"quotationAuthor\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.quotationAuthor}>\n                <option value=\"\">All</option>\n                {displayQuotationAuthorsList()}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Work Group</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationWorkGroup\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayWorkGroupsList()}\n                </Form.Control>\n\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Text Type</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationExpressionType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayQuotationExpressionTypeList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Text Title</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationWork\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.quotationWork}>\n                  <option value=\"\">All</option>\n                  {displayQuotationWorksList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Quotation Text Part</Form.Label>\n                <Form.Control as=\"select\" ref=\"quotationWorkPart\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.quotationWorkPart}>\n                  <option value=\"\">All</option>\n                  {displayQuotationWorkPartsGrandparent()}\n                  {displayQuotationWorkPartsParent()}\n                  {displayQuotationWorkParts()}\n                </Form.Control>\n            </Form.Group>\n            <hr/>\n            <p>Text Parameters</p>\n            <Form.Group>\n              <Form.Label>Text Author Type</Form.Label>\n              <Form.Control as=\"select\" ref=\"expressionAuthorType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                <option value=\"\">All</option>\n                {displayExpressionAuthorTypes()}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Author Birth Date</Form.Label>\n              <br/>\n              After <Form.Control as=\"input\" ref=\"expressionAuthorDateAfter\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1200\"/>\n              <br/>\n              Before <Form.Control as=\"input\" ref=\"expressionAuthorDateBefore\" onBlur={this.handleOnShowQuotationsWithoutAssociation} placeholder=\"e.g. 1400\"/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Author</Form.Label>\n                <Form.Control as=\"select\" ref=\"expressionAuthor\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.expressionAuthor}>\n                  <option value=\"\">All</option>\n                  {displayExpressionAuthorsList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Work Group</Form.Label>\n                <Form.Control as=\"select\" ref=\"workGroup\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayWorkGroupsList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Type</Form.Label>\n                <Form.Control as=\"select\" ref=\"expressionType\" onChange={this.handleOnShowQuotationsWithoutAssociation}>\n                  <option value=\"\">All</option>\n                  {displayExpressionTypeList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Title</Form.Label>\n                <Form.Control as=\"select\" ref=\"expressionId\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.expressionId}>\n                  <option value=\"\">All</option>\n                  {displaySearchWorksList()}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Text Part</Form.Label>\n              <Form.Control as=\"select\" ref=\"expressionPart\" onChange={this.handleOnShowQuotationsWithoutAssociation} value={_this.props.search.searchParameters.expressionPart + \"/\" + _this.props.search.searchParameters.expressionLevel}>\n                <option value=\"\">All</option>\n                {displayExpressionPartsGrandparent()}\n                {displayExpressionPartsParent()}\n                {displayExpressionParts()}\n              </Form.Control>\n            </Form.Group>\n            </div>\n          </div>\n        </Form>\n        <p><a href=\"#\" onClick={this.handleGraph}>Toggle Historgram</a></p>\n      </div>\n\n\n\t\t)\n\t}\n}\n\nexport default connect(\n  (state) => {\n\t\treturn state\n\t}\n)(Search);\n","import React from 'react'\nimport $ from 'jquery';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n\n\nclass Quotation extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnClick = this.handleOnClick.bind(this)\n\t}\n\thandleOnClick(){\n\t\tvar {isInstanceOf, id, quotation, dispatch, source} = this.props;\n\t\tdispatch(actions.changeQuotationsFocus(this.props.id));\n\t\tvar newFocusedQuotationObject = {\n\t\t\tid,\n\t\t\tquotation,\n\t\t\tsource,\n\t\t\ttype: \"expression\"\n\t\t}\n\t\t// example of why all these different dispatches called here might be a problem\n\t\t//fetchParagraph() requires that the createFocusedQuotation() is set.\n\t\t//seems to be working as is, but i'm not sure if this is the best way\n\t\tdispatch(actions.createFocusedQuotation(newFocusedQuotationObject));\n\t\tdispatch(actions.fetchParagraph());\n\t\tdispatch(actions.fetchSourceParagraph());\n\t\t//dispatch(actions.fetchSourceParagraph());\n\t\t//this fetch also seems to rely on focusedQuotation state being set.\n\t\t// seems to work as is though\n\t\tdispatch(actions.fetchManifestationQuotations());\n\n\n\t\tif (isInstanceOf != null){\n\t\t\t// create canonicalQuotation\n\t\t\tvar canonicalQuotationObject = this.props.canonicalQuotations.find((quotation) => {\n\t\t\t\treturn quotation.id === isInstanceOf\n\n\t\t\t});\n\n\t\t\tif (canonicalQuotationObject != undefined){\n\t\t\t\tdispatch(actions.createCanonicalQuotation(canonicalQuotationObject));\n\t\t\t\t// focus canonicalquotation List Item\n\t\t\t\tdispatch(actions.changeCanonicalQuotationsFocus(isInstanceOf));\n\t\t\t\t// scroll\n\t\t\t\tvar topPos = document.getElementById(isInstanceOf).offsetTop;\n\t\t\t\t$('#CanonicalQuotationList').animate({ scrollTop: topPos-10 }, 400);\n\t\t\t\t//scroll self to top\n\t\t\t\tvar selfTopPos = document.getElementById(id).offsetTop;\n\t\t\t\t$('#quotationsList').animate({ scrollTop: selfTopPos-10 }, 400);\n\t\t\t}\n\t\t\telse{\n\t\t\t\talert(\"this quotation is assigned to a canonicalQuotation, but either there is an error in the id assigned or a canonicalQuotation record still needs to be made\")\n\t\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\t\tdispatch(actions.clearCanonicalQuotation());\n\t\t\t}\n\n\t\t}\n\t\telse{\n\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\tdispatch(actions.clearCanonicalQuotation());\n\n\t\t}\n\n\n\n\t}\n\trender(){\n\n\t\tvar {isInstanceOf, quotation, className, title, author, id, refText, citation} = this.props;\n\n\t\tvar className = isInstanceOf === null ? className + \" isNotInstance\" : className;\n\n\t\treturn(\n\t\t\t<div className=\"quotation-wrapper\">\n\t\t\t\t<p id={id} className={className} onClick={this.handleOnClick}>\n\t\t\t\t{quotation}\n\t\t\t\t</p>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">{author}, {title}</a>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">Original Ref: {refText}</a>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">Modern Citation: {citation}</a>\n\t\t\t</div>\n\n\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(Quotation);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Quotation from \"./Quotation\"\n\nclass QuotationList extends React.Component{\n\trender(){\n    var {quotations, focusedQuotation} = this.props;\n    var renderQuotations = () => {\n\t\t\tif (quotations === \"fetching\"){\n\t\t\t\treturn <p>Fetching...</p>\n\t\t\t}\n\t\t\telse if (quotations.length === 0){\n        return(\n            <p className=\"container__message\">No Quotations</p>\n        );\n      }\n\t\t\telse {\n\t\t\t\treturn quotations.map( (quotation) => {\n\t\t\t\t\t//var quotationClass = quotation.focused ? \"quotation focused\" : \"quotation\"\n\t\t\t\t\tlet quotationClass = \"\"\n\t\t\t\t\tif (focusedQuotation.id){\n\t\t\t\t\t\tif (focusedQuotation.id.includes(quotation.id)){\n\t\t\t\t\t\t\tquotationClass = \"quotation focused\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tquotationClass = \"quotation\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tquotationClass = \"quotation\"\n\t\t\t\t\t}\n\t\t\t\t\tvar refType = quotation.refType\n\t\t\t\t\tvar classes = quotationClass + \" \" + quotation.refType\n\t        return (\n\n\t          <Quotation className={classes} key={quotation.id} {...quotation}/>\n\t        );\n\t      });\n\t\t\t}\n    };\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<p>List of Expression Quotations</p>\n\t\t\t\t{this.props.quotations !== \"fetching\" && <p>Count {quotations.length}</p>}\n\t\t\t\t{renderQuotations()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(QuotationList);\n","import React from 'react'\nvar {connect} = require('react-redux');\n\nclass FocusedQuotation extends React.Component{\n\trender(){\n    var {focusedQuotation} = this.props;\n\t\tvar {quotation} = focusedQuotation\n\t\tvar {id} = focusedQuotation\n\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<p>Focused Quotation: {quotation}</p>\n\t\t\t\t<p><a href={id}>{id}</a></p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(FocusedQuotation);\n","import React from 'react';\nvar {connect} = require('react-redux');\n\nclass CanonicalQuotation extends React.Component{\n\trender(){\n    var {canonicalQuotation} = this.props;\n\t\tvar displayQuotation = canonicalQuotation ? canonicalQuotation.quotation : \"No canonical quotation id assigned\";\n\t\tvar displayQuotationId = canonicalQuotation ? canonicalQuotation.id : \"\";\n\t\tvar citation = canonicalQuotation ? canonicalQuotation.citation : \"\";\n\n\t\t//var {quotation} = canonicalQuotation\n\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<p>Canonical Quotation: {displayQuotation}</p>\n\t\t\t\t<p>{citation}</p>\n\t\t\t\t<p><a href={displayQuotationId}>{displayQuotationId}</a></p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(CanonicalQuotation);\n","import React from 'react'\nimport $ from 'jquery';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n\n\nclass CanonicalQuotationListItem extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnClick = this.handleOnClick.bind(this)\n\t}\n\thandleOnClick(){\n\t\tvar {id, quotation, citation, dispatch} = this.props;\n\t\tdispatch(actions.changeCanonicalQuotationsFocus(this.props.id));\n\t\tvar quotationObject = {\n\t\t\tid,\n\t\t\tquotation,\n\t\t\tcitation\n\t\t}\n\t\tdispatch(actions.createCanonicalQuotation(quotationObject));\n\t\t// doesn't seem like the way to do it, because this dispatch might get of sync.\n\t\t//The second one requires the state to be set by the first\n\t\t// should be done in subscribe, but I'm not sure how yet\n\t\tdispatch(actions.fetchQuotations());\n\t\tdispatch(actions.clearQuotationsFocus());\n\t\tdispatch(actions.clearFocusedQuotation());\n\t\tdispatch(actions.clearManifestationQuotations());\n\t\tdispatch(actions.clearParagraph());\n\n\t\tvar selfTopPos = document.getElementById(id).offsetTop;\n\t\t$('#CanonicalQuotationList').animate({ scrollTop: selfTopPos-10 }, 400);\n\t}\n\trender(){\n    var {id, quotation, className, citation} = this.props\n    return(\n\t\t\t<div className=\"quotation-wrapper\">\n\t\t\t\t<p id={id} className={className} onClick={this.handleOnClick}>{quotation}</p>\n\t\t\t\t<a href={id} target=\"_blank\" className=\"quotation-citation\">{citation}</a>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect()(CanonicalQuotationListItem);\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport CanonicalQuotationListItem from \"./CanonicalQuotationListItem\"\n\nvar actions = require('../actions/actions');\n\nclass CanonicalQuotationList extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnShowQuotationsWithoutAssociation = this.handleOnShowQuotationsWithoutAssociation.bind(this)\n\t}\n\thandleOnShowQuotationsWithoutAssociation(e){\n\t\te.preventDefault();\n\t\tvar {dispatch} = this.props;\n\t\tvar searchText = this.refs.searchText.value;\n\n\t\tdispatch(actions.clearCanonicalQuotation());\n\t\tdispatch(actions.clearFocusedQuotation());\n\t\tdispatch(actions.clearParagraph());\n\t\t//dispatch(actions.clearCanonicalQuotationsFocus());\n\t\t//TODO change app so that searchText does need to be passed as parameters\n\t\t//but is retrieved from the searchState\n\t\tdispatch(actions.fetchCanonicalQuotations(searchText));\n\t\tdispatch(actions.fetchQuotations(searchText));\n\t\t//dispatch(actions.fetchManifestationQuotations(searchText));\n\t}\n\trender(){\n    var {canonicalQuotations} = this.props;\n\t\tvar renderQuotations = () => {\n      if (canonicalQuotations.length === 0){\n        return(\n            <p className=\"container__message\">No Quotations</p>\n        );\n      }\n\n      return canonicalQuotations.map( (quotation) => {\n\t\t\t\tvar quotationClass = quotation.focused ? \"quotation focused\" : \"quotation\"\n\t\t\t\t//var quotationClass = \"quotation\"\n        return (\n\t\t\t\t\t<CanonicalQuotationListItem className={quotationClass} key={quotation.id} {...quotation}/>\n        );\n      });\n    };\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<p>List of Canonical Quotations</p>\n\t\t\t\t<p>Count {canonicalQuotations.length}</p>\n\t\t\t\t{renderQuotations()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(CanonicalQuotationList);\n","import React from 'react'\nimport $ from 'jquery';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n\n\nclass ManifestationQuotationListItem extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.handleOnClick = this.handleOnClick.bind(this)\n\t}\n\thandleOnClick(){\n\t\tvar {isManifestationOf, id, quotation, dispatch} = this.props;\n\n\t\tvar newFocusedQuotationObject = {\n\t\t\tid,\n\t\t\tquotation,\n\t\t\ttype: \"manifestation\"\n\t\t}\n\t\tdispatch(actions.createFocusedQuotation(newFocusedQuotationObject));\n\n\t\tdispatch(actions.changeManifestationQuotationsFocus(id));\n\t\t//dispatch(actions.changeQuotationsFocus(isManifestationOf));\n\t\tdispatch(actions.fetchParagraph());\n\n\t\tvar topPos = document.getElementById(id).offsetTop;\n\t\t$('#ManifestationQuotationsList').animate({ scrollTop: topPos-10 }, 400);\n\n\t\t//synchronize other columns\n\t\tif (isManifestationOf != null){\n\t\t\t// create canonicalQuotation\n\t\t\tvar isManifestationOfObject = this.props.quotations.find((quotation) => {\n\t\t\t\treturn quotation.id === isManifestationOf;\n\n\t\t\t});\n\n\t\t\tif (isManifestationOfObject != undefined){\n\t\t\t\t//dispatch(actions.createCanonicalQuotation(canonicalQuotationObject));\n\t\t\t\t// focus canonicalquotation List Item\n\t\t\t\tdispatch(actions.changeQuotationsFocus(isManifestationOf));\n\t\t\t\t// scroll\n\t\t\t\tvar topPos = document.getElementById(isManifestationOf).offsetTop;\n\t\t\t\t$('#quotationsList').animate({ scrollTop: topPos-10 }, 400);\n\n\t\t\t\t//the following is repeated in quotation App; it should be abstracted and not repeated\n\t\t\t\tvar isInstanceOf = isManifestationOfObject.isInstanceOf\n\t\t\t\tif (isInstanceOf != null){\n\t\t\t\t\t// create canonicalQuotation\n\t\t\t\t\tvar canonicalQuotationObject = this.props.canonicalQuotations.find((quotation) => {\n\t\t\t\t\t\treturn quotation.id === isInstanceOf\n\n\t\t\t\t\t});\n\n\t\t\t\t\tif (canonicalQuotationObject != undefined){\n\t\t\t\t\t\tdispatch(actions.createCanonicalQuotation(canonicalQuotationObject));\n\t\t\t\t\t\t// focus canonicalquotation List Item\n\t\t\t\t\t\tdispatch(actions.changeCanonicalQuotationsFocus(isInstanceOf));\n\t\t\t\t\t\t// scroll\n\t\t\t\t\t\tvar topPos = document.getElementById(isInstanceOf).offsetTop;\n\t\t\t\t\t\t$('#CanonicalQuotationList').animate({ scrollTop: topPos-10 }, 400);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t//alert(\"this quotation is assigned to a canonicalQuotation, but either there is an error in the id assigned or a canonicalQuotation record still needs to be made\")\n\t\t\t\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\t\t\t\tdispatch(actions.clearCanonicalQuotation());\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//alert(\"this quotation is assigned to a canonicalQuotation, but either there is an error in the id assigned or a canonicalQuotation record still needs to be made\")\n\t\t\t\tdispatch(actions.clearQuotationsFocus());\n\t\t\t\tdispatch(actions.clearCanonicalQuotation());\n\t\t\t}\n\n\t\t}\n\t\telse{\n\t\t\tdispatch(actions.clearQuotationsFocus());\n\t\t\tdispatch(actions.clearCanonicalQuotationsFocus());\n\t\t\tdispatch(actions.clearCanonicalQuotation());\n\n\t\t}\n\n\n\t}\n\trender(){\n    var {id, quotation, className} = this.props\n    return(\n\t\t\t<p id={id} className={className} onClick={this.handleOnClick}>{quotation}</p>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(ManifestationQuotationListItem);\n","import React from 'react'\nimport {connect} from 'react-redux';\n\n\nimport ManifestationQuotationListItem from \"./ManifestationQuotationListItem\"\nvar actions = require('../actions/actions');\n\nclass ManifestationQuotationList extends React.Component{\n\trender(){\n    var {manifestationQuotations} = this.props;\n    var renderQuotations = () => {\n      if (manifestationQuotations.length === 0){\n        return(\n            <p className=\"container__message\">No Quotations</p>\n        );\n      }\n\n      return manifestationQuotations.map( (quotation) => {\n\t\t\t\tvar quotationClass = quotation.focused ? \"quotation focused\" : \"quotation\"\n\t\t\t\t//var quotationClass = \"quotation\"\n        return (\n\n          <ManifestationQuotationListItem className={quotationClass} key={quotation.id} {...quotation}/>\n        );\n      });\n    };\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<p>List of Manifestation Quotations</p>\n        <p>Count {manifestationQuotations.length}</p>\n        {renderQuotations()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(ManifestationQuotationList);\n","import React from 'react';\nimport cetei from \"../vendor/CETEI\"\nimport Surface3Wrapper from '@bit/jeffreycwitt.lbp.surface3wrapper';\nimport Citation from '@bit/jeffreycwitt.lbp.citation';\n//import {FaExpand, FaCompress} from 'react-icons/fa';\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n//import CETEI from '../../node_modules/CETEIcean/src/CETEI';\n\n\n\n\n\nclass Paragraph extends React.Component{\n  constructor(props){\n    super(props)\n    this.handleShowImages = this.handleShowImages.bind(this)\n    this.handleImageWrapperWraperClick = this.handleImageWrapperWraperClick.bind(this)\n    this.handleShowFullText = this.handleShowFullText.bind(this)\n    this.runQueryForSource = this.runQueryForSource.bind(this)\n    this.addTEICustom = this.addTEICustom.bind(this)\n    this.handleClearFilters = this.handleClearFilters\n    this.state = {\n      imageSize: \"200\",\n      imageFocus: false\n    }\n  }\n  handleImageWrapperWraperClick(){\n    this.setState((prevState) => {\n      const imageSize = prevState.imageSize === \"200\" ? \"725\" : \"200\"\n      const imageFocus = prevState.imageFocus ? false : true\n      return{\n        imageSize,\n        imageFocus\n      }\n    })\n\n\n  }\n  handleShowImages(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n    dispatch(actions.fetchImages());\n    dispatch(actions.toggleImagesDisplay(this.props.images.visible));\n  }\n  handleShowFullText(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n    if (this.props.type === \"source\"){\n      dispatch(actions.fetchFullText(true));\n    }\n    else{\n      dispatch(actions.fetchFullText(false));\n    }\n    dispatch(actions.toggleImagesDisplay(true));\n    dispatch(actions.toggleFullTextDisplay(this.props.fullText.visible));\n  }\n  componentDidMount(e){\n    var _this = this;\n    this.addTEICustom()\n  }\n  componentDidUpdate(e){\n    var _this = this;\n    this.addTEICustom()\n  }\n  addTEICustom(){\n    var _this = this;\n    const htmlText = new cetei()\n    let paragraph = {}\n    if (this.props.type === \"source\"){\n      paragraph = this.props.sourceParagraph;\n    }\n    else{\n      paragraph = this.props.paragraph;\n    }\n    if (paragraph.paragraph_text){\n      htmlText.makeHTML5(paragraph.paragraph_text, function(data){\n        // get id of quote\n        if (_this.props.focusedQuotation.id){\n          const quoteid = _this.props.focusedQuotation.id.split(\"/\").pop();\n          // find quote in text if there and change class to highlighted\n          if (data.querySelector(\"#\" + quoteid)){\n            data.querySelector(\"#\" + quoteid).setAttribute(\"class\", \"highlighted\");\n          }\n          //load text in div\n          _this.refs.text.replaceChild(data, _this.refs.text.childNodes[0]);\n        }\n\n      });\n    }\n    else{\n      const emptyTextNode = document.createTextNode(\"\");\n      _this.refs.text.replaceChild(emptyTextNode, _this.refs.text.childNodes[0]);\n    }\n  }\n  runQueryForSource(sourceId){\n\n    var {dispatch, search} = this.props;\n\n    var quotationWorkPart = sourceId\n\n\n\n    var searchParameters = {\n      quotationWorkPart\n    }\n    // clear search parameters\n    this.handleClearFilters()\n\t\t// set new search parameters\n    dispatch(actions.setSearchParameters(searchParameters));\n\t\t// (ideally after the handleClearFilters has finished) set search parameters to include quotationWorkPart\n\t\tdispatch(actions.fetchQuotationWorkParts());\n\t\t// fetch quotations based on the source part id\n\t\tdispatch(actions.fetchQuotations());\n\t\t//fetch chart to match new query\n\t\t// TODO: seems like it would be better for chart fetch only when view is requested\n    dispatch(actions.fetchChart());\n\n  }\n\t//TODO: this function is mostly a repeat of the clearFilters function in the Search component\n\t//this seems like an unnecessary redundancy; perhaps this can become a generic action or common utility function\n  handleClearFilters(e){\n\n    var {dispatch, search} = this.props;\n    dispatch(actions.clearSearchParameters());\n    dispatch(actions.clearCanonicalQuotations());\n    dispatch(actions.clearQuotations());\n\t\tdispatch(actions.fetchQuotationWorkParts());\n    dispatch(actions.fetchExpressionParts());\n    //dispatch(actions.fetchCanonicalQuotations());\n    dispatch(actions.fetchQuotationAuthors());\n    dispatch(actions.fetchExpressionAuthors());\n    dispatch(actions.fetchSearchWorksList());\n    //store.dispatch(actions.fetchExpressionTypes());\n    dispatch(actions.fetchQuotationWorksList());\n    dispatch(actions.fetchWorkGroups());\n    dispatch(actions.fetchAuthorTypes());\n    //dispatch(actions.fetchManifestationQuotations(searchText, quotationType, expressionId));\n    dispatch(actions.clearManifestationQuotations());\n\n    // date refs won't clear until place for them in the store has been created\n\t    // this.refs.quotationAuthorDateAfter.value = \"\";\n\t    // this.refs.quotationAuthorDateBefore.value = \"\";\n\t    // this.refs.expressionAuthorDateAfter.value = \"\";\n\t    // this.refs.expressionAuthorDateBefore.value = \"\";\n\t\t\t//this.refs.searchText.value = \"\";\n\n\n\n  }\n  render(){\n    var _this = this;\n    let paragraph = {}\n    if (this.props.type === \"source\"){\n      paragraph = this.props.sourceParagraph;\n    }\n    else{\n      paragraph = this.props.paragraph;\n    }\n    //var {paragraph} = this.props;\n    var {expression_id, manifestation_id, transcription_id, manifestations, paragraph_text, review} = paragraph\n    // var domParser = new DOMParser();\n    // var xsltProcessor = new XSLTProcessor();\n    //\n    // var xsltText = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"  exclude-result-prefixes=\"xs\"  version=\"1.0\" xmlns:tei=\"http://www.tei-c.org/ns/1.0\">  <xsl:output method=\"html\"/>  <xsl:template match=\"/\">    <xsl:apply-templates select=\"//tei:body\"/>  </xsl:template>  <xsl:template match=\"tei:p\">      <xsl:apply-templates/>    </xsl:template>  <xsl:template match=\"tei:quote\">    \"<xsl:apply-templates/>\"  </xsl:template>  <xsl:template match=\"tei:rdg\">      </xsl:template>  <xsl:template match=\"tei:note\">      </xsl:template>  <xsl:template match=\"tei:bibl\">      </xsl:template>  <xsl:template match=\"tei:reg\">      </xsl:template>  <xsl:template match=\"tei:corr\">      </xsl:template>  </xsl:stylesheet>';\n    // var xsltDoc = domParser.parseFromString(xsltText, \"text/xml\");\n    // xsltProcessor.importStylesheet(xsltDoc);\n    //\n    // var xmlText = paragraph_text;\n    // var xmlDoc = domParser.parseFromString(xmlText, \"text/xml\");\n    // var fragment = xsltProcessor.transformToFragment(xmlDoc, document);\n    //\n    // var parent = document.createElement(\"div\");\n    // parent.appendChild(fragment);\n    // var text =  parent.innerHTML;\n\n    function showImageToggle(){\n\n      if (paragraph.expression_id){\n        return(\n          <p>\n            <a onClick={_this.handleShowImages}>Toggle Image</a>\n          </p>\n        )\n      }\n\n    }\n    function showFullTextToggle(){\n\n      if (paragraph.expression_id){\n        return(\n          <p>\n            <a onClick={_this.handleShowFullText}>Show Full Text</a>\n          </p>\n        )\n      }\n\n    }\n\n    function showReview(){\n      if (review){\n        var reviewLink  = \"https://dll-review-registry.scta.info/reviews/\" + review[\"id\"] + \".html\";\n        var ipfsGatewayLink  = \"https://gateway.scta.info/ipfs/\" + review[\"ipfs-hash\"];\n        return(\n          <p>\n            <a href={reviewLink} target=\"_blank\"><img src={review[\"badge-url\"]}/></a> Content extracted from reviewed data source <a href={ipfsGatewayLink} target=\"_blank\">{review[\"ipfs-hash\"]}</a>\n          </p>\n        )\n      }\n    }\n    function showLbpLink(){\n\n    }\n    let newManifestations = []\n    if (manifestations && manifestations.constructor === Array) {\n      newManifestations = manifestations.map((m) => {\n        return {\n          manifestation: m,\n          manifestationTitle: m.split(\"/resource/\")[1],\n          transcription:\"\"\n        }\n      })\n    }\n    else if (typeof manifestations === \"string\")\n    {\n      newManifestations = [{\n        manifestation: manifestations,\n        manifestationTitle: manifestations.split(\"/resource/\")[1],\n        transcription:\"\"\n      }]\n    }\n    return(\n\n\n      <div>\n        <p>Context Paragraph</p>\n        <div id=\"text\" ref=\"text\"><div/></div>\n        {manifestation_id &&\n          <div id=\"imageWrapperWrapper\" className={this.state.imageFocus ? \"iww-big\" : \"iww-small\"}>\n          {this.state.imageFocus ? <hr className=\"toggleBar\" title=\"click to minimize\" onClick={this.handleImageWrapperWraperClick}/> : <hr className=\"toggleBar\" title=\"click to maximize\" onClick={this.handleImageWrapperWraperClick}/>}\n          <Surface3Wrapper\n           manifestations={newManifestations}\n           focusedManifestation={manifestation_id}\n           width={this.state.imageSize}\n         />\n         </div>\n          //showImageToggle()\n        }\n        {showFullTextToggle()}\n        {manifestation_id && <p><a href={\"https://scta.lombardpress.org/#/text?resourceid=\" + manifestation_id} target=\"_blank\">View in LbpWeb</a></p>}\n        {\n        //  showReview()\n        }\n        {(this.props.type === \"source\" && this.props.focusedQuotation.id) && <p className=\"link\" onClick={() => {this.runQueryForSource(this.props.sourceParagraph.expression_id.split(\"/resource/\")[1])}}>Search Quotations of this Passage Only</p>}\n        {\n          // no longer needed since citation component is in place\n          //manifestation_id && <p><a href={manifestation_id}>{manifestation_id}</a></p>\n        }\n        {manifestation_id && <Citation tresourceid={transcription_id}/>}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => {\n    return state\n  }\n)(Paragraph);\n","import React, { Component } from 'react'\nvar {connect} = require('react-redux');\n// import { scaleLinear } from 'd3-scale';\n// import { max } from 'd3-array';\n// import { select } from 'd3-selection';\nvar d3 = require(\"d3\");\nvar actions = require('../actions/actions');\n\n\n\n\n\nclass BarChart extends React.Component {\n   constructor(props){\n      super(props)\n      this.createBarChart = this.createBarChart.bind(this)\n  }\n   componentDidMount() {\n     var count = this.props.chart.count;\n     if (count){\n      this.createBarChart(count)\n      }\n   }\n   componentDidUpdate(prevProps, prevState) {\n     var count = this.props.chart.count;\n     if (count != prevProps.chart.count){\n       this.createBarChart(count)\n     }\n   }\n   componentWillUnmount(){\n     d3.selectAll(\".tooltip\").remove();\n   }\n   createBarChart(count) {\n     var svg = d3.select(\"svg\");\n     svg.selectAll(\"*\").remove();\n     d3.selectAll(\".tooltip\").remove();\n\n\n  //    console.log(\"value in createBarChart\", count)\n  //     const node = this.node\n  //     //const dataMax = max(this.props.data)\n  //     const dataMax = max(count)\n  //     const yScale = scaleLinear()\n  //        .domain([0, dataMax])\n  //        .range([0, this.props.size[1]])\n  //  select(node)\n  //     .selectAll('rect')\n  //     //.data(this.props.data)\n  //     .data(count)\n  //     .enter()\n  //     .append('rect')\n   //\n  //  select(node)\n  //     .selectAll('rect')\n  //     //.data(this.props.data)\n  //     .data(count)\n  //     .exit()\n  //     .remove()\n   //\n  //  select(node)\n  //     .selectAll('rect')\n  //     //.data(this.props.data)\n  //     .data(count)\n  //     .style('fill', '#fe9922')\n  //     .attr('x', (d,i) => i * 25)\n  //     .attr('y', d => this.props.size[1] - yScale(d))\n  //     .attr('height', d => yScale(d))\n  //     .attr('width', 25)\n  //  }\n  var data = count\n\n  //above is working chart\n\n  // below is new attempted chart\n  //data.sort(sort)\n\t\t//this filter is required to make sure count is recognized as integers not strings\n\t\t// see: http://stackoverflow.com/questions/10709950/get-the-real-max-of-an-array-in-d3\n\n\tdata.filter(function(d,i) {\n\t  d.count = +d.count;\n\t});\n\n\tvar countArray = [];\n\tvar titleArray = [];\n\n  countArray = data.map(function(d){\n    return d.count\n  });\n  // for (x in data){\n\t// \tcountArray.push(data[x].count);\n  //\n\t// };\n  titleArray = data.map(function(d){\n    return d.title\n  });\n\t// for (x in data){\n\t// \ttitleArray.push(data[x].title);\n\t// };\n\n\tvar margin = {top: 30, right: 30, bottom: 40, left: 50}\n\tvar height = 500 - margin.top - margin.bottom,\n\twidth = 1200 - margin.left - margin.right;\n\t//barWidth = 50,\n\t//barOffset = 5;\n\n\tvar colors = d3.scale.linear()\n\t\t.domain([0, data.length*.80,  data.length])\n\t\t.range(['#FFB832', '#C61C6F']);\n\n\n\t//var xScale = d3.scale.linear()\n\t\t//.domain([0, d3.max(countArray)])\n\t\t//.range([0, height]);\n\n\t//var yScale = d3.scale.ordinal()\n\t\t//.domain(d3.range(0, data.length))\n\t\t//.rangeBands([0, height])\n\n\tvar yScale = d3.scale.linear()\n\t\t.domain([0, d3.max(countArray)])\n\t\t.range([0, height]);\n\n\tvar xScale = d3.scale.ordinal()\n\t\t.domain(d3.range(0, data.length))\n\t\t.rangeBands([0, width], .5)\n\n\n\n\n\tvar tooltip = d3.select('body').append('div')\n\t\t.attr('class', 'tooltip')\n\t\t.style('position', 'absolute')\n\t\t.style('padding', '0 10px')\n\t\t.style('background', 'white')\n\t\t.style('opacity', 0)\n\n    const node = this.node\n    //var canvas = d3.select(\"div#\" + chart).append(\"svg\")\n    var canvas = d3.select(node)\n      //.attr(\"id\", chart)\n\t\t//.style('background', '#E7E0CB')\n\t\t.attr('width', width + margin.left + margin.right)\n\t\t.attr('height', height + margin.top + margin.bottom)\n\t\t.append(\"g\")\n\t\t.attr('transform', 'translate(' + margin.left + ', ' + margin.top +')')\n\t\t.selectAll(\"rect\")\n\t\t\t.data(data)\n\t\t\t.enter()\n\t\t\t.append(\"g\")\n\t\t\t\t.append(\"rect\")\n\t\t\t\t\t.style('fill', function(d,i){\n\t\t\t\t\t\treturn colors(i);\n\t\t\t\t\t})\n\t\t\t\t\t.attr('height', 0)\n\t\t\t\t\t.attr('y', height)\n\t\t\t\t\t.attr(\"width\", xScale.rangeBand())\n\t\t\t\t\t.attr(\"x\", function (d,i) {return xScale(i);})\n\n\n\t\t\t\t\t.on('mouseover', function(d) {\n\t\t\t\t\t\ttooltip.transition()\n\t\t\t\t\t\t\t.style('opacity', .9)\n\n\t\t\t\t\t\ttooltip.html(\"<a href='\" + d.item + \"'>\" + d.title + \"</a>. Quoted \" + d.count + \" times\")\n\t\t\t\t\t\t\t.style('left', (d3.event.pageX + 0) + 'px')\n\t\t\t\t\t\t\t.style('top', (d3.event.pageY + 0) + 'px')\n\t\t\t\t\t\t\t.style('left', d3.select(node).left + 150 + 'px')\n\t\t\t\t\t\t\t.style('top', d3.select(node).top + 125 + 'px')\n\n\t\t\t\t\t\t\td3.select(this)\n\t\t\t\t\t\t\t\t.style('opacity', .5);\n\t\t\t\t\t})\n\t\t\t\t\t.on('mouseout', function(d) {\n\t\t\t\t\t\t//tooltip.transition().style('opacity', 0)\n\t\t\t\t\t\td3.select(this)\n\t\t\t\t\t\t\t.transition()\n\t\t\t\t\t\t\t.style('opacity', 1);\n\t\t\t\t\t})\n\n\n\t\t//canvas.transition()\n    canvas.transition()\n\t\t\t.attr(\"height\", function (d) {return yScale(d.count)})\n\t\t\t.attr(\"y\", function(d) { return height - yScale(d.count) })\n\t\t\t.delay(function(d,i){return i * 10})\n\t\t\t.duration(1000)\n\t\t\t.ease('elastic')\n\n\t\t\tvar vGuideScale = d3.scale.linear()\n\t\t\t\t.domain([0, d3.max(countArray)])\n\t\t\t\t.range([height, 0])\n\n\t\t\tvar vAxis = d3.svg.axis()\n\t\t\t\t.scale(vGuideScale)\n\t\t\t\t.orient('left')\n\t\t\t\t.ticks(10)\n\t\t\tvar vGuide = d3.select(node).append('g')\n\t\t\t\tvAxis(vGuide)\n\t\t\t\tvGuide.attr('transform', 'translate('+ margin.left+', '+margin.top + ')')\n\t\t\t\tvGuide.selectAll('path')\n\t\t\t\t\t.style({fill: 'none', stroke: \"#000\"})\n\t\t\t\tvGuide.selectAll('line')\n\t\t\t\t\t.style({ stroke: \"#000\"})\n\n\t\t\t//var horizontalGuideScale = d3.scale.ordinal()\n\t\t\t\t//.domain([0, d3.max(countArray)])\n\t\t\t\t//.range([height, 0])\n\n\t\t\tvar hAxis = d3.svg.axis()\n\t\t\t\t.scale(xScale)\n\t\t\t\t.orient('bottom')\n\t\t\t\t.tickValues(xScale.domain().filter(function(d, i){\n\t\t\t\t\treturn i % 50 === 0\n\t\t\t\t}\n\t\t\t\t));\n\n        var hGuide = d3.select(node).append('g')\n\t\t\t\thAxis(hGuide)\n\t\t\t\thGuide.attr('transform', 'translate('+ margin.left+', '+ (height + margin.top) + ')')\n\t\t\t\thGuide.selectAll('path')\n\t\t\t\t\t.style({fill: 'none', stroke: \"#000\"})\n\t\t\t\thGuide.selectAll('line')\n\t\t\t\t\t.style({ stroke: \"#000\"})\n\t\t}\nrender() {\n      return(\n          <svg ref={node => this.node = node}\n          width={500} height={500}>\n          </svg>\n\n\n    )\n   }\n}\n//module.exports = BarChart;\n\n// export default connect(\n// \t(state) => {\n// \t\treturn state\n// \t}\n// )(BarChart);\n\nconst mapStateToProps = state => (\n  {\n    chart: state.chart,\n  }\n);\n\nconst mapDispatchToProps = dispatch => ({\n\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BarChart);\n","import React, { Component } from 'react'\nimport Surface3Wrapper from '@bit/jeffreycwitt.lbp.surface3wrapper';\nimport CitationExplanation from '@bit/jeffreycwitt.lbp.citation-explanation'\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\nvar cetei = require(\"../vendor/CETEI\");\n\n\n\n\n\nclass Images extends React.Component {\n   constructor(props){\n      super(props)\n      this.handleToggleImage = this.handleToggleImage.bind(this)\n\n  }\n   componentDidMount() {\n\n   }\n   componentDidUpdate(count) {\n\n   }\n   handleToggleImage(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n \t\tdispatch(actions.toggleImagesDisplay(this.props.images.visible));\n\n   }\n   render(){\n     var _this = this;\n     function showImages(){\n       var images = _this.props.images;\n       if (images.visible && images.images.length > 0){\n         return images.images.map(function(image){\n           var imageUrl = image.url;\n           return(\n             <img src={imageUrl + \"/full/1000,/0/default.jpg\"}/>\n           )\n           }\n         )\n\n       }\n     }\n     const manifestations = [{\n         manifestation: \"http://scta.info/resource/l1-cpspfs/reims\",\n         manifestationTitle: \"reims\",\n         transcription: \"\"\n       },\n       {\n         manifestation: \"http://scta.info/resource/l1-cpspfs/svict\",\n         manifestationTitle: \"svict\",\n         transcription: \"\"\n       },\n     ]\n     return(\n       <div className=\"images\">\n       <Surface3Wrapper\n        manifestations={manifestations}\n        focusedManifestation={\"http://scta.info/l1-cpspfs/reims\"}\n      />\n         {showImages()}\n       </div>\n     )\n   }\n }\n//module.exports = BarChart;\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(Images);\n","import React, { Component } from 'react'\nimport $ from 'jquery';\nimport cetei from \"../vendor/CETEI\"\nvar {connect} = require('react-redux');\nvar actions = require('../actions/actions');\n\n//var cetei = require(\"../vendor/CETEI\");\n\n\nclass FullText extends React.Component {\n   constructor(props){\n      super(props)\n      this.handleToggleFullText = this.handleToggleFullText.bind(this)\n\n  }\n  componentDidUpdate() {\n    var _this = this;\n\t\tconst htmlText = new cetei()\n\t\tif (this.props.fullText.textInfo.text){\n\t\t\thtmlText.makeHTML5(this.props.fullText.textInfo.text, function(data){\n\t\t\t\t// get id of quote\n\t\t\t\tconst quoteid = _this.props.focusedQuotation.id.split(\"/\").pop();\n        const sourceid = _this.props.focusedQuotation.source.split(\"/\").pop();\n\n\t\t\t\t//load text in div\n\t\t\t\t_this.refs.text.replaceChild(data, _this.refs.text.childNodes[0]);\n        let selfTopPos = \"\"\n        try{\n          // find quote in text if there and change class to highlighted\n  \t\t\t\tif (data.querySelector(\"#\" + quoteid)){\n  \t\t\t\t\tdata.querySelector(\"#\" + quoteid).setAttribute(\"class\", \"highlighted\");\n  \t\t\t\t}\n          selfTopPos = document.getElementById(quoteid).offsetTop;\n        }\n        catch(e){\n          // find quote in text if there and change class to highlighted\n  \t\t\t\tif (data.querySelector(\"#\" + sourceid)){\n  \t\t\t\t\tdata.querySelector(\"#\" + sourceid).setAttribute(\"class\", \"highlighted\");\n  \t\t\t\t}\n          selfTopPos = document.getElementById(sourceid).offsetTop;\n        }\n\n        console.log(\"scroll\", selfTopPos);\n        $(\".full-text-wrapper\").animate({ scrollTop: selfTopPos-100 }, 400);\n\n\t\t\t});\n\t\t}\n\n\n  }\n  handleToggleFullText(e){\n    e.preventDefault();\n    var {dispatch} = this.props;\n \t\tdispatch(actions.toggleFullTextDisplay(this.props.fullText.visible));\n\n  }\n  render(){\n     var _this = this;\n\n     return(\n       <div className=\"full-text-wrapper\">\n         <div id=\"text-tool-bar\">\n           <button id=\"hide-full-text\" onClick={this.handleToggleFullText}>Hide Text</button>\n         </div>\n         <div id=\"text\" ref=\"text\"><div/>\n       </div>\n\n       </div>\n     )\n   }\n }\n\n//module.exports = BarChart;\n\nexport default connect(\n\t(state) => {\n\t\treturn state\n\t}\n)(FullText);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\n\n\n\n\n//var actions = require('actions');\nimport Search from \"./Search\";\nimport QuotationList from \"./QuotationList\";\nimport FocusedQuotation from \"./FocusedQuotation\";\nimport CanonicalQuotation from \"./CanonicalQuotation\";\nimport CanonicalQuotationList from \"./CanonicalQuotationList\";\nimport ManifestationQuotationList from \"./ManifestationQuotationList\";\nimport Paragraph from \"./Paragraph\";\nimport BarChart from \"./BarChart\";\nimport Images from \"./Images\";\nimport FullText from \"./FullText\";\n\nclass TodoApp extends React.Component{\n\trender(){\n\t\tvar _this = this;\n\t\tfunction barGraphDisplay(){\n\t\t\tif (_this.props.chart.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"chart\">\n\t\t\t\t\t\t<BarChart size={[500,500]}/>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\tfunction imagesDisplay(){\n\t\t\tif (_this.props.images.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t<Images/>\n\t\t\t\t\t\t<div className=\"column5\">\n\t\t\t\t\t\t\t<Paragraph/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\tfunction fullTextDisplay(){\n\t\t\tif (_this.props.fullText.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<FullText/>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\tfunction quotationDisplay(){\n\t\t\tif (!_this.props.chart.visible && !_this.props.images.visible && !_this.props.fullText.visible){\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t<div id=\"quotationsList\" className=\"column2\">\n\t\t\t\t\t\t<QuotationList/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"ManifestationQuotationsList\" className=\"column3\">\n\t\t\t\t\t\t<ManifestationQuotationList/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column4\">\n\t\t\t\t\t\t<Paragraph/>\n\t\t\t\t\t\t{/* <FocusedQuotation/>\n\t\t\t\t\t\t<CanonicalQuotation/> */}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column5\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//<CanonicalQuotationList/>\n\t\t\t\t\t\t\t<Paragraph type=\"source\"/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n    }\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<div className='search column1'>\n\t\t\t\t\t\t<Search/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{quotationDisplay()}\n\t\t\t\t\t{barGraphDisplay()}\n\t\t\t\t\t{imagesDisplay()}\n\t\t\t\t\t{fullTextDisplay()}\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n//module.exports = ;\nexport default connect(\n  (state) => {\n\t\treturn state\n\t}\n)(TodoApp);\n","import React from \"react\";\nimport TodoApp from \"./TodoApp\";\n\nvar Main = (props) => {\n\treturn(\n\t\t\t<div>\n        <h3 className='page-title'><em>Ad fontes</em>: A Scholastic Quotation Explorer</h3>\n\t\t\t\t<div className='page-header'>\n\t\t\t\t\t<p>A <a href=\"http://lombardpress.org\">LombardPress</a> Publication</p>\n\t\t\t\t\t<p>Powerd by Data from the <a href=\"https://scta.info\">Scholastic Commentaries and Text Archive</a></p>\n\t\t\t\t\t<p>Designed by <a href=\"http://jeffreycwitt.com\">Jeffrey C. Witt</a></p>\n        </div>\n        <TodoApp/>\n\t\t\t</div>\n\t\t);\n}\n\nexport default Main;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {Provider} from \"react-redux\"\n//import {Route, Router, IndexRoute, hashHistory} from \"react-router\"\n\nimport TodoApp from \"./components/TodoApp\"\n//var BarChart = require(\"BarChart\");\nimport BarChart from './components/BarChart'\nimport Main from './components/Main'\n\nimport {setSearchParameters, fetchQuotationAuthors, fetchExpressionAuthors, fetchSearchWorksList, fetchExpressionTypes, fetchQuotationExpressionTypes, fetchQuotationWorksList, fetchWorkGroups, fetchAuthorTypes, fetchChart} from './actions/actions'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './styles/app.scss';\nvar store = require(\"./store/configureStore\").configure();\n\n\n\nstore.subscribe(() => {\n\tvar state = store.getState();\n\n});\n\n//var state = store.getState();\n\nstore.dispatch(setSearchParameters({}));\n//store.dispatch(actions.fetchCanonicalQuotations());\nstore.dispatch(fetchQuotationAuthors());\nstore.dispatch(fetchExpressionAuthors());\nstore.dispatch(fetchSearchWorksList());\nstore.dispatch(fetchExpressionTypes());\nstore.dispatch(fetchQuotationExpressionTypes());\nstore.dispatch(fetchQuotationWorksList());\nstore.dispatch(fetchWorkGroups());\nstore.dispatch(fetchAuthorTypes());\nstore.dispatch(fetchChart());\n\n\n\n\n// load foundation\n//$(document).foundation();\n\n// App css\n\n//require('style!css!sass!applicationStyles')\n//$(document).foundation();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Main/>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n","export var searchReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'CLEAR_SEARCH_PARAMETERS':\n      return {\n        ...state,\n        searchParameters: []\n        }\n    case 'SET_SEARCH_PARAMETERS':\n      return {\n        ...state,\n        searchParameters: action.searchParameters\n        }\n    case 'START_SEARCH_WORKS_FETCH':\n        return {\n          ...state,\n          searchWorks: []\n        }\n    case 'COMPLETE_SEARCH_WORKS_FETCH':\n      return {\n        ...state,\n        searchWorks: action.listOfWorks\n      }\n    case 'START_QUOTATION_AUTHORS_FETCH':\n        return {\n          ...state,\n          quotationAuthors: []\n        }\n    case 'COMPLETE_QUOTATION_AUTHORS_FETCH':\n      return {\n        ...state,\n        quotationAuthors: action.authors\n      }\n    case 'START_EXPRESSION_AUTHORS_FETCH':\n        return {\n          ...state,\n          expressionAuthors: []\n        }\n    case 'COMPLETE_EXPRESSION_AUTHORS_FETCH':\n      return {\n        ...state,\n        expressionAuthors: action.authors\n      }\n    case 'START_QUOTATION_WORKS_LIST_FETCH':\n        return {\n          ...state,\n          quotationWorksList: []\n        }\n    case 'COMPLETE_QUOTATION_WORKS_LIST_FETCH':\n      return {\n        ...state,\n        quotationWorksList: action.quotationWorksList\n      }\n    case 'START_QUOTATION_WORK_PARTS_FETCH':\n      return {\n        ...state,\n        quotationWorkParts: []\n      }\n    case 'COMPLETE_QUOTATION_WORK_PARTS_FETCH':\n      return {\n        ...state,\n        quotationWorkParts: action.parts\n      }\n    case 'START_EXPRESSION_PARTS_FETCH':\n      return {\n        ...state,\n        expressionParts: []\n      }\n    case 'COMPLETE_EXPRESSION_PARTS_FETCH':\n      return {\n        ...state,\n        expressionParts: action.parts\n      }\n    case 'START_EXPRESSION_TYPE_FETCH':\n        return {\n          ...state,\n          expressionTypes: []\n        }\n    case 'COMPLETE_EXPRESSION_TYPE_FETCH':\n      return {\n        ...state,\n        expressionTypes: action.expressionTypes\n      }\n    case 'START_QUOTATION_EXPRESSION_TYPE_FETCH':\n        return {\n          ...state,\n          quotationExpressionTypes: []\n        }\n    case 'COMPLETE_QUOTATION_EXPRESSION_TYPE_FETCH':\n      return {\n        ...state,\n        quotationExpressionTypes: action.quotationExpressionTypes\n      }\n    case 'START_WORK_GROUPS_FETCH':\n        return {\n          ...state,\n          workGroups: []\n        }\n    case 'COMPLETE_WORK_GROUPS_FETCH':\n      return {\n        ...state,\n        workGroups: action.workGroups\n      }\n    case 'START_AUTHOR_TYPES_FETCH':\n        return {\n          ...state,\n          authorTypes: []\n        }\n    case 'COMPLETE_AUTHOR_TYPES_FETCH':\n      return {\n        ...state,\n        authorTypes: action.authorTypes\n      }\n    default:\n      return state\n  };\n};\n","export var chartReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'TOGGLE_GRAPH_DISPLAY':\n        return {\n          ...state,\n          visible: !action.current\n        }\n    case 'START_CHART_FETCH':\n        return {\n          ...state,\n          count: []\n        }\n    case 'COMPLETE_CHART_FETCH':\n      return {\n        ...state,\n        count: action.count\n      }\n    default:\n      return state\n  };\n};\n","export var imagesReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'TOGGLE_IMAGES_DISPLAY':\n        return {\n          ...state,\n          visible: !action.current\n        }\n    // case 'TOGGLE_GRAPH_DISPLAY':\n    //   return {\n    //     ...state,\n    //     visible: false\n    //   }\n    case 'START_IMAGES_FETCH':\n        return {\n          ...state,\n          images: []\n        }\n    case 'COMPLETE_IMAGES_FETCH':\n      return {\n        ...state,\n        images: action.images\n      }\n    default:\n      return state\n  };\n};\n","export var quotationsReducer = (state = [], action) => {\n  switch (action.type){\n    case 'ADD_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'ADD_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'CLEAR_QUOTATIONS':\n      return [];\n    case 'START_QUOTATIONS_FETCH':\n      //return [];\n      return \"fetching\";\n    case 'COMPLETE_QUOTATIONS_FETCH':\n      return action.quotations.map((quotation)=>{\n        return {\n          id: quotation.quotation.value,\n          quotation: quotation.quotation_text.value,\n          title: quotation.toplevel_expression_title.value,\n          author: quotation.author_title.value,\n          focused: false,\n          isInstanceOf: quotation.isInstanceOf ? quotation.isInstanceOf.value : null,\n          source: quotation.source ? quotation.source.value : null,\n          citation: quotation.citation ? quotation.citation.value : null,\n          refText: quotation.refText ? quotation.refText.value : null,\n          refType: quotation.refType ? quotation.refType.value.split(\"/resource/\").reverse()[0] : null,\n        }\n      });\n    case 'CHANGE_QUOTATIONS_FOCUS':\n      var updatedState = state.map((quotation) =>{\n        if (quotation.id === action.id){\n          return{\n            ...quotation,\n            focused: true\n          }\n        }\n        else{\n          return{\n            ...quotation,\n            focused: false\n          }\n        }\n      });\n      return [\n        ...updatedState,\n      ];\n    default:\n      return state;\n  };\n};\n","export var focusedQuotationReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'CREATE_FOCUSED_QUOTATION':\n      return action.quotation;\n    case 'CLEAR_FOCUSED_QUOTATION':\n      return {}\n    default:\n      return state;\n  };\n};\n","export var canonicalQuotationReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'CREATE_CANONICAL_QUOTATION':\n      return action.quotation;\n    case 'CLEAR_CANONICAL_QUOTATION':\n      return null;\n    default:\n      return state;\n  };\n};\n","export var canonicalQuotationsReducer = (state = [], action) => {\n  switch (action.type){\n    case 'ADD_CANONICAL_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'CLEAR_CANONICAL_QUOTATIONS':\n      return []\n    case 'START_CANONICAL_QUOTATIONS_FETCH':\n      return []\n    case 'COMPLETE_CANONICAL_QUOTATIONS_FETCH':\n\n      return action.canonicalQuotations.map((quotation) => {\n        return {\n          id: quotation.quotation.value,\n          quotation: quotation.quotation_text.value,\n          citation: quotation.citation ? quotation.citation.value : \"citation not yet recorded\",\n          focused: false,\n        }\n      });\n    case 'CLEAR_CANONICAL_QUOTATIONS_FOCUS':\n      return state.map((quotation) => {\n        return{\n          ...quotation,\n          focused: false\n        }\n      });\n    case 'CHANGE_CANONICAL_QUOTATIONS_FOCUS':\n      var updatedState = state.map((quotation) =>{\n        if (quotation.id === action.id){\n          return{\n            ...quotation,\n            focused: true\n          }\n        }\n        else{\n          return{\n            ...quotation,\n            focused: false\n          }\n        }\n      });\n      return [\n        ...updatedState,\n      ];\n    default:\n      return state;\n  };\n};\n","/// manifestation quotations reducer\nexport var manifestationQuotationsReducer = (state = [], action) => {\n  switch (action.type){\n    case 'ADD_MANIFESTATION_QUOTATIONS':\n      return [\n        ...state,\n        ...action.quotations\n      ];\n    case 'CLEAR_MANIFESTATION_QUOTATIONS':\n      return []\n    case 'START_MANIFESTATION_QUOTATIONS_FETCH':\n      return []\n    case 'COMPLETE_MANIFESTATION_QUOTATIONS_FETCH':\n\n      return action.manifestationQuotations.map((quotation) => {\n        return {\n          id: quotation.quotation.value,\n          quotation: quotation.quotation_text.value,\n          focused: false,\n          isManifestationOf: quotation.isManifestationOf ? quotation.isManifestationOf.value : null\n        }\n      });\n    case 'CLEAR_MANIFESTATION_QUOTATIONS_FOCUS':\n      return state.map((quotation) => {\n        return{\n          ...quotation,\n          focused: false\n        }\n      });\n    case 'CHANGE_MANIFESTATION_QUOTATIONS_FOCUS':\n      var updatedState = state.map((quotation) =>{\n        if (quotation.id === action.id){\n          return{\n            ...quotation,\n            focused: true\n          }\n        }\n        else{\n          return{\n            ...quotation,\n            focused: false\n          }\n        }\n      });\n      return [\n        ...updatedState,\n      ];\n    default:\n      return state;\n  };\n};\n","export var paragraphReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'ADD_PARAGRAPH':\n      return action.paragraph;\n    case 'CLEAR_PARAGRAPH':\n      return {}\n    case 'START_PARAGRAPH_FETCH':\n      return {}\n    case 'COMPLETE_PARAGRAPH_FETCH':\n      return action.paragraph\n    case 'START_REVIEW_FETCH':\n      return state\n    case 'COMPLETE_REVIEW_FETCH':\n      return {\n        ...state,\n        review: action.review\n      }\n    default:\n      return state;\n  }\n};\n","export var sourceParagraphReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'ADD_SOURCE_PARAGRAPH':\n      return action.sourceParagraph;\n    case 'CLEAR_SOURCE_PARAGRAPH':\n      return {}\n    case 'START_SOURCE_PARAGRAPH_FETCH':\n      return {}\n    case 'COMPLETE_SOURCE_PARAGRAPH_FETCH':\n      return action.sourceParagraph\n    case 'START_SOURCE_PARAGRAPH_REVIEW_FETCH':\n      return state\n    case 'COMPLETE_SOURCE_PARAGRAPH_REVIEW_FETCH':\n      return {\n        ...state,\n        review: action.review\n      }\n    default:\n      return state;\n  }\n};\n","// paragraphReducer\nexport var fullTextReducer = (state = {}, action) => {\n  switch (action.type){\n    case 'TOGGLE_FULL_TEXT_DISPLAY':\n      return {\n        ...state,\n        visible: !action.current\n      }\n    case 'ADD_FULL_TEXT':\n      return {\n        ...state,\n        textInfo: action.text\n      }\n    case 'CLEAR_FULL_TEXT':\n      return {\n        ...state,\n        textInfo: {}\n      }\n    case 'START_FULL_TEXT_FETCH':\n      return {\n        ...state,\n        textInfo: {}\n      }\n    case 'COMPLETE_FULL_TEXT_FETCH':\n      return {\n        ...state,\n        textInfo: action.text\n      }\n    default:\n      return state;\n  }\n};\n","\n\n\nimport {searchReducer} from '../reducers/searchReducer';\nimport {chartReducer} from \"../reducers/chartReducer\";\nimport {imagesReducer} from \"../reducers/imagesReducer\";\nimport {quotationsReducer} from \"../reducers/quotationsReducer\";\nimport {focusedQuotationReducer} from \"../reducers/focusedQuotationReducer\";\nimport {canonicalQuotationReducer} from \"../reducers/canonicalQuotationReducer\";\nimport {canonicalQuotationsReducer} from \"../reducers/canonicalQuotationsReducer\";\nimport {manifestationQuotationsReducer} from \"../reducers/manifestationQuotationsReducer\";\nimport {paragraphReducer} from \"../reducers/paragraphReducer\";\nimport {sourceParagraphReducer} from \"../reducers/sourceParagraphReducer\";\nimport {fullTextReducer} from \"../reducers/fullTextReducer\";\n\nvar redux = require('redux')\nvar thunk = require('redux-thunk').default;\n\nexport var configure = (initialState = {}) => {\n  var reducer = redux.combineReducers({\n    search: searchReducer,\n    quotations: quotationsReducer,\n    focusedQuotation: focusedQuotationReducer,\n    canonicalQuotation: canonicalQuotationReducer,\n    canonicalQuotations: canonicalQuotationsReducer,\n    manifestationQuotations: manifestationQuotationsReducer,\n    paragraph: paragraphReducer,\n    sourceParagraph: sourceParagraphReducer,\n    chart: chartReducer,\n    images: imagesReducer,\n    fullText: fullTextReducer,\n\n  })\n\n  var store = redux.createStore(reducer, initialState, redux.compose(\n    redux.applyMiddleware(thunk),\n    window.devToolsExtension ?window.devToolsExtension() : f => f\n  ));\n  return store;\n}\n","var behaviors = require('./behaviors');\nclass CETEI {\n\n    constructor(base){\n        this.els = [];\n        this.behaviors = [];\n        this.hasStyle = false;\n        this.prefixes = [];\n        if (base) {\n          this.base = base;\n        } else {\n          try {\n            if (window) {\n              this.base = window.location.href.replace(/\\/[^\\/]*$/, \"/\");\n            }\n          } catch (e) {\n            this.base = \"\";\n          }\n        }\n        this.behaviors.push(behaviors);\n        //this.shadowCSS;\n        this.supportsShadowDom = document.head.createShadowRoot || document.head.attachShadow;\n    }\n\n    // public method\n    /* Returns a Promise that fetches a TEI source document from the URL\n       provided in the first parameter and then calls the makeHTML5 method\n       on the returned document.\n     */\n    getHTML5(TEI_url, callback, perElementFn){\n        if (window.location.href.startsWith(this.base) && (TEI_url.indexOf(\"/\") >= 0)) {\n          this.base = TEI_url.replace(/\\/[^\\/]*$/, \"/\");\n        }\n        // Get TEI from TEI_url and create a promise\n        let promise = new Promise( function (resolve, reject) {\n            let client = new XMLHttpRequest();\n\n            client.open('GET', TEI_url);\n            client.send();\n\n            client.onload = function () {\n              if (this.status >= 200 && this.status < 300) {\n                resolve(this.response);\n              } else {\n                reject(this.statusText);\n              }\n            };\n            client.onerror = function () {\n              reject(this.statusText);\n            };\n        })\n        .catch( function(reason) {\n            // TODO: better error handling?\n            console.log(reason);\n        });\n\n        return promise.then((TEI) => {\n            return this.makeHTML5(TEI, callback, perElementFn);\n        });\n\n    }\n\n    /* Converts the supplied TEI string into HTML5 Custom Elements. If a callback\n       function is supplied, calls it on the result.\n     */\n    makeHTML5(TEI, callback, perElementFn){\n      // TEI is assumed to be a string\n      let TEI_dom = ( new DOMParser() ).parseFromString(TEI, \"text/xml\");\n      var doc = this.domToHTML5(TEI_dom, callback, perElementFn);\n      return this.registerTEIElements(doc, callback);\n\n    }\n\n    /* Converts the supplied TEI DOM into HTML5 Custom Elements. If a callback\n       function is supplied, calls it on the result.\n    */\n    domToHTML5(TEI_dom, callback, perElementFn){\n\n      this._fromTEI(TEI_dom);\n\n      let convertEl = (el) => {\n          // Create new element. TEI elements get prefixed with 'tei-',\n          // TEI example elements with 'teieg-'. All others keep\n          // their namespaces and are copied as-is.\n          let newElement;\n          let copy = false;\n          switch (el.namespaceURI) {\n            case \"http://www.tei-c.org/ns/1.0\":\n              newElement = document.createElement(\"tei-\" + el.tagName);\n              break;\n            case \"http://www.tei-c.org/ns/Examples\":\n              if (el.tagName == \"egXML\") {\n                newElement = document.createElement(\"teieg-\" + el.tagName);\n                break;\n              }\n            case \"http://relaxng.org/ns/structure/1.0\":\n              newElement = document.createElement(\"rng-\" + el.tagName);\n              break;\n            default:\n              newElement = document.importNode(el, false);\n              copy = true;\n          }\n          // Copy attributes; @xmlns, @xml:id, @xml:lang, and\n          // @rendition get special handling.\n          for (let att of Array.from(el.attributes)) {\n              if (!att.name.startsWith(\"xmlns\") || copy) {\n                newElement.setAttribute(att.name, att.value);\n              } else {\n                if (att.name == \"xmlns\")\n                newElement.setAttribute(\"data-xmlns\", att.value); //Strip default namespaces, but hang on to the values\n              }\n              if (att.name == \"xml:id\" && !copy) {\n                newElement.setAttribute(\"id\", att.value);\n              }\n              if (att.name == \"xml:lang\" && !copy) {\n                newElement.setAttribute(\"lang\", att.value);\n              }\n              if (att.name == \"rendition\") {\n                newElement.setAttribute(\"class\", att.value.replace(/#/g, \"\"));\n              }\n          }\n          // Preserve element name so we can use it later\n          newElement.setAttribute(\"data-teiname\", el.localName);\n          // If element is empty, flag it\n          if (el.childNodes.length == 0) {\n            newElement.setAttribute(\"data-empty\", \"\");\n          }\n          // Turn <rendition scheme=\"css\"> elements into HTML styles\n          if (el.localName == \"tagsDecl\") {\n            let style = document.createElement(\"style\");\n            for (let node of Array.from(el.childNodes)){\n              if (node.nodeType == Node.ELEMENT_NODE && node.localName == \"rendition\" && node.getAttribute(\"scheme\") == \"css\") {\n                let rule = \"\";\n                if (node.hasAttribute(\"selector\")) {\n                  //rewrite element names in selectors\n                  rule += node.getAttribute(\"selector\").replace(/([^#, >]+\\w*)/g, \"tei-$1\").replace(/#tei-/g, \"#\") + \"{\\n\";\n                  rule += node.textContent;\n                } else {\n                  rule += \".\" + node.getAttribute(\"xml:id\") + \"{\\n\";\n                  rule += node.textContent;\n                }\n                rule += \"\\n}\\n\";\n                style.appendChild(document.createTextNode(rule));\n              }\n            }\n            if (style.childNodes.length > 0) {\n              newElement.appendChild(style);\n              this.hasStyle = true;\n            }\n          }\n          // Get prefix definitions\n          if (el.localName == \"prefixDef\") {\n            this.prefixes.push(el.getAttribute(\"ident\"));\n            this.prefixes[el.getAttribute(\"ident\")] =\n              {\"matchPattern\": el.getAttribute(\"matchPattern\"),\n              \"replacementPattern\": el.getAttribute(\"replacementPattern\")};\n          }\n          for (let node of Array.from(el.childNodes)){\n              if (node.nodeType == Node.ELEMENT_NODE) {\n                  newElement.appendChild(  convertEl(node)  );\n              }\n              else {\n                  newElement.appendChild(node.cloneNode());\n              }\n          }\n          if (perElementFn) {\n            perElementFn(newElement);\n          }\n          return newElement;\n      }\n\n      return this.dom = convertEl(TEI_dom.documentElement);\n\n\n    }\n\n    registerTEIElements(doc, callback){\n\n      if (doc.registerElement) {\n        this.registerAll(this.els);\n      } else {\n        this.fallback(this.els);\n      }\n      this.done = true;\n      if (callback) {\n          callback(this.dom, this);\n      }\n      else {\n          return this.dom;\n      }\n\n    }\n\n    /* If the TEI document defines CSS styles in its tagsDecl, this method\n       copies them into the wrapper HTML document's head.\n     */\n    addStyle(doc, data) {\n      if (this.hasStyle) {\n        doc.getElementsByTagName(\"head\").item(0).appendChild(data.getElementsByTagName(\"style\").item(0).cloneNode(true));\n      }\n    }\n\n    /* If a URL where CSS for styling Shadow DOM elements lives has been defined,\n       insert it into the Shadow DOM.\n     */\n    addShadowStyle(shadow) {\n      if (this.shadowCSS) {\n        shadow.innerHTML = \"<style>\" + \"@import url(\\\"\" + this.shadowCSS + \"\\\");</style>\" + shadow.innerHTML;\n      }\n    }\n\n    /* Add a user-defined set of behaviors to CETEIcean's processing\n       workflow. Added behaviors will override predefined behaviors with the\n       same name.\n    */\n    addBehaviors(bhvs){\n      if (bhvs[\"handlers\"] || bhvs [\"fallbacks\"]) {\n        this.behaviors.push(bhvs);\n      } else {\n        console.log(\"No handlers or fallback methods found.\");\n      }\n    }\n\n    /* Sets the base URL for the document. Used to rewrite relative links in the\n       XML source (which may be in a completely different location from the HTML\n       wrapper).\n     */\n    setBaseUrl(base) {\n      this.base = base;\n    }\n\n    // \"private\" method\n    _fromTEI(TEI_dom) {\n        let root_el = TEI_dom.documentElement;\n        this.els = new Set( Array.from(root_el.getElementsByTagNameNS(\"http://www.tei-c.org/ns/1.0\", \"*\"), x => x.tagName) );\n        this.els.add(\"egXML\"); // Special case—not in TEI namespace, but needs to be handled\n        this.els.add(root_el.tagName); // Add the root element to the array\n    }\n\n    // private method\n    _insert(elt, strings) {\n      let span = document.createElement(\"span\");\n      if (strings.length > 1) {\n        if (strings[0].includes(\"<\") && strings[1].includes(\"</\")) {\n          span.innerHTML = strings[0] + elt.innerHTML + strings[1];\n        } else {\n          span.innerHTML = \"<span>\" + strings[0] + \"</span>\" + elt.innerHTML + \"<span>\" + strings[1] + \"</span>\";\n        }\n      } else {\n        if (strings[0].includes(\"<\")) {\n          span.innerHTML = strings[0] + elt.innerHTML;\n        } else {\n          span.innerHTML = \"<span>\" + strings[0] + \"</span>\" + elt.innerHTML;\n        }\n      }\n      if (span.children.length > 1) {\n        return span;\n      } else {\n        return span.children[0];\n      }\n    }\n\n    // private method\n    _template(str, elt) {\n      let result = str;\n      if (str.search(/$(\\w*)@(\\w+)/)) {\n        let re = /\\$(\\w*)@(\\w+)/g;\n        let replacements;\n        while (replacements = re.exec(str)) {\n          if (elt.hasAttribute(replacements[2])) {\n            if (replacements[1] && this[replacements[1]]) {\n              result = result.replace(replacements[0], this[replacements[1]].call(this, elt.getAttribute(replacements[2])));\n            } else {\n              result = result.replace(replacements[0], elt.getAttribute(replacements[2]));\n            }\n          }\n        }\n      }\n      return result;\n    }\n\n    tagName(name) {\n      if (name == \"egXML\") {\n        return \"teieg-\" + name;\n      } else {\n        return \"tei-\" + name;\n      }\n    }\n\n    /* Takes a template in the form of an array of 1 or 2 strings and\n       returns a closure around a function that can be called as\n       a createdCallback or applied to an individual element.\n       Called by the getHandler() and getFallback() methods\n    */\n    decorator(strings) {\n      let ceteicean = this;\n      return function (elt) {\n        let copy = [];\n        for (let i = 0; i < strings.length; i++) {\n          copy.push(ceteicean._template(strings[i], elt));\n        }\n        return ceteicean._insert(elt, copy);\n      }\n    }\n\n    /* Returns the handler function for the given element name\n       Called by registerAll().\n     */\n    getHandler(fn) {\n      for (let i = this.behaviors.length - 1; i >= 0; i--) {\n        if (this.behaviors[i][\"handlers\"][fn]) {\n          if (Array.isArray(this.behaviors[i][\"handlers\"][fn])) {\n            return this.append(this.decorator(this.behaviors[i][\"handlers\"][fn]));\n          } else {\n            return this.append(this.behaviors[i][\"handlers\"][fn]);\n          }\n        }\n      }\n    }\n\n    /* Returns the fallback function for the given element name.\n       Called by fallback().\n     */\n    getFallback(fn) {\n      for (let i = this.behaviors.length - 1; i >= 0; i--) {\n        if (this.behaviors[i][\"handlers\"][fn]) {\n          if (Array.isArray(this.behaviors[i][\"handlers\"][fn])) {\n            return this.decorator(this.behaviors[i][\"handlers\"][fn]);\n          } else {\n            return this.behaviors[i][\"handlers\"][fn];\n          }\n        }\n      }\n    }\n\n    /* Appends any element returned by the function passed in the first\n     * parameter to the element in the second parameter. If the function\n     * returns nothing, this is a no-op aside from any side effects caused\n     * by the provided function.\n     * called by getHandler() and fallback()\n     */\n    append(fn, elt) {\n      if (elt) {\n        let content = fn.call(this, elt);\n        if (content && !(elt.querySelector(\":scope > \" + content.nodeName))) {\n          if (this.supportsShadowDom) {\n            this._appendShadow(elt, content);\n          } else {\n            this._appendBasic(elt, content);\n          }\n        }\n      } else {\n        let self = this;\n        if (this.supportsShadowDom) {\n          return function() {\n            let content = fn.call(self, this);\n            if (content) {\n              self._appendShadow(this, content);\n            }\n          }\n        } else {\n          return function() {\n            let content = fn.call(self, this);\n            if (content && !(this.querySelector(\":scope > \" + content.nodeName))) {\n              self._appendBasic(this, content);\n            }\n          }\n        }\n      }\n    }\n\n    /* Private method called by append() if the browser supports Shadow DOM\n     */\n    _appendShadow(elt, content) {\n      var shadow = elt.attachShadow({mode:'open'});\n      this.addShadowStyle(shadow);\n      shadow.appendChild(content);\n    }\n\n    /* Private method called by append() if the browser does not support\n     * Shadow DOM\n     */\n    _appendBasic(elt, content) {\n      this.hideContent(elt);\n      elt.appendChild(content);\n    }\n\n    /* Registers the list of elements provided with the browser.\n       Called by makeHTML5(), but can be called independently if, for example,\n       you've created Custom Elements via an XSLT transformation instead.\n     */\n    registerAll(names) {\n      for (let name of names) {\n        let proto = Object.create(HTMLElement.prototype);\n        let fn = this.getHandler(name);\n        if (fn) {\n          proto.createdCallback = fn;\n        }\n        let prefixedName = this.tagName(name);\n        try {\n          document.registerElement(prefixedName, {prototype: proto});\n        } catch (error) {\n          console.log(prefixedName + \" couldn't be registered or is already registered.\");\n          console.log(error);\n        }\n\n      }\n    }\n\n    /* Provides fallback functionality for browsers where Custom Elements\n       are not supported.\n       Like registerAll(), this is called by makeHTML5(), but can be called\n       independently.\n    */\n    fallback(names) {\n      for (let name of names) {\n        let fn = this.getFallback(name);\n        if (fn) {\n          for (let elt of Array.from(this.dom.getElementsByTagName(this.tagName(name)))) {\n            this.append(fn, elt);\n          }\n        }\n      }\n    }\n\n    /**********************\n     * Utility functions  *\n     **********************/\n\n    /* Takes a relative URL and rewrites it based on the base URL of the\n       HTML document */\n    rw(url) {\n      if (!url.match(/^(?:http|mailto|file|\\/|#).*$/)) {\n        return this.base + url;\n      } else {\n        return url;\n      }\n    }\n\n    /* Given a space-separated list of URLs (e.g. in a ref with multiple\n       targets), returns just the first one.\n     */\n    first(urls) {\n      return urls.replace(/ .*$/, \"\");\n    }\n\n    /* Takes an element and serializes it to a string or, if the stripElt\n       parameter is set, serializes the element's content.\n     */\n    serialize(el, stripElt) {\n      let str = \"\";\n      if (!stripElt) {\n        str += \"&lt;\" + el.getAttribute(\"data-teiname\");\n        for (let attr of Array.from(el.attributes)) {\n          if (!attr.name.startsWith(\"data-\") && !([\"id\", \"lang\", \"class\"].includes(attr.name))) {\n            str += \" \" + attr.name + \"=\\\"\" + attr.value + \"\\\"\";\n          }\n          if (attr.name == \"data-xmlns\") {\n            str += \" xmlns=\\\"\" + attr.value +\"\\\"\";\n          }\n        }\n        if (el.childNodes.length > 0) {\n          str += \">\";\n        } else {\n          str += \"/>\";\n        }\n      }\n      for (let node of Array.from(el.childNodes)) {\n        switch (node.nodeType) {\n          case Node.ELEMENT_NODE:\n            str += this.serialize(node);\n            break;\n          case Node.PROCESSING_INSTRUCTION_NODE:\n            str += \"&lt;?\" + node.nodeValue + \"?>\";\n            break;\n          case Node.COMMENT_NODE:\n            str += \"&lt;!--\" + node.nodeValue + \"-->\";\n            break;\n          default:\n            str += node.nodeValue.replace(/</g, \"&lt;\");\n        }\n      }\n      if (!stripElt && el.childNodes.length > 0) {\n        str += \"&lt;/\" + el.getAttribute(\"data-teiname\") + \">\";\n      }\n      return str;\n    }\n\n    /* Wraps the content of the element parameter in a <span class=\"hide\">\n     * with display set to \"none\".\n     */\n    hideContent(elt) {\n      if (elt.childNodes.length > 0) {\n        let content = elt.innerHTML;\n        elt.innerHTML = \"\";\n        let hidden = document.createElement(\"span\");\n        hidden.setAttribute(\"style\", \"display:none;\");\n        hidden.setAttribute(\"class\", \"hide\");\n        hidden.innerHTML = content;\n        elt.appendChild(hidden);\n      }\n    }\n\n    unEscapeEntities(str) {\n      return str.replace(/&gt;/, \">\")\n                .replace(/&quot;/, \"\\\"\")\n                .replace(/&apos;/, \"'\")\n                .replace(/&amp;/, \"&\");\n    }\n\n    savePosition() {\n      localStorage.setItem(\"scroll\",window.scrollY);\n    }\n\n    restorePosition() {\n      if (localStorage.getItem(\"scroll\")) {\n        window.scrollTo(0, localStorage.getItem(\"scroll\"));\n      }\n    }\n\n    // public method\n    fromODD(){\n        // Place holder for ODD-driven setup.\n        // For example:\n        // Create table of elements from ODD\n        //    * default HTML behaviour mapping on/off (eg tei:div to html:div)\n        //    ** phrase level elements behave like span (can I tell this from ODD classes?)\n        //    * optional custom behaviour mapping\n    }\n\n\n\n}\n\n// Make main class available to pre-ES6 browser environments\ntry {\n  if (window) {\n      window.CETEI = CETEI;\n      window.unload = CETEI.savePosition;\n      window.load = CETEI.restorePosition;\n  }\n} catch (e) {\n  // window not defined;\n}\n\n\nexport default CETEI;\n","import axios from 'axios';\n\nconst sparqlEndpoint = \"https://sparql-docker.scta.info/ds/query\"\n//const sparqlEndpoint = \"http://sparql-staging.scta.info/ds/query\"\n//const sparqlEndpoint = \"http://localhost:3030/ds/query\"\n\n///search actions\n//===============\nexport var clearSearchParameters = () => {\n  return {\n    type: \"CLEAR_SEARCH_PARAMETERS\",\n  };\n};\nexport var setSearchParameters = (searchParameters) => {\n  return {\n    type: \"SET_SEARCH_PARAMETERS\",\n    searchParameters\n  };\n};\nexport var startSearchWorksFetch = () => {\n  return{\n    type: \"START_SEARCH_WORKS_FETCH\"\n  };\n};\nexport var completeSearchWorksFetch = (listOfWorks) => {\n  return{\n    type: \"COMPLETE_SEARCH_WORKS_FETCH\",\n    listOfWorks\n  };\n};\nexport var fetchSearchWorksList = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var workGroupSparql = \"\"\n    if (state.search.searchParameters.workGroup){\n      workGroupSparql = [\n      \"<http://scta.info/resource/\" + state.search.searchParameters.workGroup + \"> <http://scta.info/property/hasExpression> ?expression .\"\n      ].join('');\n    }\n    let expressionAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?expressionAuthor . \",\n      \"?expressionAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n      ].join('');\n    }\n\n    var authorSparql = \"\"\n    if (state.search.searchParameters.expressionAuthor){\n      authorSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n      ].join('');\n    }\n    var query = [\n        \"SELECT ?type ?expression ?expressionShortId ?expressionTitle ?author ?authorTitle ?workGroup ?workGroupTitle\",\n        \"WHERE { \",\n          \"?expression a <http://scta.info/resource/expression> .\",\n          \"?expression a ?type .\",\n          \"?expression <http://scta.info/property/level> '1' . \",\n          expressionAuthorTypeSparql,\n          workGroupSparql,\n          authorSparql,\n          \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n          \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n          \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n          \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n          \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n          \"?expression <http://purl.org/dc/terms/isPartOf> ?workGroup .\",\n          \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n          \"}\",\n        \"ORDER BY ?expressionTitle\"].join('');\n\n  dispatch(startSearchWorksFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var searchWorks = results.map((result) => {\n      var workInfo = {\n          expression: result.expression.value,\n          expressionShortId: result.expressionShortId ? result.expressionShortId.value : \"\",\n          expressionTitle: result.expressionTitle.value,\n          workGroup: result.workGroup ? result.workGroup.value : \"\",\n          workGroupTitle: result.workGroupTitle ? result.workGroupTitle.value : \"\",\n          author: result.author ? result.author.value : \"\",\n          authorTitle: result.author ? result.authorTitle.value : \"\",\n          type: result.type.value\n\n        }\n        return workInfo\n\n      });\n      dispatch(completeSearchWorksFetch(searchWorks));\n    });\n  }\n};\n\n//Begin Quotations Authors Fetch\nexport var startQuotationAuthorsFetch = () => {\n  return{\n    type: \"START_QUOTATION_AUTHORS_FETCH\"\n  };\n};\nexport var completeQuotationAuthorsFetch = (authors) => {\n  return{\n    type: \"COMPLETE_QUOTATION_AUTHORS_FETCH\",\n    authors\n  };\n};\nexport var fetchQuotationAuthors = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    let quotationAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorType){\n\n      quotationAuthorTypeSparql = [\n      \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.quotationAuthorType + \"> .\"\n      ].join('');\n    }\n    // Begin Author date sparql filters\n    let quotationAuthorDateSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?dateOfBirth .\"\n    }\n    let quotationAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter){\n      quotationAuthorDateAfterSparqlFilter = \"FILTER (?dateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n    }\n    let quotationAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateBeforeSparqlFilter = \"FILTER (?dateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n    }\n    // END author date sparql filter\n    var query = [\n        \"SELECT DISTINCT ?author ?authorTitle ?authorShortId \",\n        \"WHERE { \",\n        \"?author a <http://scta.info/resource/person> .\",\n        quotationAuthorTypeSparql,\n        quotationAuthorDateSparql,\n        \"?resource a <http://scta.info/resource/expression> .\",\n        \"?resource <http://scta.info/property/level> '1' .\",\n        \"?resource <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n        \"?author <http://scta.info/property/shortId> ?authorShortId .\",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n        quotationAuthorDateAfterSparqlFilter,\n        quotationAuthorDateBeforeSparqlFilter,\n        \"}\",\n        \"ORDER BY ?authorTitle\"].join('');\n  dispatch(startQuotationAuthorsFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var authors = results.map((result) => {\n        var authorInfo = {\n          author: result.author.value,\n          authorShortId: result.authorShortId.value,\n          authorTitle: result.authorTitle.value,\n        }\n        return authorInfo\n\n      });\n      dispatch(completeQuotationAuthorsFetch(authors));\n    });\n  }\n};\n// End Quotation Authors Fetch\n// Begin Expression Authors Fetch\nexport var startExpressionAuthorsFetch = () => {\n  return{\n    type: \"START_EXPRESSION_AUTHORS_FETCH\"\n  };\n};\nexport var completeExpressionAuthorsFetch = (authors) => {\n  return{\n    type: \"COMPLETE_EXPRESSION_AUTHORS_FETCH\",\n    authors\n  };\n};\nexport var fetchExpressionAuthors = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    let expressionAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorType){\n\n      expressionAuthorTypeSparql = [\n      \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n      ].join('');\n    }\n\n    // Begin expression author filter\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?dateOfBirth .\"\n    }\n\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?dateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateBeforeSparqlFilter = \"FILTER (?dateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    // End expression author filter\n    var query = [\n        \"SELECT DISTINCT ?author ?authorTitle ?authorShortId \",\n        \"WHERE { \",\n        \"?author a <http://scta.info/resource/person> .\",\n        expressionAuthorTypeSparql,\n        expressionAuthorDateSparql,\n        \"?resource a <http://scta.info/resource/expression> .\",\n        \"?resource <http://scta.info/property/level> '1' .\",\n        \"?resource <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n        \"?author <http://scta.info/property/shortId> ?authorShortId .\",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n        expressionAuthorDateAfterSparqlFilter,\n        expressionAuthorDateBeforeSparqlFilter,\n        \"}\",\n        \"ORDER BY ?authorTitle\"].join('');\n\n  dispatch(startExpressionAuthorsFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var authors = results.map((result) => {\n        var authorInfo = {\n          author: result.author.value,\n          authorShortId: result.authorShortId.value,\n          authorTitle: result.authorTitle.value,\n        }\n        return authorInfo\n\n      });\n      dispatch(completeExpressionAuthorsFetch(authors));\n    });\n  }\n};\n// END Expression Authors Actions\nexport var startQuotationWorksListFetch = () => {\n  return{\n    type: \"START_QUOTATION_WORKS_LIST_FETCH\"\n  };\n};\nexport var completeQuotationWorksListFetch = (quotationWorksList) => {\n  return{\n    type: \"COMPLETE_QUOTATION_WORKS_LIST_FETCH\",\n    quotationWorksList\n  };\n};\nexport var fetchQuotationWorksList = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var quotationWorkGroupSparql = \"\"\n    if (state.search.searchParameters.quotationWorkGroup){\n      quotationWorkGroupSparql = [\n      \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?expression .\"\n      ].join('');\n    }\n    var quotationAuthorSparql = \"\"\n    if (state.search.searchParameters.quotationAuthor){\n      quotationAuthorSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.quotationAuthor + \"> .\"\n      ].join('');\n    }\n    let quotationAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.quotationAuthorType){\n      quotationAuthorTypeSparql = [\n      \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n      \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.quotationAuthorType + \"> .\"\n      ].join('');\n    }\n\n    // var query = [\n    //     \"SELECT ?type ?expression ?expressionShortId ?expressionTitle ?author ?authorTitle ?workGroup ?workGroupTitle\",\n    //     \"WHERE { \",\n    //     \"{\",\n    //     \"?expression a <http://scta.info/resource/work> .\",\n    //     \"?expression a ?type .\",\n    //     \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n    //     \"}\",\n    //     \"UNION{\",\n    //     \"?expression a <http://scta.info/resource/expression> .\",\n    //     \"?expression a ?type .\",\n    //     \"?expression <http://scta.info/property/level> '1' . \",\n    //     \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n    //     \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n    //     \"OPTIONAL { \",\n    //     \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n    //     \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n    //     \"}\",\n    //     \"?expression <http://purl.org/dc/terms/isPartOf> ?workGroup .\",\n    //     \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n    //     \"}\",\n    //     \"}\",\n    //     \"ORDER BY ?expressionTitle\"].join('');\n    var query = [\n        \"SELECT ?type ?expression ?expressionShortId ?expressionTitle ?author ?authorTitle ?workGroup ?workGroupTitle\",\n        \"WHERE { \",\n        \"?expression a <http://scta.info/resource/expression> .\",\n        \"?expression a ?type .\",\n        \"?expression <http://scta.info/property/level> '1' . \",\n        quotationAuthorTypeSparql,\n        quotationWorkGroupSparql,\n        quotationAuthorSparql,\n        \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n        \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n        \"OPTIONAL { \",\n        \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n        \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n        \"}\",\n        \"?expression <http://purl.org/dc/terms/isPartOf> ?workGroup .\",\n        \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n        \"}\",\n        \"ORDER BY ?expressionTitle\"].join('');\n\n  dispatch(startQuotationWorksListFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var quotationWorksList = results.map((result) => {\n      var quotationWorkInfo = {\n          expression: result.expression.value,\n          expressionShortId: result.expressionShortId ? result.expressionShortId.value : \"\",\n          expressionTitle: result.expressionTitle.value,\n          workGroup: result.workGroup ? result.workGroup.value : \"\",\n          workGroupTitle: result.workGroupTitle ? result.workGroupTitle.value : \"\",\n          author: result.author ? result.author.value : \"\",\n          authorTitle: result.author ? result.authorTitle.value : \"\",\n          type: result.type.value\n\n        }\n        return quotationWorkInfo\n      });\n      dispatch(completeQuotationWorksListFetch(quotationWorksList));\n    });\n  }\n};\nexport var startQuotationWorkPartsFetch = () => {\n  return{\n    type: \"START_QUOTATION_WORK_PARTS_FETCH\"\n  };\n};\nexport var completeQuotationWorkPartsFetch = (parts) => {\n  return{\n    type: \"COMPLETE_QUOTATION_WORK_PARTS_FETCH\",\n    parts\n  };\n};\nexport var fetchQuotationWorkParts = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var currentNode = \"\";\n    if (state.search.searchParameters.quotationWorkPart != \"\"){\n      currentNode = state.search.searchParameters.quotationWorkPart;\n    }\n    else if (state.search.searchParameters.quotationWork != \"\"){\n      currentNode = state.search.searchParameters.quotationWork;\n    }\n    else{\n      currentNode = \"\";\n    }\n\n    var query = [\n        \"SELECT ?grandparent ?grandparent_title ?parent_title ?parent ?child ?child_title \",\n        \"WHERE { \",\n        \"BIND(<http://scta.info/resource/\" + currentNode + \"> AS ?parent)\",\n        \"OPTIONAL {\",\n          \"?parent <http://purl.org/dc/elements/1.1/title> ?parent_title\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/hasPart> ?child .\",\n        \"?child <http://purl.org/dc/elements/1.1/title> ?child_title .\",\n        //\"MINUS{?child <http://scta.info/property/structureType> <http://scta.info/resource/structureDivision> .}\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/isPartOf> ?grandparent .\",\n        //\"?grandparent <http://scta.info/property/structureType> <http://scta.info/resource/structureCollection> .\",\n        \"?grandparent <http://purl.org/dc/elements/1.1/title> ?grandparent_title\",\n        \"}\",\n        \"}\"\n        ].join('');\n    //conditional here prevents running query if the node is blank\n    //if (currentNode){\n    dispatch(startQuotationWorkPartsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings;\n      var parts = results.map((result) => {\n          var partInfo = {\n            grandparent: result.grandparent ? result.grandparent.value : \"\",\n            grandparent_title: result.grandparent_title ? result.grandparent_title.value : \"\",\n            parent: result.parent.value,\n            parent_title: result.parent_title ? result.parent_title.value : \"\",\n            child: result.child ? result.child.value : \"\",\n            child_title: result.child_title ? result.child_title.value : \"\"\n          }\n          return partInfo\n\n        });\n        dispatch(completeQuotationWorkPartsFetch(parts));\n      });\n    //}\n  }\n};\n\nexport var startExpressionPartsFetch = () => {\n  return{\n    type: \"START_EXPRESSION_PARTS_FETCH\"\n  };\n};\nexport var completeExpressionPartsFetch = (parts) => {\n  return{\n    type: \"COMPLETE_EXPRESSION_PARTS_FETCH\",\n    parts\n  };\n};\nexport var fetchExpressionParts = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var currentNode = \"\";\n    if (state.search.searchParameters.expressionPart != \"\"){\n      currentNode = state.search.searchParameters.expressionPart;\n    }\n    else if (state.search.searchParameters.expressionId != \"\"){\n      currentNode = state.search.searchParameters.expressionId;\n    }\n    else{\n      currentNode = \"\";\n    }\n    var query = [\n        \"SELECT ?grandparent ?grandparent_title ?grandparent_level ?parent_title ?parent ?parent_level ?child ?child_level ?child_title \",\n        \"WHERE { \",\n        \"BIND(<http://scta.info/resource/\" + currentNode + \"> AS ?parent)\",\n        \"OPTIONAL {\",\n          \"?parent <http://purl.org/dc/elements/1.1/title> ?parent_title .\",\n          \"?parent <http://scta.info/property/level> ?parent_level .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/hasPart> ?child .\",\n        \"?child <http://purl.org/dc/elements/1.1/title> ?child_title .\",\n        \"?child <http://scta.info/property/level> ?child_level .\",\n        //\"MINUS{?child <http://scta.info/property/structureType> <http://scta.info/resource/structureDivision> .}\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?parent <http://purl.org/dc/terms/isPartOf> ?grandparent .\",\n        //\"?grandparent <http://scta.info/property/structureType> <http://scta.info/resource/structureCollection> .\",\n        \"?grandparent <http://purl.org/dc/elements/1.1/title> ?grandparent_title .\",\n        \"?grandparent <http://scta.info/property/level> ?grandparent_level .\",\n        \"}\",\n        \"}\"\n        ].join('');\n  //conditional prevents running query if current node is blank\n  if (currentNode){\n    dispatch(startExpressionPartsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings;\n      var parts = results.map((result) => {\n          var partInfo = {\n            grandparent: result.grandparent ? result.grandparent.value : \"\",\n            grandparent_title: result.grandparent_title ? result.grandparent_title.value : \"\",\n            grandparent_level: result.grandparent_level ? result.grandparent_level.value : \"\",\n            parent: result.parent.value,\n            parent_title: result.parent_title ? result.parent_title.value : \"\",\n            parent_level: result.parent_level ? result.parent_level.value : \"\",\n            child: result.child ? result.child.value : \"\",\n            child_title: result.child_title ? result.child_title.value : \"\",\n            child_level: result.child_level ? result.child_level.value : \"\",\n          }\n          return partInfo\n\n        });\n        dispatch(completeExpressionPartsFetch(parts));\n      });\n    }\n  }\n};\n\nexport var startQuotationExpressionTypeFetch = () => {\n  return{\n    type: \"START_QUOTATION_EXPRESSION_TYPE_FETCH\"\n  };\n};\nexport var completeQuotationExpressionTypeFetch = (quotationExpressionTypes) => {\n  return{\n    type: \"COMPLETE_QUOTATION_EXPRESSION_TYPE_FETCH\",\n    quotationExpressionTypes\n  };\n};\nexport var fetchQuotationExpressionTypes = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n        \"SELECT ?quotationExpressionType ?quotationExpressionTypeTitle ?quotationExpressionTypeShortId \",\n        \"WHERE { \",\n        \"?quotationExpressionType a <http://scta.info/resource/expressionType> .\",\n        \"?quotationExpressionType <http://scta.info/property/shortId> ?quotationExpressionTypeShortId .\",\n        \"?quotationExpressionType <http://purl.org/dc/elements/1.1/title> ?quotationExpressionTypeTitle .\",\n        \"}\",\n        \"ORDER BY ?quotationExpressionTypeTitle\"].join('');\n\n  dispatch(startQuotationExpressionTypeFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n\n    var quotationExpressionTypes = results.map((result) => {\n      var quotationExpressionTypeInfo = {\n          quotationExpressionType: result.quotationExpressionType.value,\n          quotationExpressionTypeShortId: result.quotationExpressionTypeShortId.value,\n          quotationExpressionTypeTitle: result.quotationExpressionTypeTitle.value\n        }\n        return quotationExpressionTypeInfo\n      });\n      dispatch(completeQuotationExpressionTypeFetch(quotationExpressionTypes));\n    });\n  }\n};\n\n\nexport var startExpressionTypeFetch = () => {\n  return{\n    type: \"START_EXPRESSION_TYPE_FETCH\"\n  };\n};\nexport var completeExpressionTypeFetch = (expressionTypes) => {\n  return{\n    type: \"COMPLETE_EXPRESSION_TYPE_FETCH\",\n    expressionTypes\n  };\n};\nexport var fetchExpressionTypes = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n        \"SELECT ?expressionType ?expressionTypeTitle ?expressionTypeShortId \",\n        \"WHERE { \",\n        \"?expressionType a <http://scta.info/resource/expressionType> .\",\n        \"?expressionType <http://scta.info/property/shortId> ?expressionTypeShortId .\",\n        \"?expressionType <http://purl.org/dc/elements/1.1/title> ?expressionTypeTitle .\",\n        \"}\",\n        \"ORDER BY ?expressionTypeTitle\"].join('');\n\n  dispatch(startExpressionTypeFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var expressionTypes = results.map((result) => {\n      var expressionTypeInfo = {\n          expressionType: result.expressionType.value,\n          expressionTypeShortId: result.expressionTypeShortId.value,\n          expressionTypeTitle: result.expressionTypeTitle.value\n        }\n        return expressionTypeInfo\n      });\n      dispatch(completeExpressionTypeFetch(expressionTypes));\n    });\n  }\n};\nexport var startWorkGroupsFetch = () => {\n  return{\n    type: \"START_WORK_GROUPS_FETCH\"\n  };\n};\nexport var completeWorkGroupsFetch = (workGroups) => {\n  return{\n    type: \"COMPLETE_WORK_GROUPS_FETCH\",\n    workGroups\n  };\n};\nexport var fetchWorkGroups = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n        \"SELECT ?workGroup ?workGroupShortId ?workGroupTitle \",\n        \"WHERE { \",\n        \"?workGroup a <http://scta.info/resource/workGroup> .\",\n        \"?workGroup <http://scta.info/property/shortId> ?workGroupShortId .\",\n        \"?workGroup <http://purl.org/dc/elements/1.1/title> ?workGroupTitle .\",\n        \"}\",\n        \"ORDER BY ?workGroupTitle\"].join('');\n  dispatch(startWorkGroupsFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var workGroups = results.map((result) => {\n      var workGroupInfo = {\n          workGroup: result.workGroup.value,\n          workGroupShortId: result.workGroupShortId.value,\n          workGroupTitle: result.workGroupTitle.value\n        }\n        return workGroupInfo\n      });\n      dispatch(completeWorkGroupsFetch(workGroups));\n    });\n  }\n};\n// Author types fetch\n\nexport var startAuthorTypesFetch = () => {\n  return{\n    type: \"START_AUTHOR_TYPES_FETCH\"\n  };\n};\nexport var completeAuthorTypesFetch = (authorTypes) => {\n  return{\n    type: \"COMPLETE_AUTHOR_TYPES_FETCH\",\n    authorTypes\n  };\n};\nexport var fetchAuthorTypes = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = [\n      \"SELECT ?authorType ?authorTypeTitle ?authorTypeShortId \",\n      \"WHERE { \",\n      \"?authorType a <http://scta.info/resource/personType> .\",\n      \"?authorType <http://scta.info/property/shortId> ?authorTypeShortId .\",\n      \"?authorType <http://purl.org/dc/elements/1.1/title> ?authorTypeTitle .\",\n      \"}\",\n      \"ORDER BY ?authorTypeTitle\"].join('');\n  dispatch(startAuthorTypesFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var authorTypes = results.map((result) => {\n      var authorTypeInfo = {\n          authorType: result.authorType.value,\n          authorTypeShortId: result.authorTypeShortId.value,\n          authorTypeTitle: result.authorTypeTitle.value\n        }\n        return authorTypeInfo\n      });\n      dispatch(completeAuthorTypesFetch(authorTypes));\n    });\n  }\n};\n\n\n\n///Chart Actions\nexport var toggleGraphDisplay = (current) => {\n  return{\n    type: \"TOGGLE_GRAPH_DISPLAY\",\n    current\n  };\n}\nexport var startChartFetch = () => {\n  return{\n    type: \"START_CHART_FETCH\"\n  };\n};\nexport var completeChartFetch = (count) => {\n  return{\n    type: \"COMPLETE_CHART_FETCH\",\n    count\n  };\n};\nexport var fetchChart = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var level = parseInt(state.search.searchParameters.expressionLevel)\n    if (level === 1){\n      level = 2;\n    }\n    var searchText = state.search.searchParameters.searchText || \"\";\n\n    let expressionWorkGroupSparql = \"\";\n    if (state.search.searchParameters.workGroup){\n      const workGroup = state.search.searchParameters.workGroup;\n      expressionWorkGroupSparql = [\n        \"?ref <http://purl.org/dc/terms/isPartOf> <http://scta.info/resource/\" + workGroup + \">  . \"\n      ].join('');\n    }\n\n// BEGIN Expression author queries\n    let expressionAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n    }\n\n    //Begin expression author date filter for expression author\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?expressionAuthorDateOfBirth .\"\n    }\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n        expressionAuthorDateBeforeSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    //END expression author date filter for expression author\n\n    var expressionAuthorSparql = \"\";\n    if (state.search.searchParameters.expressionAuthor){\n      expressionAuthorSparql = \"?ref <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n    }\n\n    var expressionAuthorCoreSparql = [\n      \"?ref <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n      expressionAuthorTypeSparql,\n      expressionAuthorDateSparql,\n      expressionAuthorSparql\n    ].join('');\n// End expression author queries\n\n//BEGIN Quotation Author Queries\n      var quotationAuthorTypeSparql = \"\";\n      if (state.search.searchParameters.quotationAuthorType){\n        var searchShortId = state.search.searchParameters.quotationAuthorType;\n        quotationAuthorTypeSparql = \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + searchShortId + \">  . \";\n      }\n\n      //Begin quotation author date filter for expression author\n      let quotationAuthorDateSparql = \"\";\n      if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n        quotationAuthorDateSparql =\n            \"?quotationAuthor <http://scta.info/property/dateOfBirth> ?quotationAuthorDateOfBirth .\"\n      }\n      let quotationAuthorDateAfterSparqlFilter = \"\";\n      if (state.search.searchParameters.quotationAuthorDateAfter){\n        quotationAuthorDateAfterSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n      }\n      let quotationAuthorDateBeforeSparqlFilter = \"\";\n      if (state.search.searchParameters.quotationAuthorDateBefore){\n          quotationAuthorDateBeforeSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n      }\n      //END quotation author date filter for expression author\n\n      var quotationAuthorSparql = \"\";\n      if (state.search.searchParameters.quotationAuthor){\n        var searchShortId = (state.search.searchParameters.quotationAuthor);\n        quotationAuthorSparql = \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + searchShortId + \">  . \"\n      }\n      var quotationAuthorCoreSparql = \"\"\n      if (state.search.searchParameters.quotationAuthorDateAfter\n        || state.search.searchParameters.quotationAuthorDateBefore\n        || state.search.searchParameters.quotationAuthor\n        || state.search.searchParameters.quotationAuthorType\n      ){\n        var quotationAuthorCoreSparql = [\n          \"{\",\n            \"?element <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n            \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n            \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n            \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n            quotationAuthorTypeSparql,\n            quotationAuthorDateSparql,\n            quotationAuthorSparql,\n          \"}\",\n          \"UNION\",\n          \"{\",\n            \"?element <http://scta.info/property/source> ?source .\",\n            \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n            \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n            quotationAuthorTypeSparql,\n            quotationAuthorDateSparql,\n            quotationAuthorSparql,\n          \"}\"\n        ].join('');\n      }\n\n// END Quotation Author Queries for Quotations List\n\n\n\n    var quotationWorkGroupSparql = \"\";\n    if (state.search.searchParameters.quotationWorkGroup){\n      var searchShortId = (state.search.searchParameters.quotationWorkGroup);\n      quotationWorkGroupSparql = [\n        \"{\",\n          \"?element <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n          \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"?element <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\"\n      ].join('');\n    }\n\n\n    var quotationWorkSparql = \"\";\n    if (state.search.searchParameters.quotationWork || state.search.searchParameters.quotationWorkPart){\n      var searchShortId = (state.search.searchParameters.quotationWorkPart) ? state.search.searchParameters.quotationWorkPart : state.search.searchParameters.quotationWork\n      quotationWorkSparql = [\n      \"{\",\n        \"?element <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is a member of the search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"\\n#check for quotation whose source is a member the search expression\\n\",\n        \"{\",\n          \"?element <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for quotation whose source is the search expression\\n\",\n        \"{\",\n          \"?element <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\"\n    ].join('');\n    }\n\n    //BEGIN condition for choosing ref quote or combo\n        var structureElementTypeSparql = \"\";\n        if (state.search.searchParameters.structureElementType === \"structureElementRef\"){\n          structureElementTypeSparql = [\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n            \"MINUS\",\n            \"{?element <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n            ].join('');\n        }\n        else if (state.search.searchParameters.structureElementType === \"structureElementRefDup\"){\n          structureElementTypeSparql = \"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .\"\n        }\n        else if (state.search.searchParameters.structureElementType === \"structureElementQuote\"){\n          structureElementTypeSparql = \"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\"\n        }\n        else if (state.search.searchParameters.structureElementType === \"allDup\"){\n          structureElementTypeSparql = [\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n            \"UNION\",\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> . }\"\n          ].join('');\n        }\n        else{\n          structureElementTypeSparql = [\n            \"{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n            \"UNION\",\n            \"{{?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n            \"MINUS\",\n            \"{?element <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n\n            \"}\"\n          ].join('');\n        }\n    //END condition for choosing ref quote or combo\n\n\n\n    //var expressionId = state.search.searchParameters.expressionPart ? state.search.searchParameters.expressionPart : state.search.searchParameters.expressionId\n    if (state.search.searchParameters.expressionId){\n      // query for quote frequency within a given expression\n      var expressionId = state.search.searchParameters.expressionId\n      var query = [\n        \"SELECT ?ref ?reftitle ?totalOrderNumber (count(?element) as ?count) \",\n        \"WHERE {\",\n        \"?ref a <http://scta.info/resource/expression> .\",\n        \"?ref <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + expressionId + \"> .\",\n        \"?ref <http://scta.info/property/level> '\" + level + \"' .\",\n        \"?ref <http://purl.org/dc/elements/1.1/title> ?reftitle .\",\n        \"OPTIONAL {\",\n        \"?ref <http://scta.info/property/totalOrderNumber> ?totalOrderNumber .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?element <http://scta.info/property/isMemberOf> ?ref .\",\n        //\"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\",\n        structureElementTypeSparql,\n        \"?element <http://scta.info/property/structureElementText> ?quotation_text .\",\n        quotationAuthorCoreSparql,\n        quotationWorkGroupSparql,\n        quotationWorkSparql,\n        \"}\",\n        quotationAuthorDateBeforeSparqlFilter,\n        quotationAuthorDateAfterSparqlFilter,\n        \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n        \"}\",\n        \"group by ?ref ?reftitle ?totalOrderNumber \",\n        \"ORDER BY ?totalOrderNumber \"\n      ].join('');\n    }\n    else {\n      // query for quote frequency across top level expressions\n      var query = [\n        \"SELECT ?ref ?reftitle ?totalOrderNumber (count(?element) as ?count) \",\n        \"WHERE {\",\n        \"?ref a <http://scta.info/resource/expression> .\",\n        \"?ref <http://scta.info/property/level> '1' .\",\n        expressionWorkGroupSparql,\n        expressionAuthorCoreSparql,\n        \"?ref <http://purl.org/dc/elements/1.1/title> ?reftitle .\",\n        \"OPTIONAL {\",\n        \"?ref <http://scta.info/property/totalOrderNumber> ?totalOrderNumber .\",\n        \"}\",\n        \"OPTIONAL {\",\n        \"?element <http://scta.info/property/isMemberOf> ?ref .\",\n        //\"?element <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\",\n        structureElementTypeSparql,\n        \"?element <http://scta.info/property/structureElementText> ?quotation_text .\",\n        quotationAuthorCoreSparql,\n        quotationWorkGroupSparql,\n        quotationWorkSparql,\n        \"}\",\n        quotationAuthorDateBeforeSparqlFilter,\n        quotationAuthorDateAfterSparqlFilter,\n        expressionAuthorDateBeforeSparqlFilter,\n        expressionAuthorDateAfterSparqlFilter,\n        \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n        \"}\",\n        \"group by ?ref ?reftitle ?totalOrderNumber \",\n        \"ORDER BY ?totalOrderNumber \"\n      ].join('');\n    }\n\n  dispatch(startChartFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var count = results.map((result) => {\n        return {\n          \"item\": result.ref ? result.ref.value : \"\",\n          \"title\": result.reftitle ? result.reftitle.value : \"\",\n          \"count\": result.count ? result.count.value : \"\"\n        }\n      });\n      dispatch(completeChartFetch(count));\n    });\n  }\n};\n\n///Chart Actions\nexport var toggleImagesDisplay = (current) => {\n  return{\n    type: \"TOGGLE_IMAGES_DISPLAY\",\n    current\n  };\n}\nexport var startImagesFetch = () => {\n  return{\n    type: \"START_IMAGES_FETCH\"\n  };\n};\nexport var completeImagesFetch = (images) => {\n  return{\n    type: \"COMPLETE_IMAGES_FETCH\",\n    images\n  };\n};\nexport var fetchImages = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var manifestation_id = state.paragraph.manifestation_id\n    var query = [\n      \"SELECT ?url \",\n      \"WHERE { \",\n      \"<\" + manifestation_id + \"> <http://scta.info/property/isOnSurface> ?surface .\",\n      \"?surface <http://scta.info/property/hasISurface> ?isurface .\",\n      \"?isurface <http://scta.info/property/hasCanvas> ?canvas .\",\n      \"?canvas <http://iiif.io/api/presentation/2#hasImageAnnotations> ?anno .\",\n      \"?canvas <http://iiif.io/api/presentation/2#hasImageAnnotations> ?anno .\",\n      \"?anno <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> ?imgres .\",\n      \"?imgres <http://www.w3.org/ns/oa#hasBody> ?body .\",\n      \"?body <http://rdfs.org/sioc/services#has_service> ?url .\",\n      \"}\"\n    ].join('');\n\n  dispatch(startImagesFetch());\n  axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n    var results = res.data.results.bindings;\n    var images = results.map((result) => {\n        return {\n          \"url\": result.url.value,\n        }\n      });\n      dispatch(completeImagesFetch(images));\n    });\n  }\n};\n\n\n// Quotation Actions\n// ==================\nexport var addQuotations = (quotations) => {\n  return{\n    type: \"ADD_QUOTATIONS\",\n    quotations\n  };\n};\nexport var clearQuotations = () => {\n  return{\n    type: \"CLEAR_QUOTATIONS\"\n  };\n};\nexport var startQuotationsFetch = () => {\n  return{\n    type: \"START_QUOTATIONS_FETCH\"\n  };\n};\nexport var clearQuotationsFocus = () => {\n  return{\n    type: \"CLEAR_QUOTATIONS_FOCUS\"\n  };\n};\nexport var completeQuotationsFetch = (quotations) => {\n  return{\n    type: \"COMPLETE_QUOTATIONS_FETCH\",\n    quotations\n  };\n};\nexport var fetchQuotations = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var searchText = state.search.searchParameters.searchText || \"\";\n    var expressionIdSparql = \"\";\n    if (state.search.searchParameters.expressionId || state.search.searchParameters.expressionPart){\n      var searchShortId = (state.search.searchParameters.expressionPart) ? state.search.searchParameters.expressionPart : state.search.searchParameters.expressionId\n      var expressionIdSparql = [\n      \"?quotation <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\"\n      ].join('');\n\n    }\n// BEGIN Expression author queries\n    let expressionAuthorTypeSparql = \"\"\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = \"?author <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \"> .\"\n    }\n\n    //Begin expression author date filter for expression author\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql = \"?author <http://scta.info/property/dateOfBirth> ?dateOfBirth .\"\n    }\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?dateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n        expressionAuthorDateBeforeSparqlFilter = \"FILTER (?dateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    //END expression author date filter for expression author\n\n    var authorSparql = \"\";\n    if (state.search.searchParameters.expressionAuthor){\n      authorSparql = \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n    }\n\n    var expressionAuthorCoreSparql = [\n      \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?author . \",\n      expressionAuthorTypeSparql,\n      expressionAuthorDateSparql,\n      authorSparql,\n      \"?author <http://purl.org/dc/elements/1.1/title> ?author_title . \"\n      ].join('');\n// End expression author queries\n\n\n//BEGIN Quotation Author Queries\n    var quotationAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorType){\n      var searchShortId = state.search.searchParameters.quotationAuthorType;\n      quotationAuthorTypeSparql = \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + searchShortId + \">  . \";\n    }\n\n    //Begin quotation author date filter for expression author\n    let quotationAuthorDateSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateSparql =\n          \"?quotationAuthor <http://scta.info/property/dateOfBirth> ?quotationAuthorDateOfBirth .\"\n    }\n    let quotationAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter){\n      quotationAuthorDateAfterSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n    }\n    let quotationAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateBefore){\n        quotationAuthorDateBeforeSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n    }\n    //END quotation author date filter for expression author\n\n    var quotationAuthorSparql = \"\";\n    if (state.search.searchParameters.quotationAuthor){\n      var searchShortId = (state.search.searchParameters.quotationAuthor);\n      quotationAuthorSparql = \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + searchShortId + \">  . \"\n    }\n    var quotationAuthorCoreSparql = \"\"\n    if (state.search.searchParameters.quotationAuthorDateAfter\n      || state.search.searchParameters.quotationAuthorDateBefore\n      || state.search.searchParameters.quotationAuthor\n      || state.search.searchParameters.quotationAuthorType\n    ){\n    var quotationAuthorCoreSparql = [\n      \"{\",\n        \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n        \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n        quotationAuthorTypeSparql,\n        quotationAuthorDateSparql,\n        quotationAuthorSparql,\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"?quotation <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n        \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor . \",\n        quotationAuthorTypeSparql,\n        quotationAuthorDateSparql,\n        quotationAuthorSparql,\n      \"}\"\n    ].join('');\n    }\n\n// END Quotation Author Queries for Quotations List\n\n    var quotationWorkGroupSparql = \"\";\n    if (state.search.searchParameters.quotationWorkGroup){\n      var searchShortId = (state.search.searchParameters.quotationWorkGroup);\n      quotationWorkGroupSparql = [\n        \"{\",\n          \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n          \"?isInstanceOf <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n          \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n        \"}\"\n      ].join('');\n    }\n\n\n    //NEW QUERY\n    var quotationWorkSparql = \"\";\n    if (state.search.searchParameters.quotationWork || state.search.searchParameters.quotationWorkPart){\n      var searchShortId = (state.search.searchParameters.quotationWorkPart) ? state.search.searchParameters.quotationWorkPart : state.search.searchParameters.quotationWork\n      quotationWorkSparql = [\n      \"{\",\n        \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is a member of the search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is search expression\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"\\n#check for quotation whose source is a member the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for quotation whose source is the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n        \"}\",\n      \"}\"\n    ].join('');\n    }\n\n    //NEW QUERY\n    let quotationExpressionTypeSparql = \"\";\n    if (state.search.searchParameters.quotationExpressionType){\n      const quotationExpressionTypeShortId = state.search.searchParameters.quotationExpressionType;\n      quotationExpressionTypeSparql = [\n      \"{\",\n        \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is a member an expression with the designated type\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> ?memberOf .\",\n          \"?memberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"{\",\n          \"\\n#check for quotation whose canonical source is has designated type\\n\",\n          \"?isInstanceOf  <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n      \"}\",\n      \"UNION\",\n      \"{\",\n        \"\\n#check for quotation whose source is a member the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> ?memberOf .\",\n          \"?memberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for quotation whose source is the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\",\n      \"}\"\n    ].join('');\n    }\n\n    var workGroupSparql = \"\";\n    if (state.search.searchParameters.workGroup){\n      workGroupSparql = [\n      \"<http://scta.info/resource/\" + state.search.searchParameters.workGroup + \"> <http://scta.info/property/hasExpression> ?toplevel_expression .\",\n      ].join('');\n    }\n\n    var expressionTypeSparql = \"\";\n    if (state.search.searchParameters.expressionType){\n      expressionTypeSparql = [\n        \"?quotation <http://scta.info/property/isMemberOf> ?expressionIsmemberOf .\",\n        \"?expressionIsmemberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + state.search.searchParameters.expressionType + \"> .\",\n      ].join('');\n    }\n//BEGIN condition for choosing ref quote or combo\n    var structureElementTypeSparql = \"\";\n    if (state.search.searchParameters.structureElementType === \"structureElementRef\"){\n      structureElementTypeSparql = [\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n        \"MINUS\",\n        \"{?quotation <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n        ].join('');\n    }\n    else if (state.search.searchParameters.structureElementType === \"structureElementRefDup\"){\n      structureElementTypeSparql = \"?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .\"\n    }\n    else if (state.search.searchParameters.structureElementType === \"structureElementQuote\"){\n      structureElementTypeSparql = \"?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\"\n    }\n    else if (state.search.searchParameters.structureElementType === \"allDup\"){\n      structureElementTypeSparql = [\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n        \"UNION\",\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> . }\"\n      ].join('');\n    }\n    else{\n      structureElementTypeSparql = [\n        \"{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .}\",\n        \"UNION\",\n        \"{{?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementRef> .}\",\n        \"MINUS\",\n        \"{?quotation <http://scta.info/property/isReferenceTo> ?isReferenceTo . }\",\n\n        \"}\"\n      ].join('');\n    }\n//END condition for choosing ref quote or combo\n    var query = \"\"\n    if (state.canonicalQuotation){\n      var canonicalQuotationId = state.canonicalQuotation.id;\n      var query = [\n            \"SELECT ?quotation ?isInstanceOf ?quotation_text ?toplevel_expression_title ?author_title ?citation ?ref ?refText \",\n            \"WHERE {\",\n            \"<\" + canonicalQuotationId + \"> <http://scta.info/property/hasInstance> ?quotation .\",\n            \"OPTIONAL {\",\n            \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n            \"}\",\n            \"OPTIONAL {\",\n            \"?quotation <http://scta.info/property/source> ?source .\",\n            \"}\",\n            expressionIdSparql,\n            quotationAuthorCoreSparql,\n            quotationWorkGroupSparql,\n            quotationWorkSparql,\n            quotationExpressionTypeSparql,\n            \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n            //\"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n            \"?quotation <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression . \",\n            expressionTypeSparql,\n            workGroupSparql,\n            \"?toplevel_expression <http://purl.org/dc/elements/1.1/title> ?toplevel_expression_title . \",\n            expressionAuthorCoreSparql,\n            \"OPTIONAL {\",\n              \"?quotation <http://scta.info/property/citation> ?citation . \",\n            \"}\",\n            \"OPTIONAL {\",\n              \"?ref <http://scta.info/property/isReferenceTo> ?quotation . \",\n              \"?ref <http://scta.info/property/structureElementText> ?refText . \",\n            \"}\",\n            expressionAuthorDateAfterSparqlFilter,\n            expressionAuthorDateBeforeSparqlFilter,\n            quotationAuthorDateAfterSparqlFilter,\n            quotationAuthorDateBeforeSparqlFilter,\n            \"}\",\n            \"LIMIT 100\"\n          ].join('');\n    }\n    else{\n      var query = [\n          \"SELECT ?quotation ?source ?isInstanceOf ?quotation_text ?toplevel_expression_title ?author_title ?citation ?ref ?refText ?refType \",\n          \"WHERE {\",\n          structureElementTypeSparql,\n          \"?quotation <http://scta.info/property/structureElementType> ?refType . \",\n          \"?quotation a <http://scta.info/resource/expression> .\",\n          \"OPTIONAL {\",\n          \"?quotation <http://scta.info/property/isInstanceOf> ?isInstanceOf .\",\n          \"}\",\n          \"OPTIONAL {\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"}\",\n          expressionIdSparql,\n          quotationAuthorCoreSparql,\n          quotationWorkGroupSparql,\n          quotationWorkSparql,\n          quotationExpressionTypeSparql,\n          \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n          \"?quotation <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression . \",\n          expressionTypeSparql,\n          workGroupSparql,\n          authorSparql,\n          \"?toplevel_expression <http://purl.org/dc/elements/1.1/title> ?toplevel_expression_title . \",\n          expressionAuthorCoreSparql,\n          \"OPTIONAL {\",\n            \"?quotation <http://scta.info/property/citation> ?citation . \",\n          \"}\",\n          \"OPTIONAL {\",\n            \"?ref <http://scta.info/property/isReferenceTo> ?quotation . \",\n            \"?ref <http://scta.info/property/structureElementText> ?refText . \",\n          \"}\",\n          expressionAuthorDateAfterSparqlFilter,\n          expressionAuthorDateBeforeSparqlFilter,\n          quotationAuthorDateAfterSparqlFilter,\n          quotationAuthorDateBeforeSparqlFilter,\n          \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n          \"}\",\n          \"ORDER BY ?quotation_text \",\n          \"LIMIT 100\"\n        ].join('');\n      }\n    dispatch(startQuotationsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings\n\n      dispatch(completeQuotationsFetch(results));\n    });\n  };\n}\n\n// Focused Quotation actions\nexport var changeQuotationsFocus = (id) => {\n  return{\n    type: \"CHANGE_QUOTATIONS_FOCUS\",\n    id\n  }\n}\n\nexport var clearFocusedQuotation = () => {\n  return{\n    type: \"CLEAR_FOCUSED_QUOTATION\"\n  }\n}\n\nexport var createFocusedQuotation = (quotation) => {\n  return{\n    type: \"CREATE_FOCUSED_QUOTATION\",\n    quotation\n  };\n};\n\n// Canonical Quotation\nexport var createCanonicalQuotation = (quotation) => {\n  return{\n    type: \"CREATE_CANONICAL_QUOTATION\",\n    quotation\n  };\n};\nexport var clearCanonicalQuotation = () => {\n  return{\n    type: \"CLEAR_CANONICAL_QUOTATION\"\n  };\n};\n\n\n// CanonicalQuotations (plural) Actions\nexport var changeCanonicalQuotationsFocus = (id) => {\n  return{\n    type: \"CHANGE_CANONICAL_QUOTATIONS_FOCUS\",\n    id\n  }\n}\nexport var clearCanonicalQuotationsFocus = () =>{\n  return{\n    type: \"CLEAR_CANONICAL_QUOTATIONS_FOCUS\",\n  }\n}\nexport var clearCanonicalQuotations = () => {\n  return{\n    type: \"CLEAR_CANONICAL_QUOTATIONS\"\n  };\n};\nexport var startCanonicalQuotationsFetch = () => {\n  return{\n    type: \"START_CANONICAL_QUOTATIONS_FETCH\"\n  };\n};\nexport var completeCanonicalQuotationsFetch = (canonicalQuotations) => {\n  return{\n    type: \"COMPLETE_CANONICAL_QUOTATIONS_FETCH\",\n    canonicalQuotations\n  };\n};\nexport var fetchCanonicalQuotations = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var searchText = state.search.searchParameters.searchText || \"\";\n\n\n    var quotationInstanceSparql = \"\"\n    if (state.search.searchParameters.expressionId || state.search.searchParameters.expressionAuthor || state.search.searchParameters.workGroup){\n      quotationInstanceSparql = [\n      \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n      ].join('');\n    }\n    var topLevelExpressionSparql = \"\"\n    if (state.search.searchParameters.expressionAuthor || state.search.searchParameters.workGroup){\n      topLevelExpressionSparql = [\n      \"?quotationInstance <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression .\",\n      ].join('');\n    }\n\n    // var quotationTypeSparql = \"\"\n    // if (state.search.searchParameters.quotationType){\n    //   var quotationTypeSparql = \"?quotation <http://scta.info/property/quotationType>\t<http://scta.info/resource/\" + state.search.searchParameters.quotationType + \"> .\"\n    // }\n    var expressionIdSparql = \"\";\n    if (state.search.searchParameters.expressionId || state.search.searchParameters.expressionPart){\n      var searchShortId = (state.search.searchParameters.expressionPart) ? state.search.searchParameters.expressionPart : state.search.searchParameters.expressionId\n      var expressionIdSparql = [\n      \"?quotationInstance <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> .\",\n      ].join('');\n    }\n\n//END Expression author sparql for canonical quotations\n    let expressionAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorType){\n      expressionAuthorTypeSparql = \"?expressionAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthorType + \">  . \"\n    }\n    //Begin expression author date filter for expression author\n    let expressionAuthorDateSparql = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter || state.search.searchParameters.expressionAuthorDateBefore){\n      expressionAuthorDateSparql =\n          \"?expressionAuthor <http://scta.info/property/dateOfBirth> ?expressionAuthorDateOfBirth .\"\n    }\n    let expressionAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateAfter){\n      expressionAuthorDateAfterSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth >= '\" + state.search.searchParameters.expressionAuthorDateAfter + \"').\"\n    }\n    let expressionAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.expressionAuthorDateBefore){\n        expressionAuthorDateBeforeSparqlFilter = \"FILTER (?expressionAuthorDateOfBirth <= '\" + state.search.searchParameters.expressionAuthorDateBefore + \"').\"\n    }\n    //END expression author date filter for expression author\n\n    var authorSparql = \"\";\n    if (state.search.searchParameters.expressionAuthor){\n      authorSparql = \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + state.search.searchParameters.expressionAuthor + \"> .\"\n    }\n\n    var expressionAuthorCoreSparql = [\n      \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n      \"?quotationInstance <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression .\",\n      \"?toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?expressionAuthor . \",\n      expressionAuthorTypeSparql,\n      expressionAuthorDateSparql,\n      authorSparql\n    ].join('');\n\n//END Expression author sparql for canonical quotations\n\n//BEGIN Quotation author sparql for canonical quotations\n    let quotationAuthorTypeSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorType){\n      const searchShortId = state.search.searchParameters.quotationAuthorType;\n      quotationAuthorTypeSparql = \"?quotationAuthor <http://scta.info/property/personType> <http://scta.info/resource/\" + searchShortId + \">  . \"\n    }\n    //Begin quotation author date filter for expression author\n    let quotationAuthorDateSparql = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter || state.search.searchParameters.quotationAuthorDateBefore){\n      quotationAuthorDateSparql =\n          \"?quotationAuthor <http://scta.info/property/dateOfBirth> ?quotationAuthorDateOfBirth .\"\n    }\n    let quotationAuthorDateAfterSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateAfter){\n      quotationAuthorDateAfterSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth >= '\" + state.search.searchParameters.quotationAuthorDateAfter + \"').\"\n    }\n    let quotationAuthorDateBeforeSparqlFilter = \"\";\n    if (state.search.searchParameters.quotationAuthorDateBefore){\n        quotationAuthorDateBeforeSparqlFilter = \"FILTER (?quotationAuthorDateOfBirth <= '\" + state.search.searchParameters.quotationAuthorDateBefore + \"').\"\n    }\n    //END quotation author date filter for expression author\n    var quotationAuthorSparql = \"\";\n    if (state.search.searchParameters.quotationAuthor){\n      var searchShortId = (state.search.searchParameters.quotationAuthor);\n      quotationAuthorSparql = \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> <http://scta.info/resource/\" + searchShortId + \">  . \"\n    }\n    var quotationAuthorCoreSparql = [\n      \"?quotation <http://scta.info/property/source> ?source .\",\n      \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n      \"?source_toplevel_expression <http://www.loc.gov/loc.terms/relators/AUT> ?quotationAuthor .\",\n      quotationAuthorTypeSparql,\n      quotationAuthorDateSparql,\n      quotationAuthorSparql\n    ].join('');\n\n//END Quotation author sparql for canonical quotations\n\n    var quotationWorkGroupSparql = \"\";\n    if (state.search.searchParameters.quotationWorkGroup){\n      var searchShortId = (state.search.searchParameters.quotationWorkGroup);\n      quotationWorkGroupSparql = [\n        \"?quotation <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isPartOfTopLevelExpression> ?source_toplevel_expression . \",\n        \"<http://scta.info/resource/\" + state.search.searchParameters.quotationWorkGroup + \"> <http://scta.info/property/hasExpression> ?source_toplevel_expression .\",\n      ].join('');\n    }\n\n    var quotationWorkSparql = \"\";\n    if (state.search.searchParameters.quotationWork || state.search.searchParameters.quotationWorkPart){\n      var searchShortId = (state.search.searchParameters.quotationWorkPart) ? state.search.searchParameters.quotationWorkPart : state.search.searchParameters.quotationWork\n\n\n    quotationWorkSparql = [\n      \"{\",\n        \"\\n#check for canonical quotation whose source is memberOf the search expression\\n\",\n        \"?quotation <http://scta.info/property/source> ?source .\",\n        \"?source <http://scta.info/property/isMemberOf> <http://scta.info/resource/\" + searchShortId + \"> . \",\n      \"}\",\n      \"UNION\",\n      \"\\n#check for canonical quotation whose source IS the search expression\\n\",\n      \"{\",\n        \"?quotation <http://scta.info/property/source> <http://scta.info/resource/\" + searchShortId + \"> .\",\n      \"}\"\n      ].join('');\n    }\n\n    let quotationExpressionTypeSparql = \"\";\n    if (state.search.searchParameters.quotationExpressionType){\n      const quotationExpressionTypeShortId = state.search.searchParameters.quotationExpressionType\n\n      quotationExpressionTypeSparql = [\n        \"{\",\n          \"\\n#check for canonical quotation whose source is memberOf the search expression\\n\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/isMemberOf> ?memberOf .\",\n          \"?memberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> . \",\n        \"}\",\n        \"UNION\",\n        \"\\n#check for canonical quotation whose source IS the search expression\\n\",\n        \"{\",\n          \"?quotation <http://scta.info/property/source> ?source .\",\n          \"?source <http://scta.info/property/expressionType> <http://scta.info/resource/\" + quotationExpressionTypeShortId + \"> .\",\n        \"}\"\n        ].join('');\n      }\n\n  var workGroupSparql = \"\";\n    if (state.search.searchParameters.workGroup){\n      workGroupSparql = [\n      // \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n      // \"?quotationInstance <http://scta.info/property/isPartOfTopLevelExpression> ?toplevel_expression .\",\n      \"<http://scta.info/resource/\" + state.search.searchParameters.workGroup + \"> <http://scta.info/property/hasExpression> ?toplevel_expression .\",\n      ].join('');\n\n    }\n\n    let expressionTypeSparql = \"\";\n    if (state.search.searchParameters.expressionType){\n      expressionTypeSparql = [\n\n        \"?quotation <http://scta.info/property/hasInstance> ?quotationInstance .\",\n        \"?quotationInstance <http://scta.info/property/isMemberOf> ?expressionIsMemberOf .\",\n        \"?expressionIsMemberOf <http://scta.info/property/expressionType> <http://scta.info/resource/\" + state.search.searchParameters.expressionType + \"> .\",\n      ].join('');\n    }\n\n\n    var query = [\n          \"SELECT DISTINCT ?quotation ?citation ?quotation_text \",\n          \"WHERE {\",\n          \"?quotation a <http://scta.info/resource/quotation> .\",\n          \"?quotation <http://scta.info/property/quotation> ?quotation_text .\",\n          expressionTypeSparql,\n          quotationInstanceSparql,\n          topLevelExpressionSparql,\n          expressionAuthorCoreSparql,\n          workGroupSparql,\n          quotationAuthorCoreSparql,\n          quotationWorkGroupSparql,\n          quotationWorkSparql,\n          quotationExpressionTypeSparql,\n          expressionIdSparql,\n          \"OPTIONAL { \",\n          \"?quotation <http://scta.info/property/citation> ?citation .\",\n          \"}\",\n          quotationAuthorDateAfterSparqlFilter,\n          quotationAuthorDateBeforeSparqlFilter,\n          expressionAuthorDateBeforeSparqlFilter,\n          expressionAuthorDateAfterSparqlFilter,\n          \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n          \"}\",\n          \"ORDER BY ?citation \",\n          \"LIMIT 1000\"\n        ].join('');\n    dispatch(startQuotationsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings\n      dispatch(completeCanonicalQuotationsFetch(results));\n    });\n  };\n}\n\n//maifestation Quotations Actions\n// CanonicalQuotations (plural) Actions\nexport var changeManifestationQuotationsFocus = (id) => {\n  return{\n    type: \"CHANGE_MANIFESTATION_QUOTATIONS_FOCUS\",\n    id\n  }\n}\nexport var clearManifestationQuotationsFocus = () =>{\n  return{\n    type: \"CLEAR_MANIFESTATION_QUOTATIONS_FOCUS\",\n  }\n}\nexport var clearManifestationQuotations = () => {\n  return{\n    type: \"CLEAR_MANIFESTATION_QUOTATIONS\"\n  };\n};\nexport var startManifestationQuotationsFetch = () => {\n  return{\n    type: \"START_MANIFESTATION_QUOTATIONS_FETCH\"\n  };\n};\nexport var completeManifestationQuotationsFetch = (manifestationQuotations) => {\n  return{\n    type: \"COMPLETE_MANIFESTATION_QUOTATIONS_FETCH\",\n    manifestationQuotations\n  };\n};\nexport var fetchManifestationQuotations = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var searchText = state.search.searchParameters.searchText || \"\";\n\n    var query = \"\"\n\n    if (state.focusedQuotation.id != undefined){\n      var expressionQuotationId = state.focusedQuotation.id;\n      query = [\n            \"SELECT ?quotation ?isManifestationOf ?quotation_text \",\n            \"WHERE {\",\n            \"<\" + expressionQuotationId + \"> <http://scta.info/property/hasManifestation> ?quotation .\",\n            \"?quotation <http://scta.info/property/isManifestationOf> ?isManifestationOf .\",\n            \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n            \"}\"\n          ].join('');\n    }\n    else{\n      query = [\n          \"SELECT ?quotation ?isManifestationOf ?quotation_text \",\n          \"WHERE {\",\n          \"?quotation <http://scta.info/property/structureElementType> <http://scta.info/resource/structureElementQuote> .\",\n          \"?quotation a <http://scta.info/resource/manifestation> .\",\n          \"?quotation <http://scta.info/property/isManifestationOf> ?isManifestationOf .\",\n          \"?quotation <http://scta.info/property/structureElementText> ?quotation_text .\",\n          \"FILTER (REGEX(STR(?quotation_text), '\" + searchText + \"', 'i')) .\",\n          \"}\",\n          \"ORDER BY ?isInstanceOf \",\n          \"LIMIT 100\"\n        ].join('');\n      }\n\n    dispatch(startManifestationQuotationsFetch());\n    axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n      var results = res.data.results.bindings\n\n      dispatch(completeManifestationQuotationsFetch(results));\n    });\n  };\n}\n\n//paragraph actions\n\nexport var clearParagraph = () => {\n  return{\n    type: \"CLEAR_PARAGRAPH\"\n  };\n};\n\nexport var startParagraphFetch = () => {\n  return{\n    type: \"START_PARAGRAPH_FETCH\"\n  };\n};\nexport var completeParagraphFetch = (paragraph) => {\n  return{\n    type: \"COMPLETE_PARAGRAPH_FETCH\",\n    paragraph\n  };\n};\nexport var fetchParagraph = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.focusedQuotation){\n      var quotationId = state.focusedQuotation.id;\n      //var expressionQuotationId = quotationid;\n      var query = \"\";\n      var idType = state.focusedQuotation.type\n\n      if (idType === \"expression\"){\n        query = [\n          \"CONSTRUCT\",\n          \"{\",\n            \"?expression_paragraph <http://scta.info/property/hasDefaultManifestation> ?manifestation_paragraph ;\",\n            \"<http://scta.info/property/hasManifestations> ?manifestations ;\",\n            \"<http://scta.info/property/hasDefaultTranscription> ?transcription_paragraph ;\",\n            \"<http://scta.info/property/isPartOfStructureItem> ?transcription_item ;\",\n            \"<http://scta.info/property/hasDocument> ?transcription_item_file ;\",\n            \"<http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\",\n          \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?expression_paragraph .\",\n            \"?expression_paragraph <http://scta.info/property/hasCanonicalManifestation> ?manifestation_paragraph .\",\n            \"?expression_paragraph <http://scta.info/property/hasManifestation> ?manifestations .\",\n            \"?manifestation_paragraph <http://scta.info/property/isManifestationOf> ?expression_paragraph .\",\n            \"?manifestation_paragraph <http://scta.info/property/hasCanonicalTranscription> ?transcription_paragraph .\",\n            \"?transcription_paragraph <http://scta.info/property/isPartOfStructureItem> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_paragraph <http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\"\n          ].join('');\n        }\n      else if (idType === \"manifestation\"){\n        query = [\n          \"CONSTRUCT\",\n          \"{\",\n            \"?expression_paragraph <http://scta.info/property/hasDefaultManifestation> ?manifestation_paragraph ;\",\n             \"<http://scta.info/property/hasManifestations> ?manifestations ;\",\n             \"<http://scta.info/property/hasDefaultTranscription> ?transcription_paragraph ;\",\n             \"<http://scta.info/property/isPartOfStructureItem> ?transcription_item ;\",\n             \"<http://scta.info/property/hasDocument> ?transcription_item_file ;\",\n             \"<http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\",\n          \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?manifestation_paragraph . \",\n            \"?manifestation_paragraph <http://scta.info/property/isManifestationOf> ?expression_paragraph .\",\n            \"?expression_paragraph <http://scta.info/property/hasManifestation> ?manifestations .\",\n            \"?manifestation_paragraph <http://scta.info/property/hasCanonicalTranscription> ?transcription_paragraph .\",\n            \"?transcription_paragraph <http://scta.info/property/isPartOfStructureItem> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_paragraph <http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\"\n        ].join('');\n      }\n\n      dispatch(startParagraphFetch());\n      axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n        var results = res.data\n        if (results){\n          axios.get(results.hasXML.replace(\"http://\", \"https://\")).then(function(res2){\n            var paragraph = {\n              expression_id: results[\"@id\"],\n              manifestations: results.hasManifestations,\n              manifestation_id: results.hasDefaultManifestation,\n              transcription_id: results.hasDefaultTranscription,\n              transcription_item_file: results.hasDocument.replace(\"http://\", \"https://\"),\n              paragraph_text: res2.data\n            }\n            dispatch(completeParagraphFetch(paragraph));\n            dispatch(fetchReview());\n          });\n        }\n      }).catch((err) => {\n        console.log(\"error:\", err)\n      })\n      ;\n    };\n  };\n};\nexport var startReviewFetch = () => {\n  return{\n    type: \"START_REVIEW_FETCH\"\n  };\n};\nexport var completeReviewFetch = (review) => {\n  return{\n    type: \"COMPLETE_REVIEW_FETCH\",\n    review\n  };\n};\nexport var fetchReview = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.paragraph.transcription_item_file){\n      var url = state.paragraph.transcription_item_file;\n      var reviewUrl = \"https://dll-review-registry.scta.info/api/v1/reviews?url=\" + url + \"&society=MAA\";\n      dispatch(startReviewFetch());\n      axios.get(reviewUrl).then(function(res){\n        var review = res.data[0];\n        dispatch(completeReviewFetch(review));\n      });\n    };\n  };\n};\n\n//Source Paragraph Actions\n\nexport var clearSourceParagraph = () => {\n  return{\n    type: \"CLEAR_SOURCE_PARAGRAPH\"\n  };\n};\n\nexport var startSourceParagraphFetch = () => {\n  return{\n    type: \"START_SOURCE_PARAGRAPH_FETCH\"\n  };\n};\nexport var completeSourceParagraphFetch = (sourceParagraph) => {\n  return{\n    type: \"COMPLETE_SOURCE_PARAGRAPH_FETCH\",\n    sourceParagraph\n  };\n};\nexport var fetchSourceParagraph = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.focusedQuotation){\n      var sourceParagraphid = state.focusedQuotation.source;\n      //var expressionQuotationId = quotationid;\n      var query = [\n        \"CONSTRUCT\",\n        \"{\",\n          \"?expression_paragraph <http://scta.info/property/hasDefaultManifestation> ?manifestation_paragraph ;\",\n           \"<http://scta.info/property/hasManifestations> ?manifestations ;\",\n           \"<http://scta.info/property/hasDefaultTranscription> ?transcription_paragraph ;\",\n           \"<http://scta.info/property/isPartOfStructureItem> ?transcription_item ;\",\n           \"<http://scta.info/property/hasDocument> ?transcription_item_file ;\",\n           \"<http://scta.info/property/hasXML> ?xml_url .\",\n        \"}\",\n          \"WHERE { \",\n          \"BIND(<\" + sourceParagraphid + \"> as ?expression_paragraph) .\",\n          \"?expression_paragraph <http://scta.info/property/hasCanonicalManifestation> ?manifestation_paragraph .\",\n          \"?expression_paragraph <http://scta.info/property/hasManifestation> ?manifestations .\",\n          \"?manifestation_paragraph <http://scta.info/property/hasCanonicalTranscription> ?transcription_paragraph .\",\n          \"?transcription_paragraph <http://scta.info/property/isPartOfStructureItem> ?transcription_item .\",\n          \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n          \"?transcription_paragraph <http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\"\n        ].join('');\n\n      dispatch(startSourceParagraphFetch());\n      axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n        var results = res.data\n        if (results){\n          axios.get(results.hasXML.replace(\"http://\", \"https://\")).then(function(res2){\n            var sourceParagraph = {\n              expression_id: results[\"@id\"],\n              manifestations: results.hasManifestations,\n              manifestation_id: results.hasDefaultManifestation,\n              transcription_id: results.hasDefaultTranscription,\n              transcription_item_file: results.hasDocument.replace(\"http://\", \"https://\"),\n              paragraph_text: res2.data\n            }\n            dispatch(completeSourceParagraphFetch(sourceParagraph));\n          //dispatch(fetchSourceParagraphReview());\n          });\n        }\n      });\n    };\n  };\n};\nexport var startSourceParagraphReviewFetch = () => {\n  return{\n    type: \"START_SOURCE_PARAGRAPH_REVIEW_FETCH\"\n  };\n};\nexport var completeSourceParagraphReviewFetch = (review) => {\n  return{\n    type: \"COMPLETE_SOURCE_PARAGRAPH_FETCH\",\n    review\n  };\n};\nexport var fetchSourceParagraphReview = () =>{\n  return (dispatch, getState) => {\n    var state = getState();\n\n    if (state.sourceParagraph.transcription_item_file){\n      var url = state.sourceParagraph.transcription_item_file;\n      var reviewUrl = \"https://dll-review-registry.scta.info/api/v1/reviews?url=\" + url + \"&society=MAA\";\n      dispatch(startSourceParagraphFetch());\n      axios.get(reviewUrl).then(function(res){\n        var review = res.data[0];\n        dispatch(completeSourceParagraphReviewFetch(review));\n      });\n    };\n  };\n};\n\n// Full text actions\n\n//paragraph actions\n\nexport var toggleFullTextDisplay = (current) => {\n  return{\n    type: \"TOGGLE_FULL_TEXT_DISPLAY\",\n    current\n  };\n}\nexport var clearFullText = () => {\n  return{\n    type: \"CLEAR_FULL_TEXT\"\n  };\n};\n\nexport var startFullTextFetch = () => {\n  return{\n    type: \"START_FULL_TEXT_FETCH\"\n  };\n};\nexport var completeFullTextFetch = (text) => {\n  return{\n    type: \"COMPLETE_FULL_TEXT_FETCH\",\n    text\n  };\n};\nexport var fetchFullText = (source=false) =>{\n  return (dispatch, getState) => {\n    var state = getState();\n    var query = \"\";\n    if (state.focusedQuotation){\n      var quotationId = state.focusedQuotation.id;\n      //var expressionQuotationId = quotationid;\n      var idType = state.focusedQuotation.type\n\n      if (source === true){\n        query = [\n          \"SELECT ?expression_item ?manifestation_item ?transcription_item ?xml_url ?transcription_item_file \",\n          \"WHERE { \",\n          \"BIND(<\" + state.focusedQuotation.source + \"> AS ?expression_block) .\",\n          \"?expression_block <http://scta.info/property/isPartOfStructureItem> ?expression_item .\",\n          \"?expression_item <http://scta.info/property/hasCanonicalManifestation> ?manifestation_item .\",\n          \"?manifestation_item <http://scta.info/property/hasCanonicalTranscription> ?transcription_item .\",\n          \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n          \"?transcription_item <http://scta.info/property/hasXML> ?xml_url .\",\n          \"}\"\n        ].join('');\n      }\n      else if (idType === \"expression\"){\n        query = [\n            \"SELECT ?expression_item ?manifestation_item ?transcription_item ?xml_url ?transcription_item_file \",\n            \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?expression_block .\",\n            \"?expression_block <http://scta.info/property/isPartOfStructureItem> ?expression_item .\",\n            \"?expression_item <http://scta.info/property/hasCanonicalManifestation> ?manifestation_item .\",\n            \"?manifestation_item <http://scta.info/property/hasCanonicalTranscription> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_item <http://scta.info/property/hasXML> ?xml_url .\",\n            \"}\"\n          ].join('');\n        }\n      else if (idType === \"manifestation\"){\n        query = [\n            \"SELECT ?expression_item ?manifestation_item ?transcription_item ?xml_url ?transcription_item_file \",\n            \"WHERE { \",\n            \"<\" + quotationId + \"> <http://scta.info/property/isPartOfStructureBlock> ?manifestation_block . \",\n            \"?manifestation_block <http://scta.info/property/isPartOfStructureItem> ?manifestation_item .\",\n            \"?manifestation_item <http://scta.info/property/isManifestationOf> ?expression_item .\",\n            \"?manifestation_item <http://scta.info/property/hasCanonicalTranscription> ?transcription_item .\",\n            \"?transcription_item <http://scta.info/property/hasDocument> ?transcription_item_file .\",\n            \"?transcription_item <http://scta.info/property/hasXML> ?xml_url .\",\n            \"}\"\n          ].join('');\n      }\n      console.log(query)\n      dispatch(startFullTextFetch());\n      axios.get(sparqlEndpoint, {params: {\"query\" : query, \"output\": \"json\"}}).then(function(res){\n        var results = res.data.results.bindings[0];\n        console.log(\"full text results\", results)\n        axios.get(results.xml_url.value.replace(\"http://\", \"https://\")).then(function(res2){\n          var text = {\n            expression_id: results.expression_item.value,\n            manifestation_id: results.manifestation_item.value,\n            transcription_id: results.transcription_item.value,\n            transcription_item_file: results.transcription_item_file ? results.transcription_item_file.value.replace(\"http://\", \"https://\") : \"\",\n            text: res2.data\n          }\n          dispatch(completeFullTextFetch(text));\n          dispatch(fetchReview());\n        });\n      });\n    };\n  };\n};\n"],"sourceRoot":""}